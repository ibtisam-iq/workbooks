ubuntu@ip-172-31-17-65:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
143 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: ip-172-31-17-65
🔄 Change hostname? Enter new name (or press Enter to keep current): IbtisamX

🖥️ Updating hostname to 'IbtisamX'...

✅ Hostname updated successfully.
========================================
📌 System Information
========================================
🔹 Hostname       : IbtisamX
🔹 Private IP     : 172.31.17.65
🔹 Public IP      : 54.145.225.8
🔹 MAC Address    : 0a:ff:f5:87:4c:31
🔹 Network        : 127.0.0.1/8,172.31.17.65/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.4G/23G
🔹 CPU Load       :  0.70, 0.26, 0.10
🔹 UUID           : ec297170302e9eeca45d4e21d2a6f5ad
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet set on hold.
kubeadm set on hold.
kubectl set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: downloading    |--------------------------------------|    0.0 B/1022.0 B 
elapsed: 0.2 s                                                                    total:  9.0 Ki (44.5 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    downloading    |--------------------------------------|    0.0 B/3.5 MiB 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   downloading    |--------------------------------------|    0.0 B/581.0 B 
elapsed: 0.3 s                                                                    total:  10.0 K (33.2 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    waiting        |--------------------------------------| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.4 s                                                                    total:  10.6 K (26.3 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.5 s                                                                    total:  10.6 K (21.1 KiB/s)                                      
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 163.026574ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ K8s-Node-Init.sh executed successfully.


🔧 Disabling swap...
✅ Swap disabled successfully.

🔄 Restarting containerd...
✅ Containerd restarted successfully.

🔄 Restarting kubelet service...
✅ Kubelet is active and running.

🔍 Checking necessary ports...
tcp        0      0 127.0.0.1:40407         0.0.0.0:*               LISTEN      5783/containerd     
✅ Required ports are open.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully.

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0317 23:07:12.521550    5929 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [IbtisamX kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.17.65]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [IbtisamX localhost] and IPs [172.31.17.65 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [IbtisamX localhost] and IPs [172.31.17.65 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 1.00202946s
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.001663149s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
error execution phase upload-config/kubelet: error writing CRISocket for this node: nodes "IbtisamX" not found
To see the stack trace of this error execute with --v=5 or higher

❌ kubeadm init failed. Exiting...
ubuntu@ip-172-31-17-65:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: IbtisamX
🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: IbtisamX
========================================
📌 System Information
========================================
🔹 Hostname       : IbtisamX
🔹 Private IP     : 172.31.17.65
🔹 Public IP      : 54.145.225.8
🔹 MAC Address    : 0a:ff:f5:87:4c:31
🔹 Network        : 127.0.0.1/8,172.31.17.65/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 33G/170G
🔹 CPU Load       :  0.29, 0.27, 0.14
🔹 UUID           : ec297170302e9eeca45d4e21d2a6f5ad
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 9.101496ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ K8s-Node-Init.sh executed successfully.


🔧 Disabling swap...
✅ Swap disabled successfully.

🔄 Restarting containerd...
✅ Containerd restarted successfully.

🔄 Restarting kubelet service...
✅ Kubelet is active and running.

🔍 Checking necessary ports...
tcp        0      0 127.0.0.1:33937         0.0.0.0:*               LISTEN      8331/containerd     
tcp6       0      0 :::6443                 :::*                    LISTEN      6307/kube-apiserver 
✅ Required ports are open.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully.

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
error execution phase preflight: [preflight] Some fatal errors occurred:
	[ERROR Port-6443]: Port 6443 is in use
	[ERROR Port-10259]: Port 10259 is in use
	[ERROR Port-10257]: Port 10257 is in use
	[ERROR FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml]: /etc/kubernetes/manifests/kube-apiserver.yaml already exists
	[ERROR FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml]: /etc/kubernetes/manifests/kube-controller-manager.yaml already exists
	[ERROR FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml]: /etc/kubernetes/manifests/kube-scheduler.yaml already exists
	[ERROR FileAvailable--etc-kubernetes-manifests-etcd.yaml]: /etc/kubernetes/manifests/etcd.yaml already exists
	[ERROR Port-10250]: Port 10250 is in use
	[ERROR Port-2379]: Port 2379 is in use
	[ERROR Port-2380]: Port 2380 is in use
	[ERROR DirAvailable--var-lib-etcd]: /var/lib/etcd is not empty
[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`
To see the stack trace of this error execute with --v=5 or higher

❌ kubeadm init failed. Exiting...
ubuntu@ip-172-31-17-65:~$ sudo /etc/kubernetes/
sudo: /etc/kubernetes/: command not found
ubuntu@ip-172-31-17-65:~$ cd /etc/kubernetes/
ubuntu@ip-172-31-17-65:/etc/kubernetes$ ls
admin.conf  controller-manager.conf  kubelet.conf  manifests  pki  scheduler.conf  super-admin.conf
ubuntu@ip-172-31-17-65:/etc/kubernetes$ cat admin.conf 
cat: admin.conf: Permission denied
ubuntu@ip-172-31-17-65:/etc/kubernetes$ sudo cat admin.conf 
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJYXpPZjBlNFNnWU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1UY3lNekF5TVRKYUZ3MHpOVEF6TVRVeU16QTNNVEphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURiaVZHVHJHTU82Vk8ya0p2Mm9QTFoxcDZocDI3VHNXSEZpTlVzSDdDa1FsYkR3ZGFiVHo5cHFMUjEKRGxaa1BkWHFEMzF1SlMwYnhOWlhIcndqLysxbllHNktlNmQrcW5YMlpHWW1UVjlGYjNzano0QVNVMENBazZzcApad0V5VHR1bWc1R1Q1VHpYT0x4M0lwL25TVklTVEEyTU1jREs2QTlLSkNscHN4akZXc1VpWm1KSDFSalk3QXFNCkdJZmtjeXFTVnR3ZDNzRVo1dnhXM1VTVDBHU2FoZkd6bHdYdGVpbWMza1MrbDdSaW1iMHZ2OHBuOGc3anU2cTYKMGdUQ3pMQmF2Wmp3UktQcDg2RGU1Q2lyS3BDTXRyaGhvTDZRcmkvYUtNVEp4QUx3K2c2UDk3czl1eVUrNmFmOQp0VFNQa3BSNW1kcmZLTi93c2lJdEhvYWZCZ2hSQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSSCtGQm9yT0RxWGRjLzV4QU9aVXNOSXpzUXVUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjRpWXVRSW5jcwozb0dmb0U4SU1YbWpNMWRwSkdPMFpIUDVHdGZENVBxbEhXN1NuOWMrYXRxR01vbW5FNmh5aXBDOTVyWUtieWJZClNvdk9xbWRGNXkvbWxGT1YwN21WY0pSR0R5dXoyK3Q2Tyt2UjJtSFg4M2JGZE5xNFR1WEVUNkt1SjFYV3FwSHQKS0hsTU5rQjdOcERHRFZmOVpIWDZYRHU3Nk5GalhEL3FhM2RHSUNvS2tZTlZXODIrcnRScno2S2RMbDJ1bWNSVgpNbEFNMjEyYkpsbFN5WW12Rml0TmhyOWRSMDJwK2ZNNmxmTStEbDQrYXkwUXRxaDZsMDR4bkxQTHp0cWxIandXCmlaMVV5M0ovcEYyOW1saVR5S253RkdQTi9tZUFUMkVqMC9GTHRxbzVrOW00NzlFYlE0NEw3ME5YOHZvRzU0UUEKQVJrT2l3QlMrb09sCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://172.31.17.65:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJWG54dVRqUGJnNEV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1UY3lNekF5TVRKYUZ3MHlOakF6TVRjeU16QTNNVEphTUR3eApIekFkQmdOVkJBb1RGbXQxWW1WaFpHMDZZMngxYzNSbGNpMWhaRzFwYm5NeEdUQVhCZ05WQkFNVEVHdDFZbVZ5CmJtVjBaWE10WVdSdGFXNHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdXNDUUYKdmVBMTgyY0JNMDFGekJnRjFaTi9FajFlcXFUMzhvMlVWTjV5MEhlN2VORTRIbzJNWFQ1UnZLMnJTTlpCVXhDNgpFWjYwdzlSenhpdW5TckY5cldQdjBtRWQySzBjVjZsRmJsQVJZblNaNjNJTlNDalVlL3g5alBXc2JieUZqNGJ2CjcwenJuWXhxOHdwdVBEZ2RuZnErcUlKNERIZm5ITW5RVjV1T1ZxUVBydmNqMm9iRUM3ajhaZjc5REJvSTBUai8KVVpiTitOREN1dkVZaHBaaWQ5VCttcm1DUmJGRkxFU0t2VDRNTlU3L1NWUzd4VHU1UmN2QjRoUVFrazhpdFBhbQpPTllKZGlpaXVvN2FtS29xS2JwNlRVNXU4OEk0N0JtUnpydmpzMnFCOUZjQlhnbXFSUW1YRXY0c0ZiVnZOSUNYCnc1azBoMVBIUFVOeFNIRDFBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUsKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkVmNFVHaXM0T3BkMXovbgpFQTVsU3cwak94QzVNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJpTllTeURKU0pWVWlGQVJZQlZ3UEhOZkhCCkhwSGh5N0lsTy95WVA1R0RLQ2YwUmIwaVdRNGVBd3hNYTlCMTJxVWRzeStNbk4wR0Vtc0Q5OXZldlpSVWo4SC8KbElUMHRMVm9NcFhrWjFEblJuTGtCUnNaQkpYV09rRDMyY0o4L3p5K25XbXllQ2xJOEU5MFRWRXhzcGNjTlowawp6cTNpVTdYMjdRNEhpM3hYZWdDcDBwNW1RSEZWa1FaNGVZemFRRU5mUFZZN21xYjFhT2lOcjlaemRRd3h0QnNtCkJaSmNRc2NoUExYaEtMcFBYU2pCZUcvZVNKcnJKclJ2UHl4NWJZQ1lkVFk3azdGeE1uRE16RGo3NHpsY05FR1EKbXlsd0Q0d1Y3MDhQNDNzdWxkTkVNV3l3NGE5SDdsNHUyaHVlVFVIUlNXTlRXc01ldjBPeWxEbWVoT1A4Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcnJBa0JiM2dOZk5uQVROTlJjd1lCZFdUZnhJOVhxcWs5L0tObEZUZWN0QjN1M2pSCk9CNk5qRjArVWJ5dHEwaldRVk1RdWhHZXRNUFVjOFlycDBxeGZhMWo3OUpoSGRpdEhGZXBSVzVRRVdKMG1ldHkKRFVnbzFIdjhmWXoxckcyOGhZK0c3KzlNNjUyTWF2TUtianc0SFozNnZxaUNlQXgzNXh6SjBGZWJqbGFrRDY3MwpJOXFHeEF1NC9HWCsvUXdhQ05FNC8xR1d6ZmpRd3JyeEdJYVdZbmZVL3BxNWdrV3hSU3hFaXIwK0REVk8vMGxVCnU4VTd1VVhMd2VJVUVKSlBJclQycGpqV0NYWW9vcnFPMnBpcUtpbTZlazFPYnZQQ09Pd1prYzY3NDdOcWdmUlgKQVY0SnFrVUpseEwrTEJXMWJ6U0FsOE9aTklkVHh6MURjVWh3OVFJREFRQUJBb0lCQUZhWC9CTllqMWRQSkFWbApUKzNFZ1RnTEtrVjRYakdhTjVLdGl0ODN2dGw5VzR6MEZBcFVvdWdzcEtMUisra0hmeVg4cmpMK1h3VE9lbmMxCmloZ3duNUZrTFVFSnNaaWcreGNzb1QxSXRLb1pleUY5cEJqUFoyWUZYQ0ZFaWRnQ3djd1hYTlY5YzB6czJWbCsKeHZIa0toRU1hZXF2RDVYQTRJTVJNejF5NENxTEdEMDNJd0ZWTGp0ZHpsdnZUTGk4QjhHb3IvSm1QbVBpeUpSUwpKdmNXVUdlUmEyWVNJVzhScUFuSTM5RCtodHB4d3k2SWxpVEFicXhQayt6UVBKK0g0WVU3QmZUNFREMldzK1pUCjRTSVc1Yk5WY2c3T1MyWWNTY2w2Si9HNzRhNERrQVhmb1ZzUzBuKzFpT2tMUzRFSjJPOGk1dDJvVGU1d1ROVy8KRHptdkovVUNnWUVBNG1nSWcwQ05CWmM2eHdGTGZnV3BKbUtSOXBvZHJmZ1VPSW1XZGVDMXpuaElPcmNFZXl1cQp6T2N1dnlWS0lUYUVLdTlqQk5DYU9sZjZuYTFkc2UyVGRlVnBtVU56TVdEaW13bmtsRE9FUDRQaGg4MERlMi9OCkFKR0RibC83R1ViT3NLQ00vMjJrK3pFL2dtRHMyR3p0OWxLamZoajFTNFJHQ2ROVFFVYnordjhDZ1lFQXhZV0UKeFlHS2cvdmpkU3VmdEJHQXlDZGgzU2JFZHBqWU9pUmxlVk11VERybEl0NTJaMjVxL1AwcEgrcnZlQ1F5UUQ4dQprelEwTUxHdEpLc1NrMnVuV1F1bFNHaThPWSt4Q1ZoeERpditKQ3NYZHVpVFJkUnZtOHJDWTFBK3d2WWVIY3ZnCng3WjlCWWhWRXBqOHQ3TG1JeUl0cUdIY2E0QTNYWjcvemhKN1dBc0NnWUVBemZjZVoyajk0YXdtU0l3aEJWQloKQlJaKyt2eFJLOGFYZnFlTVBVaGpuS1ZIOEVJMnpXWjRSMWU0NnlNZFFRRzdVdVBjRExGSTNQTFVoMFVFQzYyNQpqSE5ia1pZTzRVam1YV3l1aVRRa2h6T09wR0FaWHQzaWZUWGpmekhKMk1EVm4xRXZjOTluU3kwT1BhbTNUVndyClR2NzJ4T3dubXIrR2g4Rzc1NUtJdWprQ2dZRUFzZ0oxdU9YWkpyK0FxMTFJVGFra2piM29WYjJWZTJpZUhqQWsKLzJWMnFSNisyR0R6QnA0ZGI2amNRamFoNEgyR2lCNG81R004MGRHZXdCZ280cEUzdldsZ2FOUnpKZEVZOU5vdQo4VjIyYVhRb2JuS0dIMzJucEJqa2ZVcVpkVzBIa1VUbmJEVkxrUXZmMTZYbXc4dEgyc3YzcC9PaUNZUUE0YS9rCnpCd2Q2eWNDZ1lFQXI5d0taRmVGalYyKzJsRGE4aHN2L3hncHY3bE44aEQ0aENydnlEN0Q5bU9mc09PejBHNnAKMVVsK1pjbGR6dk83UkJ4aTA1RmphV0t6Rml1L0FXQ2cyZ3kvd2JSMFV5cGxEQU9UdWVIR3JHdmJreFgxOTNvdApiN3prZTNtZ21zaGEyRm0wbHZidWx4WUxSOHBqT1AwU2plWGFZOUF0SWJwQ0dlWTg2dVF4VThNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
ubuntu@ip-172-31-17-65:/etc/kubernetes$ sudo cat controller-manager.conf 
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJYXpPZjBlNFNnWU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1UY3lNekF5TVRKYUZ3MHpOVEF6TVRVeU16QTNNVEphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURiaVZHVHJHTU82Vk8ya0p2Mm9QTFoxcDZocDI3VHNXSEZpTlVzSDdDa1FsYkR3ZGFiVHo5cHFMUjEKRGxaa1BkWHFEMzF1SlMwYnhOWlhIcndqLysxbllHNktlNmQrcW5YMlpHWW1UVjlGYjNzano0QVNVMENBazZzcApad0V5VHR1bWc1R1Q1VHpYT0x4M0lwL25TVklTVEEyTU1jREs2QTlLSkNscHN4akZXc1VpWm1KSDFSalk3QXFNCkdJZmtjeXFTVnR3ZDNzRVo1dnhXM1VTVDBHU2FoZkd6bHdYdGVpbWMza1MrbDdSaW1iMHZ2OHBuOGc3anU2cTYKMGdUQ3pMQmF2Wmp3UktQcDg2RGU1Q2lyS3BDTXRyaGhvTDZRcmkvYUtNVEp4QUx3K2c2UDk3czl1eVUrNmFmOQp0VFNQa3BSNW1kcmZLTi93c2lJdEhvYWZCZ2hSQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSSCtGQm9yT0RxWGRjLzV4QU9aVXNOSXpzUXVUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjRpWXVRSW5jcwozb0dmb0U4SU1YbWpNMWRwSkdPMFpIUDVHdGZENVBxbEhXN1NuOWMrYXRxR01vbW5FNmh5aXBDOTVyWUtieWJZClNvdk9xbWRGNXkvbWxGT1YwN21WY0pSR0R5dXoyK3Q2Tyt2UjJtSFg4M2JGZE5xNFR1WEVUNkt1SjFYV3FwSHQKS0hsTU5rQjdOcERHRFZmOVpIWDZYRHU3Nk5GalhEL3FhM2RHSUNvS2tZTlZXODIrcnRScno2S2RMbDJ1bWNSVgpNbEFNMjEyYkpsbFN5WW12Rml0TmhyOWRSMDJwK2ZNNmxmTStEbDQrYXkwUXRxaDZsMDR4bkxQTHp0cWxIandXCmlaMVV5M0ovcEYyOW1saVR5S253RkdQTi9tZUFUMkVqMC9GTHRxbzVrOW00NzlFYlE0NEw3ME5YOHZvRzU0UUEKQVJrT2l3QlMrb09sCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://172.31.17.65:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: system:kube-controller-manager
  name: system:kube-controller-manager@kubernetes
current-context: system:kube-controller-manager@kubernetes
kind: Config
preferences: {}
users:
- name: system:kube-controller-manager
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lJY3V5RnhNdm5qbXN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1UY3lNekF5TVRKYUZ3MHlOakF6TVRjeU16QTNNVEphTUNreApKekFsQmdOVkJBTVRIbk41YzNSbGJUcHJkV0psTFdOdmJuUnliMnhzWlhJdGJXRnVZV2RsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1kNnU2c3o2SG9CRUNjUU9UMGJWSXUyOURUZERVNTMKaFc1WlZWdmZVejMzUmh6TG9WVzE5b2ZLMkNLTDltZFBKWU03Z0RqS2l2VjkrZG1nZDUxbnROSWxRd1ZWMXR0YQp6SzhEcmpZelN0Ujh1a0s0UmJNeTEyVVE0VVczRC9kVUxSV2FMSFVZMjhRVjlXZnZ0eURreUdxVWRDdzBmdVlSCnRoL3R5VGpCb21KdVRibHhOZ2xjTzNTdGE2RVpvNFUzd01teHk3Y3FUdjZGb01OMGc0VWI2b1NqcC9vS1Y0Z3MKTmJ3SEZrREJWQklaOEcya1VQbmhXRDZKalpMYXJXd1VLcVJhdUdBL0hUV2VLa2F2bExhcUtLcC9Nb2x1TjdEMgo5ZjV5QzV5V0EwWmdjNmJpZWhuc3dEMDhjMzMvV1hCcG5oZ1l6VVp0ZVVQTkRNR0JRVVZaMkNVQ0F3RUFBYU5XCk1GUXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIKL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVUi9oUWFLemc2bDNYUCtjUURtVkxEU003RUxrd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBRlVPaURjR2g2aVJUak9vVERacHJlZGt6K3pJUVNhZEQxRXZiL1gyRW1nZEk4cXhYSHFtClpTL3BYOHJ0WXFhbGM0UjZFZ1JtdW93MndwbE5XNmR2NGx0R0hZK3hXY2FHTVJVdkVmbFVjQkpCQTE1ZGdzL2QKczVkTmN4TmtpSlhFbXFFS2s0WXF6RUppRkRhQlZ6Q29UQ1h3VzUvUHFJMHBQWXE4aW8vcDFpdjRpNUdKWlNXcApxUXVxNHVJTFFWSS9Kby9wZ1FtcG1ucHh0MFAvZHBKOUpwSVJEbWxndWJSMGF5SFRDd1hUSkpyUU83Y21yM25XCm5ZS1JETmQ0bU15eENqMlROakpjU0o0SEZ1Ri9LVzBYRWV5eTlKZ2szUDlLdi9ycmtxaS8rYjg4RmNwWGQ4WVQKa29MVTIyKzgxdzhyZDZnZUFuQnVEVXdSYW5KMFZMWGdYSlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeDNxN3F6UG9lZ0VRSnhBNVBSdFVpN2IwTk4wTlRuZUZibGxWVzk5VFBmZEdITXVoClZiWDJoOHJZSW92MlowOGxnenVBT01xSzlYMzUyYUIzbldlMDBpVkRCVlhXMjFyTXJ3T3VOak5LMUh5NlFyaEYKc3pMWFpSRGhSYmNQOTFRdEZab3NkUmpieEJYMVorKzNJT1RJYXBSMExEUis1aEcySCszSk9NR2lZbTVOdVhFMgpDVnc3ZEsxcm9SbWpoVGZBeWJITHR5cE8vb1dndzNTRGhSdnFoS09uK2dwWGlDdzF2QWNXUU1GVUVobndiYVJRCitlRllQb21Oa3RxdGJCUXFwRnE0WUQ4ZE5aNHFScStVdHFvb3FuOHlpVzQzc1BiMS9uSUxuSllEUm1CenB1SjYKR2V6QVBUeHpmZjlaY0dtZUdCak5SbTE1UTgwTXdZRkJSVm5ZSlFJREFRQUJBb0lCQUNoZHo4aFBVc1lOblFVcQpwVXFXVXorS29GUnFQeDBYMXFxRDdXQVFDenBJNWFsQ0U3M1NlcmJ6OTFUV1dlQ0NCYWRPelIydzd2bktxbHE5CnZEYmdHNWxDN1JNUlVjOUZ5cEhIL3VMODhqR1pvOStJaHFKQ3NZL0VJTElJMzNRL1ZuZytvS3g1Z1U5bTJpaFUKUEF5dC8xaUIvaGhMN3pvRGI0VjZpdk92UzNyN1Y4MkFWbmkvSGJXOGgyNkRxWDZPU0lXaTMwdlVXdEtON1pOUQplVjVBSEN4VjNSZ3dXc0FxNW1acEF5QnNpeXV3MHhVNVZBMHlucU5KMjNydG45aG9OTk45aFJGSlFmWi9WRHlVClZVVzFyMlhDcnhyemlTZk9jSm80Sm5ud2szR09ZNHV5TzB4cDJtdUx5aFdZOUU4VlNTVDk5L3E4V0RDaVVJamwKNkJlRmxJRUNnWUVBNFlUdGZ1WmpRTmxnUDE3cUg1YStzVmlXdXNPbThsVGJHSXNCQXdaMFBOc2h4a0pDa0J1bQpEWlZGS1JsQkhMeXU2TjQwT29mcnNTT2t2OU5XaDdCbVYycmNxNFdob3VYVVJlcU9GaDVMR2NUWHZiR2d4NDkrCmVYMEh4enhjcWl2VUJDbE9TOHhhNFlVcEJLRFkwdWVwdk02NDRYd2J6bjlyZkxjY1VBYnRsN1VDZ1lFQTRuRFEKc29XQklxbnR3T21HSEJOaWtneWY1TEhQd0hGd3hqTGFMcUtIMGQzUmlidUpMZjNPcGlOTFZnVkRZVXRoWnMwOQpMZndvZGs3aklQZjU2OGk2SGVVL0NKZDQyc3ROL1UwdDJmbmZleFZVNWg4aWtEbTVMdHJqK3VmbjNJNXkyMUVsCm9aSFhzWEgyWHBWd0ptYzFVUlgzeDh1Z0dRSXVNWUlrcnBUVXBMRUNnWUJiV2RBbVRrYTROeFdBdGY3YWF1SzEKemUvSW1ZWmZ0VFhHM0UrOW5QaXF5ZzBGVlVQSFFodmlkcXU4T1NtaDdXQmduZG5FTjlpbU9ZejcweXpDN0JhWQpwSVhjeU5XdnVhOWgzdUJOWDFvR2h6RG8rekhvaEZ5ejg0eWFEUDV3UkM2dXZOaWxaWk1PdFRUblZneGVhazdjClYxU1dxZ0pOaEZuUy9BMXc4VTErM1FLQmdENlNxamtLeDFxSzFwWmVjWjdFaEpLVFJvUHQxdGo1QUE3azhvRzgKakFla1lrakxOK2Nyb2JVclA2QXZxQ1QwclorNHkxVXZ2d2FpV2dVOFFTVzB2Q21TdGM1ci9RdUk3cTQyYTVzMgpmMWtGMWdZWlNIWE9YYXZpOU9qYXVLbXIrM1U3Z1VpYWdwNFlQZHA1TlJxSG5xWWZpZTcrQittaFBwNlR0Z3RBCk9WcWhBb0dBUEowVk5GMHYyOG9JU1JaaHg0YWN4YTNJZDBoQlpPcUxpK3lmbCtkRnB4SUlDbHNVOW9IcXR5amMKQ3RwSkZNR2g5MExFeHdiVXNQL1k3Z2lEcThVV0h5S2NBaWw3ZXl0TURXbkJHVG00SkxVRE9QVmozYzhQM3pXSApFbmtVYzZYekxRTkI0S2VpanNGRmRRRUZUQVFNSm5LSHptRzZqSVVFR0dsNzBHZUsrRlU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
ubuntu@ip-172-31-17-65:/etc/kubernetes$ sudo cat kubelet.conf 
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJYXpPZjBlNFNnWU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1UY3lNekF5TVRKYUZ3MHpOVEF6TVRVeU16QTNNVEphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURiaVZHVHJHTU82Vk8ya0p2Mm9QTFoxcDZocDI3VHNXSEZpTlVzSDdDa1FsYkR3ZGFiVHo5cHFMUjEKRGxaa1BkWHFEMzF1SlMwYnhOWlhIcndqLysxbllHNktlNmQrcW5YMlpHWW1UVjlGYjNzano0QVNVMENBazZzcApad0V5VHR1bWc1R1Q1VHpYT0x4M0lwL25TVklTVEEyTU1jREs2QTlLSkNscHN4akZXc1VpWm1KSDFSalk3QXFNCkdJZmtjeXFTVnR3ZDNzRVo1dnhXM1VTVDBHU2FoZkd6bHdYdGVpbWMza1MrbDdSaW1iMHZ2OHBuOGc3anU2cTYKMGdUQ3pMQmF2Wmp3UktQcDg2RGU1Q2lyS3BDTXRyaGhvTDZRcmkvYUtNVEp4QUx3K2c2UDk3czl1eVUrNmFmOQp0VFNQa3BSNW1kcmZLTi93c2lJdEhvYWZCZ2hSQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSSCtGQm9yT0RxWGRjLzV4QU9aVXNOSXpzUXVUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjRpWXVRSW5jcwozb0dmb0U4SU1YbWpNMWRwSkdPMFpIUDVHdGZENVBxbEhXN1NuOWMrYXRxR01vbW5FNmh5aXBDOTVyWUtieWJZClNvdk9xbWRGNXkvbWxGT1YwN21WY0pSR0R5dXoyK3Q2Tyt2UjJtSFg4M2JGZE5xNFR1WEVUNkt1SjFYV3FwSHQKS0hsTU5rQjdOcERHRFZmOVpIWDZYRHU3Nk5GalhEL3FhM2RHSUNvS2tZTlZXODIrcnRScno2S2RMbDJ1bWNSVgpNbEFNMjEyYkpsbFN5WW12Rml0TmhyOWRSMDJwK2ZNNmxmTStEbDQrYXkwUXRxaDZsMDR4bkxQTHp0cWxIandXCmlaMVV5M0ovcEYyOW1saVR5S253RkdQTi9tZUFUMkVqMC9GTHRxbzVrOW00NzlFYlE0NEw3ME5YOHZvRzU0UUEKQVJrT2l3QlMrb09sCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://172.31.17.65:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: system:node:IbtisamX
  name: system:node:IbtisamX@kubernetes
current-context: system:node:IbtisamX@kubernetes
kind: Config
preferences: {}
users:
- name: system:node:IbtisamX
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lJRlI2cE55N2FRUjR3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1UY3lNekF5TVRKYUZ3MHlOakF6TVRjeU16QTNNVEphTURZeApGVEFUQmdOVkJBb1RESE41YzNSbGJUcHViMlJsY3pFZE1Cc0dBMVVFQXhNVWMzbHpkR1Z0T201dlpHVTZTV0owCmFYTmhiVmd3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRElSYlcvcjhBK05JOUEKZG1ISS94TlVGSjA4dlpCRnIwOUNtN0ZZOTB1dnkzNmlUMHVXVDRtS29xVDUvcXVSdnNOVC9MYSswNVM0cmRMRQpvZGhCYzR2OFhSMjdON3ZYQkoxTFgweTVnMEhCRW9UbHlNSWNhOGpwQS9USjVQbEJIK0hMZTdpN2hFMHlsOUdlCnlSRS8xUkJSMlZDdzBQZXN6ZjQyZEloOG15VHhrNksvbVNhUjNGclNuQTJIZ25Ddk5WWjJGRVhUa3BINDRGWEgKZGR4Q3NXMkJGdjR0TnFKUFlPWEY5a3BLNEFOdFE3ekZZMXMyZ3NlcUt3YlR0WE1rcldyVzUybitQYmFvZEF0QgpCb1F3Sk9YaFRPNEV2TTh2aHlUUnptSnZEemZnby96MjVKL2xMWEpCVDd4RXY2K1VETjU5N1pxTytlN29ZMVJ4CkUySjl4VjZwQWdNQkFBR2pWakJVTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZFZjRVR2lzNE9wZDF6L25FQTVsU3cwagpPeEM1TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCSG8zZjJ3aWtnenUwMldlamJsNE9CYzJNN1JBUUZ0VVl2CkFOU2ZhWk1CdW5ORmJ2M3VmNUtSeXR5QU9vdFFkUXltRXowcTVrYWJtcmJKVnJjSGhFQUlZbGx6QmtaLzVVaWwKMnIwOTQ3WEZwL2RlU0ZKcmNiaUpCRGlkd1dqNmk1c1NKcDNPZ1BDVCtlTDRSU3p0aGJQR0ZvbDMxaVJNOWg2SAptdkJHdTVoUVZPRFMzclEzVmJLWUxJQURqNjIzcCtnYkdCL3BMT3JBL0F4UW5vMlkvWGgrVWV1ZEx6L0dFc3l5CkFCcDlsbEY4SG15THViZEhlQlcwWkRybVhMdHdLZnliSk9sWDFUMG5FclZuNFVaSHpSbGZXNTI0Mmo4cTJWMS8KdUMxM0lqTVZONlR3TmtsOXI5SHJqeW0xbHp0VFBPZU1kU3Y1OUMyclAzMXkwUzlFRGFMQQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeUVXMXY2L0FQalNQUUhaaHlQOFRWQlNkUEwyUVJhOVBRcHV4V1BkTHI4dCtvazlMCmxrK0ppcUtrK2Y2cmtiN0RVL3kydnRPVXVLM1N4S0hZUVhPTC9GMGR1emU3MXdTZFMxOU11WU5Cd1JLRTVjakMKSEd2STZRUDB5ZVQ1UVIvaHkzdTR1NFJOTXBmUm5za1JQOVVRVWRsUXNORDNyTTMrTm5TSWZKc2s4Wk9pdjVrbQprZHhhMHB3Tmg0SndyelZXZGhSRjA1S1IrT0JWeDNYY1FyRnRnUmIrTFRhaVQyRGx4ZlpLU3VBRGJVTzh4V05iCk5vTEhxaXNHMDdWekpLMXExdWRwL2oyMnFIUUxRUWFFTUNUbDRVenVCTHpQTDRjazBjNWlidzgzNEtQODl1U2YKNVMxeVFVKzhSTCt2bEF6ZWZlMmFqdm51NkdOVWNSTmlmY1ZlcVFJREFRQUJBb0lCQVFDZGhoYzZ1cVpmUjBBVgoyQWQ1N1FmcTdudnV0cnV2MUFCbng4WnF6N2g4Z1hjTmU0bGNwUnJ1TEpmTyt2MUFHZWZSTzhrUnQ2SVcwTUlqClg1bVZnYWp0eXVBRHpnYTFUUy9iaFEzNExNR2ZkMDJJMzZ1dVp5a1Qvc1NmdUxaRS95cSt2b1hER0lFUDlsSXUKcnNBZWtSdlJCVGx1bWk3MWdPRWZPL0hPOE1qU0tZTkZVZEJYRlhZU0EzdWlIR28xeDZ1b3djcjlZSEJkWWpPUQpCaGNvSWJOd28wV20rOHIyNll3TU9uTE9ZTmxvTEVvOS94NzBNY3ZWSk1rR0ErL1lmbitMRXg2d1FoeGF4OGxrCkxvMEozQW9ERjVBZEdTNHRHcStpZ0JIeGJZVEx4NkJXZ1l2d3BZbXVJemRhOXJRYlhXOHkwMEU4MTJSTG9NSlkKcHBEV3lHUEJBb0dCQU1xVTViNlM3Q0dMMXVxYURpaUU2dXg4TVpCSjJCUGx3bkNZcTk4dG9qRHp0c1FCZXBscwo0VDQ2bDNEWWx4WENUaC9rblI2alFGcHhUakoyVXhZenVxUlNmSjNyMjJTYUp2bTVjd2N5WjFwOWdtc2FYZmpFCmVKMzBQUkNEby9LZWIwOVh2U0N1STJ0VzVKNVc1U2R2SjhqWmVVOEZjelBKb2d4Y0I2SzJ2VnhOQW9HQkFQMFUKN0dQL24reDdKWFFibWEraGgrT1JTZ3hLNE9jWGZvT0pEQnB6bDdzZXl6K1ZNTVdDV1grKy9MaWdHR0VqU3dVdApmSFFQditUTGNYZnJTMzA5VVVyNEdQd0NWRVhmeStLNlZOa1FOYUVCMlZDVENaN1RHdkJTb2luT0JZTFZaemJSCml0bHpZYk1STmRUbEJmc3NCTXZTcGVYSnptWHNraUhWeXBDU1Vzbk5Bb0dCQUowMnFJVVpLRDl3Y3IxbUNRN1EKK0MvR3dnQWtEcGlDZWo4L2ZFS2ErMy9aNDBDQmxVOXorK2w3TndQUVVwQUVWdlRSU2szNGkzeWs2ZmFuZFJ1SgowWktzb1NFOVpPblI1K1Z0VWlPSHJrVy9tWExjNTRpamtLZWtYNjl0T2RLVHVmWnROTTBqMTBENkVqbi9YWjhZCjJGczZ5clhVbU83YnovS2ZpUjF4aThzUkFvR0JBT01GOHV2ZE1mTnJvSFJnRWVRWHpaTlpFSWlvWHNsT0xRSUgKWFNFWlVpSGNCTXpib3UxNStaajdsUzUxQm9tVXBFWlh3RTFJbDRYQTdkOTU1YlRKM1hPWHpLbTcyU2I1RTZjbQpLTml5anJrSXRJMXY2UEJkUk13U0JEL2wvTkdaWjBZb2dCcUNRMERqamx1VXVtSE80ZHFJOHFLSC9pczJKUHhQCkVLL1JZb3g5QW9HQUJNdVRYdUZWcDlSMlZJcHAxYndwMFR2MDlQcDBVaGVqMmNGckxBUjc5V0kzd2JIOFRKOG8KaXBCV0l2ODdQWVB2MGpHM2tlaHdlSklHWSt5NjR4RTRGRWhGaml2YXVzU1pCeXN4QlpHcHBhQ1JYNDNoUThkbApvZVhNU1UvK01KVkxzTCtydXNualJqNUlFUFlKbUVyeGNKazJNK1dlVURiYkFJZitLd1pWaGVrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
ubuntu@ip-172-31-17-65:/etc/kubernetes$ cd manifests/
ubuntu@ip-172-31-17-65:/etc/kubernetes/manifests$ ls
etcd.yaml  kube-apiserver.yaml  kube-controller-manager.yaml  kube-scheduler.yaml
ubuntu@ip-172-31-17-65:/etc/kubernetes/manifests$ cat etcd.yaml 
cat: etcd.yaml: Permission denied
ubuntu@ip-172-31-17-65:/etc/kubernetes/manifests$ cat sudo etcd.yaml 
cat: sudo: No such file or directory
cat: etcd.yaml: Permission denied
ubuntu@ip-172-31-17-65:/etc/kubernetes/manifests$ sudo cat etcd.yaml 
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubeadm.kubernetes.io/etcd.advertise-client-urls: https://172.31.17.65:2379
  creationTimestamp: null
  labels:
    component: etcd
    tier: control-plane
  name: etcd
  namespace: kube-system
spec:
  containers:
  - command:
    - etcd
    - --advertise-client-urls=https://172.31.17.65:2379
    - --cert-file=/etc/kubernetes/pki/etcd/server.crt
    - --client-cert-auth=true
    - --data-dir=/var/lib/etcd
    - --experimental-initial-corrupt-check=true
    - --experimental-watch-progress-notify-interval=5s
    - --initial-advertise-peer-urls=https://172.31.17.65:2380
    - --initial-cluster=IbtisamX=https://172.31.17.65:2380
    - --key-file=/etc/kubernetes/pki/etcd/server.key
    - --listen-client-urls=https://127.0.0.1:2379,https://172.31.17.65:2379
    - --listen-metrics-urls=http://127.0.0.1:2381
    - --listen-peer-urls=https://172.31.17.65:2380
    - --name=IbtisamX
    - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
    - --peer-client-cert-auth=true
    - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
    - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
    - --snapshot-count=10000
    - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
    image: registry.k8s.io/etcd:3.5.16-0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /livez
        port: 2381
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    name: etcd
    readinessProbe:
      failureThreshold: 3
      httpGet:
        host: 127.0.0.1
        path: /readyz
        port: 2381
        scheme: HTTP
      periodSeconds: 1
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 127.0.0.1
        path: /readyz
        port: 2381
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    volumeMounts:
    - mountPath: /var/lib/etcd
      name: etcd-data
    - mountPath: /etc/kubernetes/pki/etcd
      name: etcd-certs
  hostNetwork: true
  priority: 2000001000
  priorityClassName: system-node-critical
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  volumes:
  - hostPath:
      path: /etc/kubernetes/pki/etcd
      type: DirectoryOrCreate
    name: etcd-certs
  - hostPath:
      path: /var/lib/etcd
      type: DirectoryOrCreate
    name: etcd-data
status: {}
ubuntu@ip-172-31-17-65:/etc/kubernetes/manifests$ cd ..
ubuntu@ip-172-31-17-65:/etc/kubernetes$ ls
admin.conf  controller-manager.conf  kubelet.conf  manifests  pki  scheduler.conf  super-admin.conf
ubuntu@ip-172-31-17-65:/etc/kubernetes$ cd pki
ubuntu@ip-172-31-17-65:/etc/kubernetes/pki$ ls
apiserver-etcd-client.crt  apiserver-kubelet-client.crt  apiserver.crt  ca.crt  etcd                front-proxy-ca.key      front-proxy-client.key  sa.pub
apiserver-etcd-client.key  apiserver-kubelet-client.key  apiserver.key  ca.key  front-proxy-ca.crt  front-proxy-client.crt  sa.key
ubuntu@ip-172-31-17-65:/etc/kubernetes/pki$ cd etcd/
ubuntu@ip-172-31-17-65:/etc/kubernetes/pki/etcd$ ls
ca.crt  ca.key  healthcheck-client.crt  healthcheck-client.key  peer.crt  peer.key  server.crt  server.key
ubuntu@ip-172-31-17-65:/etc/kubernetes/pki/etcd$ cd ../..
ubuntu@ip-172-31-17-65:/etc/kubernetes$ cd ~
ubuntu@ip-172-31-17-65:~$ cd /var/lib/
ubuntu@ip-172-31-17-65:/var/lib$ ls
PackageKit  apt     command-not-found  dpkg   grub           landscape  misc       polkit-1   shells.state  swcatalog         ubuntu-release-upgrader  update-manager   xml-core
amazon      boltd   containerd         etcd   hibinit-agent  libuuid    os-prober  private    shim-signed   systemd           ucf                      update-notifier
app-info    chrony  dbus               fwupd  ieee-data      logrotate  pam        python     snapd         tpm               udisks2                  usb_modeswitch
apport      cloud   dhcpcd             git    kubelet        man-db     plymouth   sgml-base  sudo          ubuntu-advantage  unattended-upgrades      vim
ubuntu@ip-172-31-17-65:/var/lib$ cd etcd/
-bash: cd: etcd/: Permission denied
ubuntu@ip-172-31-17-65:/var/lib$ sudo cd etcd/
sudo: cd: command not found
sudo: "cd" is a shell built-in command, it cannot be run directly.
sudo: the -s option may be used to run a privileged shell.
sudo: the -D option may be used to run a command in a specific directory.
ubuntu@ip-172-31-17-65:/var/lib$ cd etcd/
-bash: cd: etcd/: Permission denied
ubuntu@ip-172-31-17-65:/var/lib$ sudo cd etcd/
sudo: cd: command not found
sudo: "cd" is a shell built-in command, it cannot be run directly.
sudo: the -s option may be used to run a privileged shell.
sudo: the -D option may be used to run a command in a specific directory.
ubuntu@ip-172-31-17-65:/var/lib$ sudo bash -c "cd /var/lib/etcd/ && ls -lah"
total 12K
drwx------  3 root root 4.0K Mar 17 23:07 .
drwxr-xr-x 49 root root 4.0K Mar 18 00:22 ..
drwx------  4 root root 4.0K Mar 17 23:07 member
ubuntu@ip-172-31-17-65:/var/lib$ cd ..
ubuntu@ip-172-31-17-65:/var$ cd ..
ubuntu@ip-172-31-17-65:/$ cd ..
ubuntu@ip-172-31-17-65:/$ ls
bin  bin.usr-is-merged  boot  dev  etc  home  lib  lib.usr-is-merged  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  sbin.usr-is-merged  snap  srv  sys  tmp  usr  var
ubuntu@ip-172-31-17-65:/$ kubectl get nodes
E0318 01:31:21.992129    9147 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 01:31:21.993716    9147 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 01:31:21.995146    9147 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 01:31:21.996537    9147 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 01:31:21.997791    9147 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-17-65:/$ 
Broadcast message from root@ip-172-31-17-65 (Tue 2025-03-18 01:57:36 UTC):

The system will power off now!

Connection to ec2-54-145-225-8.compute-1.amazonaws.com closed by remote host.
Connection to ec2-54-145-225-8.compute-1.amazonaws.com closed.
ibtisam@ibtisam-iq:~$ ip route | grep -q default
ibtisam@ibtisam-iq:~$ 

--------------------------------------------------------------------------------------------------------------------------------------------

ubuntu@ip-172-31-17-2:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 18:40:16 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
143 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: ip-172-31-17-2
🔄 Change hostname? Enter new name (or press Enter to keep current): k8s-control-plane-1

🖥️ Updating hostname to 'k8s-control-plane-1'...

✅ Hostname updated successfully.
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.17.2
🔹 Public IP      : 34.229.96.59
🔹 MAC Address    : 0a:ff:cb:24:e0:3f
🔹 Network        : 127.0.0.1/8,172.31.17.2/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.4G/23G
🔹 CPU Load       :  0.65, 0.29, 0.11
🔹 UUID           : ec2677750e3f94b628b7d2dbc496bdea
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet set on hold.
kubeadm set on hold.
kubectl set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: waiting        |--------------------------------------| 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    waiting        |--------------------------------------| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: waiting        |--------------------------------------| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    waiting        |--------------------------------------| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: waiting        |--------------------------------------| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    downloading    |--------------------------------------|    0.0 B/3.5 MiB 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   downloading    |--------------------------------------|    0.0 B/581.0 B 
elapsed: 0.3 s                                                                    total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.4 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 165.362833ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Found existing Kubernetes directory: /etc/kubernetes/
⚠️  Service is running: containerd

❌ Cluster initialization aborted. You must remove existing resources first.

❌ Failed to execute k8s-cleanup.sh. Exiting...

ubuntu@ip-172-31-17-2:~$ sudo ls /etc/kubernetes/
manifests
ubuntu@ip-172-31-17-2:~$ sudo ls /etc/kubernetes/manifests/
ubuntu@ip-172-31-17-2:~$ sudo systemctl status kubelet
○ kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: inactive (dead)
       Docs: https://kubernetes.io/docs/
ubuntu@ip-172-31-17-2:~$ ls -lah /etc/kubernetes/
ls -lah /var/lib/etcd
total 12K
drwxrwxr-x   3 root root 4.0K Mar 18 18:41 .
drwxr-xr-x 114 root root 4.0K Mar 18 18:41 ..
drwxrwxr-x   2 root root 4.0K Mar 18 18:41 manifests
ls: cannot access '/var/lib/etcd': No such file or directory
ubuntu@ip-172-31-17-2:~$ cat /var/log/dpkg.log | grep kubeadm
cat /var/log/dpkg.log | grep kubelet
2025-03-18 18:41:23 install kubeadm:amd64 <none> 1.32.3-1.1
2025-03-18 18:41:23 status half-installed kubeadm:amd64 1.32.3-1.1
2025-03-18 18:41:23 status unpacked kubeadm:amd64 1.32.3-1.1
2025-03-18 18:41:26 configure kubeadm:amd64 1.32.3-1.1 <none>
2025-03-18 18:41:26 status unpacked kubeadm:amd64 1.32.3-1.1
2025-03-18 18:41:26 status half-configured kubeadm:amd64 1.32.3-1.1
2025-03-18 18:41:26 status installed kubeadm:amd64 1.32.3-1.1
2025-03-18 18:41:25 install kubelet:amd64 <none> 1.32.3-1.1
2025-03-18 18:41:25 status half-installed kubelet:amd64 1.32.3-1.1
2025-03-18 18:41:26 status unpacked kubelet:amd64 1.32.3-1.1
2025-03-18 18:41:26 configure kubelet:amd64 1.32.3-1.1 <none>
2025-03-18 18:41:26 status unpacked kubelet:amd64 1.32.3-1.1
2025-03-18 18:41:26 status half-configured kubelet:amd64 1.32.3-1.1
2025-03-18 18:41:27 status installed kubelet:amd64 1.32.3-1.1
ubuntu@ip-172-31-17-2:~$ cat /var/log/dpkg.log | grep kubelet
2025-03-18 18:41:25 install kubelet:amd64 <none> 1.32.3-1.1
2025-03-18 18:41:25 status half-installed kubelet:amd64 1.32.3-1.1
2025-03-18 18:41:26 status unpacked kubelet:amd64 1.32.3-1.1
2025-03-18 18:41:26 configure kubelet:amd64 1.32.3-1.1 <none>
2025-03-18 18:41:26 status unpacked kubelet:amd64 1.32.3-1.1
2025-03-18 18:41:26 status half-configured kubelet:amd64 1.32.3-1.1
2025-03-18 18:41:27 status installed kubelet:amd64 1.32.3-1.1
ubuntu@ip-172-31-17-2:~$ cat /var/log/dpkg.log | grep kubeadm
2025-03-18 18:41:23 install kubeadm:amd64 <none> 1.32.3-1.1
2025-03-18 18:41:23 status half-installed kubeadm:amd64 1.32.3-1.1
2025-03-18 18:41:23 status unpacked kubeadm:amd64 1.32.3-1.1
2025-03-18 18:41:26 configure kubeadm:amd64 1.32.3-1.1 <none>
2025-03-18 18:41:26 status unpacked kubeadm:amd64 1.32.3-1.1
2025-03-18 18:41:26 status half-configured kubeadm:amd64 1.32.3-1.1
2025-03-18 18:41:26 status installed kubeadm:amd64 1.32.3-1.1
ubuntu@ip-172-31-17-2:~$ sudo systemctl status kubelet
○ kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: inactive (dead)
       Docs: https://kubernetes.io/docs/
ubuntu@ip-172-31-17-2:~$ sudo systemctl status containerd
● containerd.service - containerd container runtime
     Loaded: loaded (/usr/lib/systemd/system/containerd.service; enabled; preset: enabled)
     Active: active (running) since Tue 2025-03-18 18:41:53 UTC; 27min ago
       Docs: https://containerd.io
    Process: 5787 ExecStartPre=/sbin/modprobe overlay (code=exited, status=0/SUCCESS)
   Main PID: 5788 (containerd)
      Tasks: 8
     Memory: 27.2M (peak: 36.7M)
        CPU: 2.039s
     CGroup: /system.slice/containerd.service
             └─5788 /usr/bin/containerd

Mar 18 18:41:53 k8s-control-plane-1 containerd[5788]: time="2025-03-18T18:41:53.343710710Z" level=info msg="Start subscribing containerd event"
Mar 18 18:41:53 k8s-control-plane-1 containerd[5788]: time="2025-03-18T18:41:53.343747708Z" level=info msg="Start recovering state"
Mar 18 18:41:53 k8s-control-plane-1 containerd[5788]: time="2025-03-18T18:41:53.343750486Z" level=info msg=serving... address=/run/containerd/containerd.sock.ttrpc
Mar 18 18:41:53 k8s-control-plane-1 containerd[5788]: time="2025-03-18T18:41:53.343794010Z" level=info msg=serving... address=/run/containerd/containerd.sock
Mar 18 18:41:53 k8s-control-plane-1 containerd[5788]: time="2025-03-18T18:41:53.343812108Z" level=info msg="Start event monitor"
Mar 18 18:41:53 k8s-control-plane-1 containerd[5788]: time="2025-03-18T18:41:53.343825845Z" level=info msg="Start snapshots syncer"
Mar 18 18:41:53 k8s-control-plane-1 containerd[5788]: time="2025-03-18T18:41:53.343834369Z" level=info msg="Start cni network conf syncer for default"
Mar 18 18:41:53 k8s-control-plane-1 containerd[5788]: time="2025-03-18T18:41:53.343840830Z" level=info msg="Start streaming server"
Mar 18 18:41:53 k8s-control-plane-1 containerd[5788]: time="2025-03-18T18:41:53.343889664Z" level=info msg="containerd successfully booted in 0.030966s"
Mar 18 18:41:53 k8s-control-plane-1 systemd[1]: Started containerd.service - containerd container runtime.
ubuntu@ip-172-31-17-2:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 19:16:15 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1
🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: k8s-control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.17.2
🔹 Public IP      : 34.229.96.59
🔹 MAC Address    : 0a:ff:cb:24:e0:3f
🔹 Network        : 127.0.0.1/8,172.31.17.2/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.9G/23G
🔹 CPU Load       :  0.00, 0.00, 0.00
🔹 UUID           : ec2677750e3f94b628b7d2dbc496bdea
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: exists         |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 12.78198ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Service is running: containerd
⚠️  Conflicting resources found! Do you want to delete them? (y/n): y

🛑 Stopping Kubernetes-related services...
✅ Services stopped successfully.

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

🧹 Resetting Kubernetes installation...
[preflight] Running pre-flight checks
W0318 19:19:05.965747    7953 removeetcdmember.go:106] [reset] No kubeadm config, using etcd pod spec to get data directory
[reset] Deleted contents of the etcd data directory: /var/lib/etcd
[reset] Stopping the kubelet service
[reset] Unmounting mounted directories in "/var/lib/kubelet"
W0318 19:19:05.972873    7953 cleanupnode.go:105] [reset] Failed to remove containers: failed to create new CRI runtime service: validate service connection: validate CRI v1 runtime API for endpoint "unix:///var/run/containerd/containerd.sock": rpc error: code = Unavailable desc = connection error: desc = "transport: Error while dialing: dial unix /var/run/containerd/containerd.sock: connect: no such file or directory"
[reset] Deleting contents of directories: [/etc/kubernetes/manifests /var/lib/kubelet /etc/kubernetes/pki]
[reset] Deleting files: [/etc/kubernetes/admin.conf /etc/kubernetes/super-admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/bootstrap-kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf]

The reset process does not clean CNI configuration. To do so, you must remove /etc/cni/net.d

The reset process does not reset or clean up iptables rules or IPVS tables.
If you wish to reset iptables, you must do so manually by using the "iptables" command.

If your cluster was setup to utilize IPVS, run ipvsadm --clear (or similar)
to reset your system's IPVS tables.

The reset process does not clean your kubeconfig files and you must remove them manually.
Please, check the contents of the $HOME/.kube/config file.
✅ Kubernetes reset complete.
✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...
Tue Mar 18 19:19:06 UTC 2025 - Starting Kubernetes Control Plane Setup

🔍 Ensuring necessary services are running...
✅ containerd is running.
✅ kubelet is running.
/dev/fd/63: line 33: local: can only be used in a function

❌ Error occurred at line 33. Exiting...


❌ Failed to execute k8s-start-services.sh. Exiting...

ubuntu@ip-172-31-17-2:~$ ls .kube
ls: cannot access '.kube': No such file or directory
ubuntu@ip-172-31-17-2:~$ ls /var/klib/kubelet
ls: cannot access '/var/klib/kubelet': No such file or directory
ubuntu@ip-172-31-17-2:~$ ls /var/lib/kubelet
ubuntu@ip-172-31-17-2:~$ ls -la /var/lib/kubelet
total 8
drwxrwxr-x  2 root root 4096 Mar 18 19:19 .
drwxr-xr-x 48 root root 4096 Mar 18 19:16 ..
ubuntu@ip-172-31-17-2:~$ apt install kubelet
E: Could not open lock file /var/lib/dpkg/lock-frontend - open (13: Permission denied)
E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), are you root?
ubuntu@ip-172-31-17-2:~$ sudo apt install kubelet
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
kubelet is already the newest version (1.32.3-1.1).
0 upgraded, 0 newly installed, 0 to remove and 134 not upgraded.
ubuntu@ip-172-31-17-2:~$ ls -la /var/lib/kubelet
total 8
drwxrwxr-x  2 root root 4096 Mar 18 19:19 .
drwxr-xr-x 48 root root 4096 Mar 18 19:16 ..
ubuntu@ip-172-31-17-2:~$ sudo apt remove kubelet
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following packages were automatically installed and are no longer required:
  conntrack kubernetes-cni
Use 'sudo apt autoremove' to remove them.
The following packages will be REMOVED:
  kubelet
The following held packages will be changed:
  kubelet
0 upgraded, 0 newly installed, 1 to remove and 134 not upgraded.
After this operation, 77.5 MB disk space will be freed.
Do you want to continue? [Y/n] y
(Reading database ... 78179 files and directories currently installed.)
Removing kubelet (1.32.3-1.1) ...
ubuntu@ip-172-31-17-2:~$ rm -rf /var/lib/kubelet
ubuntu@ip-172-31-17-2:~$ sudo apt install kubelet
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  kubelet
0 upgraded, 1 newly installed, 0 to remove and 134 not upgraded.
Need to get 0 B/15.2 MB of archives.
After this operation, 77.5 MB of additional disk space will be used.
Selecting previously unselected package kubelet.
(Reading database ... 78171 files and directories currently installed.)
Preparing to unpack .../kubelet_1.32.3-1.1_amd64.deb ...
Unpacking kubelet (1.32.3-1.1) ...
Setting up kubelet (1.32.3-1.1) ...
Scanning processes...                                                                                                                                                                         
Scanning candidates...                                                                                                                                                                        
Scanning linux images...                                                                                                                                                                      

Running kernel seems to be up-to-date.

Restarting services...

Service restarts being deferred:
 /etc/needrestart/restart.d/dbus.service
 systemctl restart getty@tty1.service
 systemctl restart networkd-dispatcher.service
 systemctl restart serial-getty@ttyS0.service
 systemctl restart systemd-logind.service
 systemctl restart unattended-upgrades.service

No containers need to be restarted.

User sessions running outdated binaries:
 ubuntu @ session #1: sshd[1113,1238]
 ubuntu @ user manager service: systemd[1133]

No VM guests are running outdated hypervisor (qemu) binaries on this host.
ubuntu@ip-172-31-17-2:~$ ls -la /var/lib/kubelet
total 8
drwxrwxr-x  2 root root 4096 Mar 18 19:31 .
drwxr-xr-x 48 root root 4096 Mar 18 19:31 ..
-rw-r--r--  1 root root    0 Mar 11 20:38 .kubelet-keep
ubuntu@ip-172-31-17-2:~$ sudo cat /var/lib/kubelet/.kubelet-keep 
ubuntu@ip-172-31-17-2:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 19:57:12 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1
🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: k8s-control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.17.2
🔹 Public IP      : 34.229.96.59
🔹 MAC Address    : 0a:ff:cb:24:e0:3f
🔹 Network        : 127.0.0.1/8,172.31.17.2/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.9G/23G
🔹 CPU Load       :  0.08, 0.02, 0.01
🔹 UUID           : ec2677750e3f94b628b7d2dbc496bdea
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubeadm was already set on hold.
kubectl was already set on hold.
kubelet set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 12.710087ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Found existing Kubernetes directory: /var/lib/kubelet
⚠️  Service is running: containerd
⚠️  Conflicting resources found! Do you want to delete them? (y/n): y

🛑 Stopping Kubernetes-related services...
✅ Services stopped successfully.

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.
✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...
Tue Mar 18 19:58:27 UTC 2025 - Starting Kubernetes Control Plane Setup

🔍 Ensuring necessary services are running...
✅ containerd is running.
✅ kubelet is running.
⏳ Waiting for Kubernetes API server to be ready...
⏳ Still waiting... (0 s elapsed)
⏳ Still waiting... (5 s elapsed)
⏳ Still waiting... (10 s elapsed)
⏳ Still waiting... (15 s elapsed)
⏳ Still waiting... (20 s elapsed)
⏳ Still waiting... (25 s elapsed)
⏳ Still waiting... (30 s elapsed)
⏳ Still waiting... (35 s elapsed)
⏳ Still waiting... (40 s elapsed)
⏳ Still waiting... (45 s elapsed)
⏳ Still waiting... (50 s elapsed)
⏳ Still waiting... (55 s elapsed)
❌ Kubernetes API server did not start within 60 seconds. Exiting...

❌ Failed to execute k8s-start-services.sh. Exiting...

ubuntu@ip-172-31-17-2:~$ sudo netstat -tulnp | grep -E "6443"
ubuntu@ip-172-31-17-2:~$ sudo netstat -tulnp | grep -E "6443"
ubuntu@ip-172-31-17-2:~$ sudo netstat -tulnp | grep -E "6443"
ubuntu@ip-172-31-17-2:~$ sudo netstat -tulnp | grep -E "6443"
ubuntu@ip-172-31-17-2:~$ sudo netstat -tulnp | grep -E "6443"
ubuntu@ip-172-31-17-2:~$ sudo netstat -tulnp | grep -E "6443"
ubuntu@ip-172-31-17-2:~$ sudo systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: activating (auto-restart) (Result: exit-code) since Tue 2025-03-18 20:01:21 UTC; 6s ago
       Docs: https://kubernetes.io/docs/
    Process: 11328 ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS (code=exited, status=1/FAILURE)
   Main PID: 11328 (code=exited, status=1/FAILURE)
        CPU: 45ms
ubuntu@ip-172-31-17-2:~$ sudo systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: activating (auto-restart) (Result: exit-code) since Tue 2025-03-18 20:01:41 UTC; 886ms ago
       Docs: https://kubernetes.io/docs/
    Process: 11346 ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS (code=exited, status=1/FAILURE)
   Main PID: 11346 (code=exited, status=1/FAILURE)
        CPU: 53ms
ubuntu@ip-172-31-17-2:~$ sudo systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: activating (auto-restart) (Result: exit-code) since Tue 2025-03-18 20:01:51 UTC; 6s ago
       Docs: https://kubernetes.io/docs/
    Process: 11357 ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS (code=exited, status=1/FAILURE)
   Main PID: 11357 (code=exited, status=1/FAILURE)
        CPU: 56ms
ubuntu@ip-172-31-17-2:~$ sudo systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: activating (auto-restart) (Result: exit-code) since Tue 2025-03-18 20:02:02 UTC; 542ms ago
       Docs: https://kubernetes.io/docs/
    Process: 11369 ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS (code=exited, status=1/FAILURE)
   Main PID: 11369 (code=exited, status=1/FAILURE)
        CPU: 56ms
ubuntu@ip-172-31-17-2:~$ sudo systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: activating (auto-restart) (Result: exit-code) since Tue 2025-03-18 20:07:40 UTC; 666ms ago
       Docs: https://kubernetes.io/docs/
    Process: 11634 ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS (code=exited, status=1/FAILURE)
   Main PID: 11634 (code=exited, status=1/FAILURE)
        CPU: 47ms
ubuntu@ip-172-31-17-2:~$ systemctl is-active --quiet "kubelet"
ubuntu@ip-172-31-17-2:~$ systemctl is-active "kubelet"
activating
ubuntu@ip-172-31-17-2:~$ systemctl is-active "containerd"
active
ubuntu@ip-172-31-17-2:~$ for service in containerd kubelet; do
    echo -n "$service: "
    systemctl is-active "$service"
done
containerd: active
kubelet: activating
ubuntu@ip-172-31-17-2:~$ ss -tulnp | grep -E "6443"
ubuntu@ip-172-31-17-2:~$ netstat -tulnp | grep -E "6443"
(No info could be read for "-p": geteuid()=1000 but you should be root.)
ubuntu@ip-172-31-17-2:~$ sudo netstat -tulnp | grep -E "6443"
ubuntu@ip-172-31-17-2:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 20:56:32 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1
🔄 Change hostname? Enter new name (or press Enter to keep current): ^C
ubuntu@ip-172-31-17-2:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 20:58:29 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1
🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: k8s-control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.17.2
🔹 Public IP      : 34.229.96.59
🔹 MAC Address    : 0a:ff:cb:24:e0:3f
🔹 Network        : 127.0.0.1/8,172.31.17.2/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.9G/23G
🔹 CPU Load       :  0.07, 0.02, 0.00
🔹 UUID           : ec2677750e3f94b628b7d2dbc496bdea
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: exists         |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.1 s                                                                    total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: exists         |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 11.030847ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...


containerd: active
kubelet: activating

❌ Error occurred at line 84. Exiting...


❌ Failed to execute K8s-Node-Init.sh. Exiting...

ubuntu@ip-172-31-17-2:~$ for service in containerd kubelet; do
    echo -n "$service: "
    systemctl is-active "$service"
done
containerd: active
kubelet: activating
ubuntu@ip-172-31-17-2:~$ for service in containerd kubelet; do
    echo -n "$service: "
    status=$(systemctl is-active "$service")
    echo "$status"
> done
containerd: active
kubelet: activating
ubuntu@ip-172-31-17-2:~$ echo -e "\n\033[1;33m🔍 Status of the installed services...\033[0m"
echo -e "\n"
for service in containerd kubelet; do
    echo -n "$service: "
    status=$(systemctl is-active "$service")
    echo "$status"
# systemctl is-active "$service"
done

🔍 Status of the installed services...


containerd: active
kubelet: activating
ubuntu@ip-172-31-17-2:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 21:07:32 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: k8s-control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.17.2
🔹 Public IP      : 34.229.96.59
🔹 MAC Address    : 0a:ff:cb:24:e0:3f
🔹 Network        : 127.0.0.1/8,172.31.17.2/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.9G/23G
🔹 CPU Load       :  0.00, 0.00, 0.00
🔹 UUID           : ec2677750e3f94b628b7d2dbc496bdea
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 11.393453ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...
containerd: active
kubelet: 
❌ Error occurred at line 83. Exiting...


❌ Failed to execute K8s-Node-Init.sh. Exiting...

ubuntu@ip-172-31-17-2:~$ for service in containerd kubelet; do
    echo -n "$service: "
    status=$(systemctl is-active "$service")
    echo "$status"
# systemctl is-active "$service"
done
containerd: active
kubelet: activating
ubuntu@ip-172-31-17-2:~$ echo -e "\n\033[1;33m🔍 Status of the installed services...\033[0m"
sleep 10
for service in containerd kubelet; do
    echo -n "$service: "
    status=$(systemctl is-active "$service")
    echo "$status"
# systemctl is-active "$service"
done

🔍 Status of the installed services...
containerd: active
kubelet: activating
ubuntu@ip-172-31-17-2:~$ RED="\033[1;31m"
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
BLUE="\033[1;34m"
NC="\033[0m" # No Color
ubuntu@ip-172-31-17-2:~$ echo -e "\n\033[1;33m🔍 Status of the installed services...\033[0m"
sleep 10
for service in containerd kubelet; do
    echo -n "$service: "
    status=$(systemctl is-active "$service")
    echo "$status"
# systemctl is-active "$service"
done

echo -e "${GREEN}\n✅ All scripts executed successfully.${NC}"
echo -e "${YELLOW}\n✅ This node is ready to join the Kubernetes cluster.${NC}"
echo -e "${GREEN}\n🎉 Happy Kuberneting! 🚀${NC}"

🔍 Status of the installed services...
containerd: active
kubelet: activating

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀
ubuntu@ip-172-31-17-2:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 21:12:24 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: k8s-control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.17.2
🔹 Public IP      : 34.229.96.59
🔹 MAC Address    : 0a:ff:cb:24:e0:3f
🔹 Network        : 127.0.0.1/8,172.31.17.2/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.9G/23G
🔹 CPU Load       :  0.18, 0.07, 0.02
🔹 UUID           : ec2677750e3f94b628b7d2dbc496bdea
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 13.301587ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...
containerd: active
kubelet: 
❌ Error occurred at line 83. Exiting...


❌ Failed to execute K8s-Node-Init.sh. Exiting...

ubuntu@ip-172-31-17-2:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 21:13:56 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: k8s-control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.17.2
🔹 Public IP      : 34.229.96.59
🔹 MAC Address    : 0a:ff:cb:24:e0:3f
🔹 Network        : 127.0.0.1/8,172.31.17.2/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.9G/23G
🔹 CPU Load       :  0.08, 0.08, 0.02
🔹 UUID           : ec2677750e3f94b628b7d2dbc496bdea
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: exists         |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 12.726796ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...
containerd: active
kubelet: 
❌ Error occurred at line 84. Exiting...


❌ Failed to execute K8s-Node-Init.sh. Exiting...

ubuntu@ip-172-31-17-2:~$ systemctl is-active "$service"
activating
ubuntu@ip-172-31-17-2:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 21:17:28 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: k8s-control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.17.2
🔹 Public IP      : 34.229.96.59
🔹 MAC Address    : 0a:ff:cb:24:e0:3f
🔹 Network        : 127.0.0.1/8,172.31.17.2/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.9G/23G
🔹 CPU Load       :  0.01, 0.07, 0.03
🔹 UUID           : ec2677750e3f94b628b7d2dbc496bdea
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: exists         |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.1 s                                                                    total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: exists         |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 10.945101ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...
containerd: active
kubelet: 
❌ Error occurred at line 84. Exiting...


❌ Failed to execute K8s-Node-Init.sh. Exiting...

ubuntu@ip-172-31-17-2:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 21:18:57 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: k8s-control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.17.2
🔹 Public IP      : 34.229.96.59
🔹 MAC Address    : 0a:ff:cb:24:e0:3f
🔹 Network        : 127.0.0.1/8,172.31.17.2/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.9G/23G
🔹 CPU Load       :  0.06, 0.09, 0.04
🔹 UUID           : ec2677750e3f94b628b7d2dbc496bdea
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: exists         |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 11.77662ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Service is running: containerd
⚠️  Conflicting resources found! Do you want to delete them? (y/n): y

🛑 Stopping Kubernetes-related services...
✅ Services stopped successfully.

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.
✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0318 21:20:12.824876   26564 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [k8s-control-plane-1 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.17.2]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [k8s-control-plane-1 localhost] and IPs [172.31.17.2 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [k8s-control-plane-1 localhost] and IPs [172.31.17.2 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 1.001158876s
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.001491944s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
ea9d9bba7b00f297f1fea46864efa5ac5a0325c49798883017c2e263aa92306e
[mark-control-plane] Marking the node k8s-control-plane-1 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node k8s-control-plane-1 as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: 7nli7o.8ls3x2zmng94gtjj
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.17.2:6443 --token 7nli7o.8ls3x2zmng94gtjj \
	--discovery-token-ca-cert-hash sha256:c7e522032750b618501b10140e8383a6985ebd1a2ed6f009b42c6469f3d40678 \
	--control-plane --certificate-key ea9d9bba7b00f297f1fea46864efa5ac5a0325c49798883017c2e263aa92306e

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.17.2:6443 --token 7nli7o.8ls3x2zmng94gtjj \
	--discovery-token-ca-cert-hash sha256:c7e522032750b618501b10140e8383a6985ebd1a2ed6f009b42c6469f3d40678 
✅ Kubernetes control plane initialized successfully.

🔧 Configuring kubectl...
✅ kubectl configured successfully.

🚀 Deploying Calico network plugin...
poddisruptionbudget.policy/calico-kube-controllers created
serviceaccount/calico-kube-controllers created
serviceaccount/calico-node created
configmap/calico-config created
customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created
clusterrole.rbac.authorization.k8s.io/calico-kube-controllers created
clusterrole.rbac.authorization.k8s.io/calico-node created
clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created
clusterrolebinding.rbac.authorization.k8s.io/calico-node created
daemonset.apps/calico-node created
deployment.apps/calico-kube-controllers created
✅ Calico network plugin deployed successfully.

⏳ Waiting for the control plane and pods to become ready...
bash: /dev/fd/63: No such file or directory

❌ Cluster not ready. Exiting...
ubuntu@ip-172-31-17-2:~$ kubectl get pods -A
E0318 21:22:27.812984   29860 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:22:27.814701   29860 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:22:27.816062   29860 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:22:27.817386   29860 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:22:27.818740   29860 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-17-2:~$ ls -l /dev/fd/
total 0
lrwx------ 1 ubuntu ubuntu 64 Mar 18 21:22 0 -> /dev/pts/0
lrwx------ 1 ubuntu ubuntu 64 Mar 18 21:22 1 -> /dev/pts/0
lrwx------ 1 ubuntu ubuntu 64 Mar 18 21:22 2 -> /dev/pts/0
lr-x------ 1 ubuntu ubuntu 64 Mar 18 21:22 3 -> /proc/30050/fd
ubuntu@ip-172-31-17-2:~$ kubectl get pods -n kube-system | grep calico
kubectl logs -n kube-system -l k8s-app=calico-node
E0318 21:23:05.749302   30246 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:05.750758   30246 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:05.752103   30246 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:05.753429   30246 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:05.754732   30246 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
E0318 21:23:05.808506   30251 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:05.810068   30251 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:05.811387   30251 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:05.812676   30251 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-17-2:~$ kubectl get nodes
E0318 21:23:17.385310   30352 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:17.386746   30352 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:17.388416   30352 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:17.389790   30352 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:23:17.391143   30352 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-17-2:~$ kubectl get nodes
E0318 21:26:48.065636   32375 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:26:48.067769   32375 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:26:48.069174   32375 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:26:48.070563   32375 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:26:48.072354   32375 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-17-2:~$ sudo systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: active (running) since Tue 2025-03-18 21:20:24 UTC; 7min ago
       Docs: https://kubernetes.io/docs/
   Main PID: 27056 (kubelet)
      Tasks: 11 (limit: 4676)
     Memory: 38.2M (peak: 38.9M)
        CPU: 8.594s
     CGroup: /system.slice/kubelet.service
             └─27056 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --contain>

Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.971683   27056 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed >
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.971703   27056 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed>
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.971740   27056 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"coredns-668d6b>
Mar 18 21:20:46 k8s-control-plane-1 kubelet[27056]: I0318 21:20:46.698707   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="ec7c5cee923a91841e224f2>
Mar 18 21:20:46 k8s-control-plane-1 kubelet[27056]: I0318 21:20:46.705067   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="54b3d390a9bfb5e3e75250f>
Mar 18 21:20:46 k8s-control-plane-1 kubelet[27056]: I0318 21:20:46.712017   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="6d8232cab82ab16cd64da68>
Mar 18 21:20:47 k8s-control-plane-1 kubelet[27056]: I0318 21:20:47.523736   27056 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/calico-node-747sw" pod>
Mar 18 21:20:48 k8s-control-plane-1 kubelet[27056]: I0318 21:20:48.788347   27056 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-668d6bf9bc-hqq>
Mar 18 21:20:48 k8s-control-plane-1 kubelet[27056]: I0318 21:20:48.823210   27056 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-668d6bf9bc-bxs>
Mar 18 21:20:51 k8s-control-plane-1 kubelet[27056]: I0318 21:20:51.783935   27056 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/calico-kube-controller>
lines 1-23/23 (END)
ubuntu@ip-172-31-17-2:~$ sudo docker ps | grep kube-apiserver
sudo: docker: command not found
ubuntu@ip-172-31-17-2:~$ sudo crictl ps | grep kube-apiserver
WARN[0000] Config "/etc/crictl.yaml" does not exist, trying next: "/usr/bin/crictl.yaml" 
WARN[0000] runtime connect using default endpoints: [unix:///run/containerd/containerd.sock unix:///run/crio/crio.sock unix:///var/run/cri-dockerd.sock]. As the default settings are now deprecated, you should set the endpoint instead. 
WARN[0000] Image connect using default endpoints: [unix:///run/containerd/containerd.sock unix:///run/crio/crio.sock unix:///var/run/cri-dockerd.sock]. As the default settings are now deprecated, you should set the endpoint instead. 
e2d7efb83eebe       f8bdc4cfa0651       8 minutes ago       Running             kube-apiserver            0                   8af1d72fd638b       kube-apiserver-k8s-control-plane-1            kube-system
ubuntu@ip-172-31-17-2:~$ sudo journalctl -u kubelet --no-pager -n 50
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: I0318 21:20:43.616645   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="39012e59ad8ad0ac0e18eb42e6cef3d7f849e56480a1fa2de5ca16077115ea0f"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.743001   27056 log.go:32] "RunPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"0c92b85b194dfd013a4a29626ed8f4350416c4a973df4ad7d6292e941690d39b\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.743052   27056 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"0c92b85b194dfd013a4a29626ed8f4350416c4a973df4ad7d6292e941690d39b\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/calico-kube-controllers-7498b9bb4c-wwwqj"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.743071   27056 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"0c92b85b194dfd013a4a29626ed8f4350416c4a973df4ad7d6292e941690d39b\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/calico-kube-controllers-7498b9bb4c-wwwqj"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.743139   27056 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"calico-kube-controllers-7498b9bb4c-wwwqj_kube-system(fc7a44c6-f599-4988-80a2-283979d035a6)\" with CreatePodSandboxError: \"Failed to create sandbox for pod \\\"calico-kube-controllers-7498b9bb4c-wwwqj_kube-system(fc7a44c6-f599-4988-80a2-283979d035a6)\\\": rpc error: code = Unknown desc = failed to setup network for sandbox \\\"0c92b85b194dfd013a4a29626ed8f4350416c4a973df4ad7d6292e941690d39b\\\": plugin type=\\\"calico\\\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/\"" pod="kube-system/calico-kube-controllers-7498b9bb4c-wwwqj" podUID="fc7a44c6-f599-4988-80a2-283979d035a6"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.781158   27056 log.go:32] "RunPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"d50251d50a66f28360f725cae8f2ea8d58b6eb8f848c553b6c95c0774a2f3a7c\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.781205   27056 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"d50251d50a66f28360f725cae8f2ea8d58b6eb8f848c553b6c95c0774a2f3a7c\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-hqqd9"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.781231   27056 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"d50251d50a66f28360f725cae8f2ea8d58b6eb8f848c553b6c95c0774a2f3a7c\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-hqqd9"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.781266   27056 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"coredns-668d6bf9bc-hqqd9_kube-system(85f55aa7-7f3f-4ca4-90bd-7555895b1a60)\" with CreatePodSandboxError: \"Failed to create sandbox for pod \\\"coredns-668d6bf9bc-hqqd9_kube-system(85f55aa7-7f3f-4ca4-90bd-7555895b1a60)\\\": rpc error: code = Unknown desc = failed to setup network for sandbox \\\"d50251d50a66f28360f725cae8f2ea8d58b6eb8f848c553b6c95c0774a2f3a7c\\\": plugin type=\\\"calico\\\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/\"" pod="kube-system/coredns-668d6bf9bc-hqqd9" podUID="85f55aa7-7f3f-4ca4-90bd-7555895b1a60"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.799988   27056 log.go:32] "RunPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"0f8992b7b00d83839a2eaa26af41cbf503cd113f34e0fec5217b7e8f09e0f368\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.800036   27056 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"0f8992b7b00d83839a2eaa26af41cbf503cd113f34e0fec5217b7e8f09e0f368\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-bxs9t"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.800056   27056 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"0f8992b7b00d83839a2eaa26af41cbf503cd113f34e0fec5217b7e8f09e0f368\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-bxs9t"
Mar 18 21:20:43 k8s-control-plane-1 kubelet[27056]: E0318 21:20:43.800102   27056 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"coredns-668d6bf9bc-bxs9t_kube-system(417c11e2-ec7e-42cd-a571-a1328ec88c89)\" with CreatePodSandboxError: \"Failed to create sandbox for pod \\\"coredns-668d6bf9bc-bxs9t_kube-system(417c11e2-ec7e-42cd-a571-a1328ec88c89)\\\": rpc error: code = Unknown desc = failed to setup network for sandbox \\\"0f8992b7b00d83839a2eaa26af41cbf503cd113f34e0fec5217b7e8f09e0f368\\\": plugin type=\\\"calico\\\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/\"" pod="kube-system/coredns-668d6bf9bc-bxs9t" podUID="417c11e2-ec7e-42cd-a571-a1328ec88c89"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: I0318 21:20:44.624330   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="d50251d50a66f28360f725cae8f2ea8d58b6eb8f848c553b6c95c0774a2f3a7c"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: I0318 21:20:44.631272   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="0f8992b7b00d83839a2eaa26af41cbf503cd113f34e0fec5217b7e8f09e0f368"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: I0318 21:20:44.650922   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="0c92b85b194dfd013a4a29626ed8f4350416c4a973df4ad7d6292e941690d39b"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.911499   27056 log.go:32] "RunPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"0adf4b3e64c47a1a01b4825340f14cad4d2e84674ea21046e39cda667671ca00\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.911560   27056 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"0adf4b3e64c47a1a01b4825340f14cad4d2e84674ea21046e39cda667671ca00\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-bxs9t"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.911588   27056 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"0adf4b3e64c47a1a01b4825340f14cad4d2e84674ea21046e39cda667671ca00\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-bxs9t"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.911644   27056 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"coredns-668d6bf9bc-bxs9t_kube-system(417c11e2-ec7e-42cd-a571-a1328ec88c89)\" with CreatePodSandboxError: \"Failed to create sandbox for pod \\\"coredns-668d6bf9bc-bxs9t_kube-system(417c11e2-ec7e-42cd-a571-a1328ec88c89)\\\": rpc error: code = Unknown desc = failed to setup network for sandbox \\\"0adf4b3e64c47a1a01b4825340f14cad4d2e84674ea21046e39cda667671ca00\\\": plugin type=\\\"calico\\\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/\"" pod="kube-system/coredns-668d6bf9bc-bxs9t" podUID="417c11e2-ec7e-42cd-a571-a1328ec88c89"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.919282   27056 log.go:32] "RunPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"eb8598ab17489b05449607f2bd00a60072c82c31c68108abaf3154966202a9eb\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.919463   27056 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"eb8598ab17489b05449607f2bd00a60072c82c31c68108abaf3154966202a9eb\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-hqqd9"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.919551   27056 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"eb8598ab17489b05449607f2bd00a60072c82c31c68108abaf3154966202a9eb\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-hqqd9"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.919614   27056 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"coredns-668d6bf9bc-hqqd9_kube-system(85f55aa7-7f3f-4ca4-90bd-7555895b1a60)\" with CreatePodSandboxError: \"Failed to create sandbox for pod \\\"coredns-668d6bf9bc-hqqd9_kube-system(85f55aa7-7f3f-4ca4-90bd-7555895b1a60)\\\": rpc error: code = Unknown desc = failed to setup network for sandbox \\\"eb8598ab17489b05449607f2bd00a60072c82c31c68108abaf3154966202a9eb\\\": plugin type=\\\"calico\\\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/\"" pod="kube-system/coredns-668d6bf9bc-hqqd9" podUID="85f55aa7-7f3f-4ca4-90bd-7555895b1a60"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.966184   27056 log.go:32] "RunPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"dff86f9d13867d450e4bc8d5754816deb2b99334056a89c3607aea888510a01b\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.966244   27056 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"dff86f9d13867d450e4bc8d5754816deb2b99334056a89c3607aea888510a01b\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/calico-kube-controllers-7498b9bb4c-wwwqj"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.966266   27056 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"dff86f9d13867d450e4bc8d5754816deb2b99334056a89c3607aea888510a01b\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/calico-kube-controllers-7498b9bb4c-wwwqj"
Mar 18 21:20:44 k8s-control-plane-1 kubelet[27056]: E0318 21:20:44.966302   27056 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"calico-kube-controllers-7498b9bb4c-wwwqj_kube-system(fc7a44c6-f599-4988-80a2-283979d035a6)\" with CreatePodSandboxError: \"Failed to create sandbox for pod \\\"calico-kube-controllers-7498b9bb4c-wwwqj_kube-system(fc7a44c6-f599-4988-80a2-283979d035a6)\\\": rpc error: code = Unknown desc = failed to setup network for sandbox \\\"dff86f9d13867d450e4bc8d5754816deb2b99334056a89c3607aea888510a01b\\\": plugin type=\\\"calico\\\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/\"" pod="kube-system/calico-kube-controllers-7498b9bb4c-wwwqj" podUID="fc7a44c6-f599-4988-80a2-283979d035a6"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: I0318 21:20:45.660053   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="dff86f9d13867d450e4bc8d5754816deb2b99334056a89c3607aea888510a01b"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: I0318 21:20:45.672341   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="0adf4b3e64c47a1a01b4825340f14cad4d2e84674ea21046e39cda667671ca00"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: I0318 21:20:45.692994   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="eb8598ab17489b05449607f2bd00a60072c82c31c68108abaf3154966202a9eb"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.942018   27056 log.go:32] "RunPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"ec7c5cee923a91841e224f2526be85d72cb90948e74b3d3861ec62ef12831576\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.942071   27056 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"ec7c5cee923a91841e224f2526be85d72cb90948e74b3d3861ec62ef12831576\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/calico-kube-controllers-7498b9bb4c-wwwqj"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.942093   27056 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"ec7c5cee923a91841e224f2526be85d72cb90948e74b3d3861ec62ef12831576\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/calico-kube-controllers-7498b9bb4c-wwwqj"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.942129   27056 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"calico-kube-controllers-7498b9bb4c-wwwqj_kube-system(fc7a44c6-f599-4988-80a2-283979d035a6)\" with CreatePodSandboxError: \"Failed to create sandbox for pod \\\"calico-kube-controllers-7498b9bb4c-wwwqj_kube-system(fc7a44c6-f599-4988-80a2-283979d035a6)\\\": rpc error: code = Unknown desc = failed to setup network for sandbox \\\"ec7c5cee923a91841e224f2526be85d72cb90948e74b3d3861ec62ef12831576\\\": plugin type=\\\"calico\\\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/\"" pod="kube-system/calico-kube-controllers-7498b9bb4c-wwwqj" podUID="fc7a44c6-f599-4988-80a2-283979d035a6"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.942342   27056 log.go:32] "RunPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"6d8232cab82ab16cd64da68d5aaf481fa0445486cb55fee89a674c66da619a8e\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.942377   27056 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"6d8232cab82ab16cd64da68d5aaf481fa0445486cb55fee89a674c66da619a8e\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-bxs9t"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.942398   27056 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"6d8232cab82ab16cd64da68d5aaf481fa0445486cb55fee89a674c66da619a8e\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-bxs9t"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.942439   27056 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"coredns-668d6bf9bc-bxs9t_kube-system(417c11e2-ec7e-42cd-a571-a1328ec88c89)\" with CreatePodSandboxError: \"Failed to create sandbox for pod \\\"coredns-668d6bf9bc-bxs9t_kube-system(417c11e2-ec7e-42cd-a571-a1328ec88c89)\\\": rpc error: code = Unknown desc = failed to setup network for sandbox \\\"6d8232cab82ab16cd64da68d5aaf481fa0445486cb55fee89a674c66da619a8e\\\": plugin type=\\\"calico\\\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/\"" pod="kube-system/coredns-668d6bf9bc-bxs9t" podUID="417c11e2-ec7e-42cd-a571-a1328ec88c89"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.971635   27056 log.go:32] "RunPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"54b3d390a9bfb5e3e75250f43ea4234d4ee181427791913bb0697a569dc0f853\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.971683   27056 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"54b3d390a9bfb5e3e75250f43ea4234d4ee181427791913bb0697a569dc0f853\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-hqqd9"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.971703   27056 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed to setup network for sandbox \"54b3d390a9bfb5e3e75250f43ea4234d4ee181427791913bb0697a569dc0f853\": plugin type=\"calico\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/" pod="kube-system/coredns-668d6bf9bc-hqqd9"
Mar 18 21:20:45 k8s-control-plane-1 kubelet[27056]: E0318 21:20:45.971740   27056 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"coredns-668d6bf9bc-hqqd9_kube-system(85f55aa7-7f3f-4ca4-90bd-7555895b1a60)\" with CreatePodSandboxError: \"Failed to create sandbox for pod \\\"coredns-668d6bf9bc-hqqd9_kube-system(85f55aa7-7f3f-4ca4-90bd-7555895b1a60)\\\": rpc error: code = Unknown desc = failed to setup network for sandbox \\\"54b3d390a9bfb5e3e75250f43ea4234d4ee181427791913bb0697a569dc0f853\\\": plugin type=\\\"calico\\\" failed (add): stat /var/lib/calico/nodename: no such file or directory: check that the calico/node container is running and has mounted /var/lib/calico/\"" pod="kube-system/coredns-668d6bf9bc-hqqd9" podUID="85f55aa7-7f3f-4ca4-90bd-7555895b1a60"
Mar 18 21:20:46 k8s-control-plane-1 kubelet[27056]: I0318 21:20:46.698707   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="ec7c5cee923a91841e224f2526be85d72cb90948e74b3d3861ec62ef12831576"
Mar 18 21:20:46 k8s-control-plane-1 kubelet[27056]: I0318 21:20:46.705067   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="54b3d390a9bfb5e3e75250f43ea4234d4ee181427791913bb0697a569dc0f853"
Mar 18 21:20:46 k8s-control-plane-1 kubelet[27056]: I0318 21:20:46.712017   27056 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="6d8232cab82ab16cd64da68d5aaf481fa0445486cb55fee89a674c66da619a8e"
Mar 18 21:20:47 k8s-control-plane-1 kubelet[27056]: I0318 21:20:47.523736   27056 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/calico-node-747sw" podStartSLOduration=4.241093342 podStartE2EDuration="18.523719319s" podCreationTimestamp="2025-03-18 21:20:29 +0000 UTC" firstStartedPulling="2025-03-18 21:20:30.139532751 +0000 UTC m=+5.990308831" lastFinishedPulling="2025-03-18 21:20:44.422158792 +0000 UTC m=+20.272934808" observedRunningTime="2025-03-18 21:20:46.758696491 +0000 UTC m=+22.609472588" watchObservedRunningTime="2025-03-18 21:20:47.523719319 +0000 UTC m=+23.374495376"
Mar 18 21:20:48 k8s-control-plane-1 kubelet[27056]: I0318 21:20:48.788347   27056 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-668d6bf9bc-hqqd9" podStartSLOduration=19.788331531 podStartE2EDuration="19.788331531s" podCreationTimestamp="2025-03-18 21:20:29 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-03-18 21:20:48.766399187 +0000 UTC m=+24.617175276" watchObservedRunningTime="2025-03-18 21:20:48.788331531 +0000 UTC m=+24.639107571"
Mar 18 21:20:48 k8s-control-plane-1 kubelet[27056]: I0318 21:20:48.823210   27056 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-668d6bf9bc-bxs9t" podStartSLOduration=19.82319748 podStartE2EDuration="19.82319748s" podCreationTimestamp="2025-03-18 21:20:29 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-03-18 21:20:48.790613548 +0000 UTC m=+24.641389859" watchObservedRunningTime="2025-03-18 21:20:48.82319748 +0000 UTC m=+24.673973534"
Mar 18 21:20:51 k8s-control-plane-1 kubelet[27056]: I0318 21:20:51.783935   27056 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/calico-kube-controllers-7498b9bb4c-wwwqj" podStartSLOduration=20.106684116 podStartE2EDuration="22.783918412s" podCreationTimestamp="2025-03-18 21:20:29 +0000 UTC" firstStartedPulling="2025-03-18 21:20:48.508911627 +0000 UTC m=+24.359687634" lastFinishedPulling="2025-03-18 21:20:51.186145862 +0000 UTC m=+27.036921930" observedRunningTime="2025-03-18 21:20:51.783032324 +0000 UTC m=+27.633808393" watchObservedRunningTime="2025-03-18 21:20:51.783918412 +0000 UTC m=+27.634694475"
ubuntu@ip-172-31-17-2:~$ netstat -tulnp | grep 6443
(No info could be read for "-p": geteuid()=1000 but you should be root.)
tcp6       0      0 :::6443                 :::*                    LISTEN      -                   
ubuntu@ip-172-31-17-2:~$ kubectl get pods -n kube-system | grep calico
E0318 21:29:10.004191   33747 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:29:10.008118   33747 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:29:10.009620   33747 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:29:10.011204   33747 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:29:10.012455   33747 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-17-2:~$ kubectl logs -n kube-system -l k8s-app=calico-node
E0318 21:29:22.195531   33903 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:29:22.197379   33903 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:29:22.198698   33903 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 21:29:22.200004   33903 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-17-2:~$ cat ~/.kube/config
cat: /home/ubuntu/.kube/config: No such file or directory
ubuntu@ip-172-31-17-2:~$ # Configure kubectl
echo -e "\n\033[1;33m🔧 Configuring kubectl...\033[0m"
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
echo -e "\033[1;32m✅ kubectl configured successfully.\033[0m"

🔧 Configuring kubectl...
✅ kubectl configured successfully.
ubuntu@ip-172-31-17-2:~$ 
Broadcast message from root@ip-172-31-17-2 (Tue 2025-03-18 21:32:32 UTC):

The system will power off now!

Connection to ec2-34-229-96-59.compute-1.amazonaws.com closed by remote host.
Connection to ec2-34-229-96-59.compute-1.amazonaws.com closed.
ibtisam@ibtisam-iq:~$ 

------------------------------------------------------------------------------------------------------------------

ubuntu@ip-172-31-21-119:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 21:47:08 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
143 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: ip-172-31-21-119


🔄 Change hostname? Enter new name (or press Enter to keep current): az

🖥️ Updating hostname to 'az'...

✅ Hostname updated successfully.
========================================
📌 System Information
========================================
🔹 Hostname       : az
🔹 Private IP     : 172.31.21.119
🔹 Public IP      : 23.22.106.233
🔹 MAC Address    : 0a:ff:f0:41:9b:b7
🔹 Network        : 127.0.0.1/8,172.31.21.119/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.3G/23G
🔹 CPU Load       :  0.63, 0.25, 0.09
🔹 UUID           : ec236351090639cd382545466cd99942
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet set on hold.
kubeadm set on hold.
kubectl set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: waiting        |--------------------------------------| 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    waiting        |--------------------------------------| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: downloading    |--------------------------------------|    0.0 B/1022.0 B 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    waiting        |--------------------------------------| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    downloading    |--------------------------------------|    0.0 B/3.5 MiB 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   downloading    |--------------------------------------|    0.0 B/581.0 B 
elapsed: 0.3 s                                                                    total:  1022.0 (3.3 KiB/s)                                       
ERRO[0000] failed to get content info                    error="context canceled"
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.5 s                                                                    total:  3.5 Mi (6.9 MiB/s)                                       
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 178.988035ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Service is running: containerd
⚠️  Conflicting resources found! Do you want to delete them? (y/n): y

🛑 Stopping Kubernetes-related services...
✅ Services stopped successfully.

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.
✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0318 21:49:03.087732    6003 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [az kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.21.119]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [az localhost] and IPs [172.31.21.119 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [az localhost] and IPs [172.31.21.119 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 501.58673ms
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.502266287s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
282785a3725a4bb7aca1e85026ea7fdc1176d60470f619c6f04ef79ebb8b7576
[mark-control-plane] Marking the node az as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node az as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: t2bg6p.o3qnb2gah8jdkbvz
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.21.119:6443 --token t2bg6p.o3qnb2gah8jdkbvz \
	--discovery-token-ca-cert-hash sha256:bfd88400a268065754caee5a9772d35c22f0d0f16d306d7457f63b3d2dd4cfe2 \
	--control-plane --certificate-key 282785a3725a4bb7aca1e85026ea7fdc1176d60470f619c6f04ef79ebb8b7576

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.21.119:6443 --token t2bg6p.o3qnb2gah8jdkbvz \
	--discovery-token-ca-cert-hash sha256:bfd88400a268065754caee5a9772d35c22f0d0f16d306d7457f63b3d2dd4cfe2 
✅ Kubernetes control plane initialized successfully.

🔧 Configuring kubectl...
✅ kubectl configured successfully.

🚀 Deploying Calico network plugin...
poddisruptionbudget.policy/calico-kube-controllers created
serviceaccount/calico-kube-controllers created
serviceaccount/calico-node created
configmap/calico-config created
customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created
clusterrole.rbac.authorization.k8s.io/calico-kube-controllers created
clusterrole.rbac.authorization.k8s.io/calico-node created
clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created
clusterrolebinding.rbac.authorization.k8s.io/calico-node created
daemonset.apps/calico-node created
deployment.apps/calico-kube-controllers created
✅ Calico network plugin deployed successfully.

⏳ Waiting for the control plane and pods to become ready...
bash: /dev/fd/63: No such file or directory

❌ Cluster not ready. Exiting...
ubuntu@ip-172-31-21-119:~$ ls -al .kube
ls: cannot access '.kube': No such file or directory
ubuntu@ip-172-31-21-119:~$ ls -al
total 28
drwxr-x--- 4 ubuntu ubuntu 4096 Mar 18 21:48 .
drwxr-xr-x 3 root   root   4096 Mar 18 21:45 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:46 .cache
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:45 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 18 21:47 .sudo_as_admin_successful
ubuntu@ip-172-31-21-119:~$ mkdir -p $HOME/.kube
ubuntu@ip-172-31-21-119:~$ ls -al
total 32
drwxr-x--- 5 ubuntu ubuntu 4096 Mar 18 21:54 .
drwxr-xr-x 3 root   root   4096 Mar 18 21:45 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:46 .cache
drwxrwxr-x 2 ubuntu ubuntu 4096 Mar 18 21:54 .kube
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:45 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 18 21:47 .sudo_as_admin_successful
ubuntu@ip-172-31-21-119:~$ sudo ls /etc/kubernetes/admin.conf
/etc/kubernetes/admin.conf
ubuntu@ip-172-31-21-119:~$ sudo ls -l /etc/kubernetes/admin.conf
-rw------- 1 root root 5653 Mar 18 21:49 /etc/kubernetes/admin.conf
ubuntu@ip-172-31-21-119:~$ ls -al .kube/config
ls: cannot access '.kube/config': No such file or directory
ubuntu@ip-172-31-21-119:~$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
ubuntu@ip-172-31-21-119:~$ ls -al .kube/config
-rw------- 1 root root 5653 Mar 18 21:56 .kube/config
ubuntu@ip-172-31-21-119:~$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
ubuntu@ip-172-31-21-119:~$ ls -al .kube/config
-rw------- 1 ubuntu ubuntu 5653 Mar 18 21:56 .kube/config
ubuntu@ip-172-31-21-119:~$ kubectl status kubelet
error: unknown command "status" for "kubectl"
ubuntu@ip-172-31-21-119:~$ systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: active (running) since Tue 2025-03-18 21:49:14 UTC; 9min ago
       Docs: https://kubernetes.io/docs/
   Main PID: 6501 (kubelet)
      Tasks: 11 (limit: 4676)
     Memory: 38.3M (peak: 39.0M)
        CPU: 11.021s
     CGroup: /system.slice/kubelet.service
             └─6501 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --containe>

Mar 18 21:50:31 az kubelet[6501]: E0318 21:50:31.060509    6501 kuberuntime_sandbox.go:72] "Failed to create sandbox for pod" err="rpc error: code = Unknown desc = failed to setup network f>
Mar 18 21:50:31 az kubelet[6501]: E0318 21:50:31.060525    6501 kuberuntime_manager.go:1237] "CreatePodSandbox for pod failed" err="rpc error: code = Unknown desc = failed to setup network >
Mar 18 21:50:31 az kubelet[6501]: E0318 21:50:31.060559    6501 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"CreatePodSandbox\" for \"coredns-668d6bf9bc-7j9zn_kube-sy>
Mar 18 21:50:31 az kubelet[6501]: I0318 21:50:31.794977    6501 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="779a741b32bcb6a89349cfe7948583d6eb64c345a>
Mar 18 21:50:31 az kubelet[6501]: I0318 21:50:31.812767    6501 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="95c73749c008ccad25b87473bc0f9900727666713>
Mar 18 21:50:31 az kubelet[6501]: I0318 21:50:31.821530    6501 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="04d8dfeecc4ff4a2ed92982481900b4e1e8c597e6>
Mar 18 21:50:31 az kubelet[6501]: I0318 21:50:31.827741    6501 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/calico-node-xnd28" podStartSLOduration=2>
Mar 18 21:50:33 az kubelet[6501]: I0318 21:50:33.901708    6501 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-668d6bf9bc-7j9zn" podStartSLOdur>
Mar 18 21:50:35 az kubelet[6501]: I0318 21:50:35.902112    6501 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-668d6bf9bc-44cnm" podStartSLOdur>
Mar 18 21:50:35 az kubelet[6501]: I0318 21:50:35.902184    6501 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/calico-kube-controllers-7498b9bb4c-2czcr>
lines 1-23/23 (END)
q
Command 'q' not found, but can be installed with:
sudo apt install python3-q-text-as-data
ubuntu@ip-172-31-21-119:~$ kubectl get nodes
NAME   STATUS   ROLES           AGE     VERSION
az     Ready    control-plane   9m50s   v1.32.3
ubuntu@ip-172-31-21-119:~$ kubectl get all -A
NAMESPACE     NAME                                           READY   STATUS    RESTARTS   AGE
kube-system   pod/calico-kube-controllers-7498b9bb4c-2czcr   1/1     Running   0          9m15s
kube-system   pod/calico-node-xnd28                          1/1     Running   0          9m15s
kube-system   pod/coredns-668d6bf9bc-44cnm                   1/1     Running   0          10m
kube-system   pod/coredns-668d6bf9bc-7j9zn                   1/1     Running   0          10m
kube-system   pod/etcd-az                                    1/1     Running   0          10m
kube-system   pod/kube-apiserver-az                          1/1     Running   0          10m
kube-system   pod/kube-controller-manager-az                 1/1     Running   0          10m
kube-system   pod/kube-proxy-6mx5q                           1/1     Running   0          10m
kube-system   pod/kube-scheduler-az                          1/1     Running   0          10m

NAMESPACE     NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE
default       service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP                  10m
kube-system   service/kube-dns     ClusterIP   10.96.0.10   <none>        53/UDP,53/TCP,9153/TCP   10m

NAMESPACE     NAME                         DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE
kube-system   daemonset.apps/calico-node   1         1         1       1            1           kubernetes.io/os=linux   9m15s
kube-system   daemonset.apps/kube-proxy    1         1         1       1            1           kubernetes.io/os=linux   10m

NAMESPACE     NAME                                      READY   UP-TO-DATE   AVAILABLE   AGE
kube-system   deployment.apps/calico-kube-controllers   1/1     1            1           9m15s
kube-system   deployment.apps/coredns                   2/2     2            2           10m

NAMESPACE     NAME                                                 DESIRED   CURRENT   READY   AGE
kube-system   replicaset.apps/calico-kube-controllers-7498b9bb4c   1         1         1       9m15s
kube-system   replicaset.apps/coredns-668d6bf9bc                   2         2         2       10m
ubuntu@ip-172-31-21-119:~$ ls /opt/cni/bin/
LICENSE    bandwidth  calico       dhcp   firewall  host-device  install  loopback  portmap  sbr     tap     vlan
README.md  bridge     calico-ipam  dummy  flannel   host-local   ipvlan   macvlan   ptp      static  tuning  vrf
ubuntu@ip-172-31-21-119:~$ kubectl get pods -A
NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-7498b9bb4c-2czcr   1/1     Running   0          20m
kube-system   calico-node-xnd28                          1/1     Running   0          20m
kube-system   coredns-668d6bf9bc-44cnm                   1/1     Running   0          21m
kube-system   coredns-668d6bf9bc-7j9zn                   1/1     Running   0          21m
kube-system   etcd-az                                    1/1     Running   0          21m
kube-system   kube-apiserver-az                          1/1     Running   0          21m
kube-system   kube-controller-manager-az                 1/1     Running   0          21m
kube-system   kube-proxy-6mx5q                           1/1     Running   0          21m
kube-system   kube-scheduler-az                          1/1     Running   0          21m
ubuntu@ip-172-31-21-119:~$ sudo crictl info
WARN[0000] Config "/etc/crictl.yaml" does not exist, trying next: "/usr/bin/crictl.yaml" 
WARN[0000] runtime connect using default endpoints: [unix:///run/containerd/containerd.sock unix:///run/crio/crio.sock unix:///var/run/cri-dockerd.sock]. As the default settings are now deprecated, you should set the endpoint instead. 
{
  "cniconfig": {
    "Networks": [
      {
        "Config": {
          "CNIVersion": "0.3.1",
          "Name": "cni-loopback",
          "Plugins": [
            {
              "Network": {
                "dns": {},
                "ipam": {},
                "type": "loopback"
              },
              "Source": "{\"type\":\"loopback\"}"
            }
          ],
          "Source": "{\n\"cniVersion\": \"0.3.1\",\n\"name\": \"cni-loopback\",\n\"plugins\": [{\n  \"type\": \"loopback\"\n}]\n}"
        },
        "IFName": "lo"
      },
      {
        "Config": {
          "CNIVersion": "0.3.1",
          "Name": "k8s-pod-network",
          "Plugins": [
            {
              "Network": {
                "dns": {},
                "ipam": {
                  "type": "calico-ipam"
                },
                "type": "calico"
              },
              "Source": "{\"datastore_type\":\"kubernetes\",\"ipam\":{\"type\":\"calico-ipam\"},\"kubernetes\":{\"kubeconfig\":\"/etc/cni/net.d/calico-kubeconfig\"},\"log_file_path\":\"/var/log/calico/cni/cni.log\",\"log_level\":\"info\",\"mtu\":0,\"nodename\":\"az\",\"policy\":{\"type\":\"k8s\"},\"type\":\"calico\"}"
            },
            {
              "Network": {
                "capabilities": {
                  "portMappings": true
                },
                "dns": {},
                "ipam": {},
                "type": "portmap"
              },
              "Source": "{\"capabilities\":{\"portMappings\":true},\"snat\":true,\"type\":\"portmap\"}"
            },
            {
              "Network": {
                "capabilities": {
                  "bandwidth": true
                },
                "dns": {},
                "ipam": {},
                "type": "bandwidth"
              },
              "Source": "{\"capabilities\":{\"bandwidth\":true},\"type\":\"bandwidth\"}"
            }
          ],
          "Source": "{\n  \"name\": \"k8s-pod-network\",\n  \"cniVersion\": \"0.3.1\",\n  \"plugins\": [\n    {\n      \"type\": \"calico\",\n      \"log_level\": \"info\",\n      \"log_file_path\": \"/var/log/calico/cni/cni.log\",\n      \"datastore_type\": \"kubernetes\",\n      \"nodename\": \"az\",\n      \"mtu\": 0,\n      \"ipam\": {\n          \"type\": \"calico-ipam\"\n      },\n      \"policy\": {\n          \"type\": \"k8s\"\n      },\n      \"kubernetes\": {\n          \"kubeconfig\": \"/etc/cni/net.d/calico-kubeconfig\"\n      }\n    },\n    {\n      \"type\": \"portmap\",\n      \"snat\": true,\n      \"capabilities\": {\"portMappings\": true}\n    },\n    {\n      \"type\": \"bandwidth\",\n      \"capabilities\": {\"bandwidth\": true}\n    }\n  ]\n}"
        },
        "IFName": "eth0"
      }
    ],
    "PluginConfDir": "/etc/cni/net.d",
    "PluginDirs": [
      "/opt/cni/bin"
    ],
    "PluginMaxConfNum": 1,
    "Prefix": "eth"
  },
  "config": {
    "cdiSpecDirs": [
      "/etc/cdi",
      "/var/run/cdi"
    ],
    "cni": {
      "binDir": "/opt/cni/bin",
      "confDir": "/etc/cni/net.d",
      "confTemplate": "",
      "ipPref": "",
      "maxConfNum": 1,
      "setupSerially": false
    },
    "containerd": {
      "defaultRuntime": {
        "ContainerAnnotations": [],
        "PodAnnotations": [],
        "baseRuntimeSpec": "",
        "cniConfDir": "",
        "cniMaxConfNum": 0,
        "options": {},
        "privileged_without_host_devices": false,
        "privileged_without_host_devices_all_devices_allowed": false,
        "runtimeEngine": "",
        "runtimePath": "",
        "runtimeRoot": "",
        "runtimeType": "",
        "sandboxMode": "",
        "snapshotter": ""
      },
      "defaultRuntimeName": "runc",
      "disableSnapshotAnnotations": true,
      "discardUnpackedLayers": false,
      "ignoreBlockIONotEnabledErrors": false,
      "ignoreRdtNotEnabledErrors": false,
      "noPivot": false,
      "runtimes": {
        "runc": {
          "ContainerAnnotations": [],
          "PodAnnotations": [],
          "baseRuntimeSpec": "",
          "cniConfDir": "",
          "cniMaxConfNum": 0,
          "options": {
            "BinaryName": "",
            "CriuImagePath": "",
            "CriuPath": "",
            "CriuWorkPath": "",
            "IoGid": 0,
            "IoUid": 0,
            "NoNewKeyring": false,
            "NoPivotRoot": false,
            "Root": "",
            "ShimCgroup": "",
            "SystemdCgroup": true
          },
          "privileged_without_host_devices": false,
          "privileged_without_host_devices_all_devices_allowed": false,
          "runtimeEngine": "",
          "runtimePath": "",
          "runtimeRoot": "",
          "runtimeType": "io.containerd.runc.v2",
          "sandboxMode": "podsandbox",
          "snapshotter": ""
        }
      },
      "snapshotter": "overlayfs",
      "untrustedWorkloadRuntime": {
        "ContainerAnnotations": [],
        "PodAnnotations": [],
        "baseRuntimeSpec": "",
        "cniConfDir": "",
        "cniMaxConfNum": 0,
        "options": {},
        "privileged_without_host_devices": false,
        "privileged_without_host_devices_all_devices_allowed": false,
        "runtimeEngine": "",
        "runtimePath": "",
        "runtimeRoot": "",
        "runtimeType": "",
        "sandboxMode": "",
        "snapshotter": ""
      }
    },
    "containerdEndpoint": "/run/containerd/containerd.sock",
    "containerdRootDir": "/var/lib/containerd",
    "device_ownership_from_security_context": false,
    "disableApparmor": false,
    "disableCgroup": false,
    "disableHugetlbController": true,
    "disableProcMount": false,
    "disableTCPService": true,
    "drainExecSyncIOTimeout": "0s",
    "enableCDI": false,
    "enableSelinux": false,
    "enableTLSStreaming": false,
    "enableUnprivilegedICMP": false,
    "enableUnprivilegedPorts": false,
    "ignoreDeprecationWarnings": [],
    "ignoreImageDefinedVolumes": false,
    "imageDecryption": {
      "keyModel": "node"
    },
    "imagePullProgressTimeout": "5m0s",
    "imagePullWithSyncFs": false,
    "maxConcurrentDownloads": 3,
    "maxContainerLogSize": 16384,
    "netnsMountsUnderStateDir": false,
    "registry": {
      "auths": {},
      "configPath": "",
      "configs": {},
      "headers": {},
      "mirrors": {}
    },
    "restrictOOMScoreAdj": false,
    "rootDir": "/var/lib/containerd/io.containerd.grpc.v1.cri",
    "sandboxImage": "registry.k8s.io/pause:3.8",
    "selinuxCategoryRange": 1024,
    "stateDir": "/run/containerd/io.containerd.grpc.v1.cri",
    "statsCollectPeriod": 10,
    "streamIdleTimeout": "4h0m0s",
    "streamServerAddress": "127.0.0.1",
    "streamServerPort": "0",
    "systemdCgroup": false,
    "tolerateMissingHugetlbController": true,
    "unsetSeccompProfile": "",
    "x509KeyPairStreaming": {
      "tlsCertFile": "",
      "tlsKeyFile": ""
    }
  },
  "golang": "go1.22.10",
  "lastCNILoadStatus": "OK",
  "lastCNILoadStatus.default": "OK",
  "status": {
    "conditions": [
      {
        "message": "",
        "reason": "",
        "status": true,
        "type": "RuntimeReady"
      },
      {
        "message": "",
        "reason": "",
        "status": true,
        "type": "NetworkReady"
      },
      {
        "message": "",
        "reason": "",
        "status": true,
        "type": "ContainerdHasNoDeprecationWarnings"
      }
    ]
  }
}
ubuntu@ip-172-31-21-119:~$ kubectl get pods -n kube-system | grep calico
calico-kube-controllers-7498b9bb4c-2czcr   1/1     Running   0          21m
calico-node-xnd28                          1/1     Running   0          21m
ubuntu@ip-172-31-21-119:~$ kubectl get pods -A
NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-7498b9bb4c-2czcr   1/1     Running   0          22m
kube-system   calico-node-xnd28                          1/1     Running   0          22m
kube-system   coredns-668d6bf9bc-44cnm                   1/1     Running   0          23m
kube-system   coredns-668d6bf9bc-7j9zn                   1/1     Running   0          23m
kube-system   etcd-az                                    1/1     Running   0          23m
kube-system   kube-apiserver-az                          1/1     Running   0          23m
kube-system   kube-controller-manager-az                 1/1     Running   0          23m
kube-system   kube-proxy-6mx5q                           1/1     Running   0          23m
kube-system   kube-scheduler-az                          1/1     Running   0          23m
ubuntu@ip-172-31-21-119:~$ kubectl logs -n kube-system -l k8s-app=kube-dns
.:53
[INFO] plugin/reload: Running configuration SHA512 = 1b226df79860026c6a52e67daa10d7f0d57ec5b023288ec00c5e05f93523c894564e15b91770d3a07ae1cfbe861d15b37d4a0027e69c546ab112970993a3b03b
CoreDNS-1.11.3
linux/amd64, go1.21.11, a6338e9
.:53
[INFO] plugin/reload: Running configuration SHA512 = 1b226df79860026c6a52e67daa10d7f0d57ec5b023288ec00c5e05f93523c894564e15b91770d3a07ae1cfbe861d15b37d4a0027e69c546ab112970993a3b03b
CoreDNS-1.11.3
linux/amd64, go1.21.11, a6338e9
ubuntu@ip-172-31-21-119:~$ kubectl cluster-info || echo "⚠️ Failed to connect to Kubernetes cluster"
Kubernetes control plane is running at https://172.31.21.119:6443
CoreDNS is running at https://172.31.21.119:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-21-119:~$ echo "📌 KUBECONFIG set to $KUBECONFIG"
📌 KUBECONFIG set to 
ubuntu@ip-172-31-21-119:~$ # Ensure KUBECONFIG is set
export KUBECONFIG=$HOME/.kube/config
echo "📌 KUBECONFIG set to $KUBECONFIG"
📌 KUBECONFIG set to /home/ubuntu/.kube/config
ubuntu@ip-172-31-21-119:~$ #!/bin/bash

# Ensure ~/.kube/config exists before proceeding
while [ ! -f "$HOME/.kube/config" ]; do
    echo "🔍 ~/.kube/config not found. Setting it up..."
    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

    # Wait for a second before rechecking (prevents infinite fast loop)
    sleep 1
done

echo "✅ ~/.kube/config is set."

# Ensure KUBECONFIG is set
export KUBECONFIG=$HOME/.kube/config
echo "📌 KUBECONFIG set to $KUBECONFIG"

# Verify kubectl access
kubectl cluster-info || { echo "⚠️ Failed to connect to Kubernetes cluster"; exit 1; }

echo "🚀 Script execution completed successfully!"
✅ ~/.kube/config is set.
📌 KUBECONFIG set to /home/ubuntu/.kube/config
Kubernetes control plane is running at https://172.31.21.119:6443
CoreDNS is running at https://172.31.21.119:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
🚀 Script execution completed successfully!
ubuntu@ip-172-31-21-119:~$ cat ~/.kube/config
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJVVVhVUNkL3diakl3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1UZ3lNVFEwTURKYUZ3MHpOVEF6TVRZeU1UUTVNREphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURITVpBem95c2Q3WXhYWVpEN2lPY0FIa0E3VEM2Mys2R2tYTmVhdGpmRVNOeVpuUVh1R0FLRmZ0akYKYVliM1VxbmF1VW8xeS9GOElObXgvS1JuYjNmQ0FJMmUyUzlWUEh4TjhQS2JwQzhBTUZOUjg5TFJ1ZmRwZ1JyNQpqMVB1UHA0bDlJNXorYlVDUFBCbHR6anh1YlJPZ2lBVTYzeGhTNVpLY2cySDl3bXpvbHczaitxNUZ0Vm9BNFNRCnVVbUt6bVFkK2RqZlZza0JtNk1OZitSYS9xYlhCREpJQTJ5MjQ4cHNJa3VpZ3BSWExUUXpITWpxOHNBQVBmeHUKRUREMGFxMDJVeW5mRDk1SnVXdFVJTnc0ZHN1OEZDSHNxdHlEZXFXVTFuVE1ZSmpSdWRSdk1QYWFWYjhCSy9megpKRTd5S2FlaHhOaFhmckNhSFplQXZXZGZ3ZUpaQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTSE4vek1WRCtNWENzOTVIMXV4d0VwdE1JazN6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQS9tazYyNDdEZgpNYTljTEJSZVhZdjU3eDlvRlhoaDVuaFNQcXdWLzNhM1pLY1RxVGpEWGM4cjZPa3BQOWppeGk2c0pxZVBONGYxClA5eHJVTjBhanBsRVZ0RHROZVlJblpuS3FFRUVxWUZGZE5OWVJKa3QzNTZkaXltSjliY0g2Q3VKQmZGbTNwM2YKcXdLVlpLdHQvSmFFdm9VU2hFbWxLdmVkTyt2WjhKQnFPYnFPNERkV3BsaDNRRGZkTG1HQm5iVHUwempWMWRlVgpialNZcXY0aEFDSk1vY2hGMVlMaWN4bVUxYUppL2l5QUErYWZZNUVONlA4NmlEKzRmT0tJZndTRHFhamsxWHdOCllEblpOWnFxbkRDbEJLRS9OTzlHcGd5UjdGdjFEdndCZGcyL2tzUXJtMExMV2YwZEJtNllScVdUcjVxMVhaOFkKek0yU2tBYWJqRFVZCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://172.31.21.119:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJTjdyTmdvSVVHdjR3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1UZ3lNVFEwTURKYUZ3MHlOakF6TVRneU1UUTVNREphTUR3eApIekFkQmdOVkJBb1RGbXQxWW1WaFpHMDZZMngxYzNSbGNpMWhaRzFwYm5NeEdUQVhCZ05WQkFNVEVHdDFZbVZ5CmJtVjBaWE10WVdSdGFXNHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUFhmeUcKTDVOcHprMEEzOGFTVnlFY1RBNFRqWmRCT2xwUGllSndqNDlvRTY4cmlBWnUyNnVDZEMyYUJoVTNyZVhLSmZWdApTV2sxS2RTa2tXRXFhZy82WVNRNloyWUh6Qk1WVTYyVWZ1RTFNSnY1WGIzUmpta1ZobjlRSHcwWGRmWlRrTEhwCk5FTGR4UGpZZGtGdm03N2JSci9iOVZPLzBManU2dm16RWZjVXdTY2ptd1FtYnZ0YWJpNUJzbmNBMWdTNFk4WWYKemZQRVE4RWRyaXlDNFh2dGFhZzVpNkNxd2xQWlZjQjFnK3RDaWlBRjJzWXg4T0NUeXhlWEhaaCs4a01sVkVTRwplK0xwUFlWdHRJeFN1OHVIZ2xHTWtIellUdldvSmtlU1hQQjA0WGZvQjJUN2tocjhnK1A5bFRVdzROR25hbmlPClVXcW1WcGVrRmQ1ZzVmakJBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUsKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkljMy9NeFVQNHhjS3ozawpmVzdIQVNtMHdpVGZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNhR2lmWVgyZmM4RnlsU0JHNC9YcVYrc3J1CjZIbExjVG8wbDlNb2p1VEJxTDNOTEVUOUFLRDZJamlyVVZGZng0WmhSd3Q2b1packJmNUFhampZMjZFZUo2a2cKa244SU00eExqMmhualdDa0NKYU5DL1R2Q3haZDFMakEvN1BoMFZFYm0vNVN1RW9lK3NmMWh0OFA2dTVja1NzYwp5anlkbkE4SFh4bzZFbFl0Q2FtS3Fwb1prNm9aUXIwelZRMGMrakxUZkVWQmJTdUxWa0xMcDFwZzdQbWtDV3owClJYUkFUMklQTEhjWk9kS3J0SitlcE83R01EZFh2ZlhUTFB4MHZ0ZFl0ZzdJUHdDNzFqTEhHM1pJRTFRM2JOdGoKNTg5VW4yUFVGNGk4SW1PeW9yMktsWnFkbUc1c3FPdjBQWDcyWE41WW43Vks2TExDZ0dnVGtwY3kwSDBUCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBejEzOGhpK1RhYzVOQU4vR2tsY2hIRXdPRTQyWFFUcGFUNG5pY0krUGFCT3ZLNGdHCmJ0dXJnblF0bWdZVk42M2x5aVgxYlVscE5TblVwSkZoS21vUCttRWtPbWRtQjh3VEZWT3RsSDdoTlRDYitWMjkKMFk1cEZZWi9VQjhORjNYMlU1Q3g2VFJDM2NUNDJIWkJiNXUrMjBhLzIvVlR2OUM0N3VyNXN4SDNGTUVuSTVzRQpKbTc3V200dVFiSjNBTllFdUdQR0g4M3p4RVBCSGE0c2d1Rjc3V21vT1l1Z3FzSlQyVlhBZFlQclFvb2dCZHJHCk1mRGdrOHNYbHgyWWZ2SkRKVlJFaG52aTZUMkZiYlNNVXJ2TGg0SlJqSkI4MkU3MXFDWkhrbHp3ZE9GMzZBZGsKKzVJYS9JUGovWlUxTU9EUnAycDRqbEZxcGxhWHBCWGVZT1g0d1FJREFRQUJBb0lCQUcrQ2tRcnZob3Y5SGpkOApIbUlQYklTMCtWVFdiU0hzYVNnZ2M1NG45T3Y0dWRmazIrQzlTK3RvNGlUVFpKRitkL1ZPbUQzZW5pNnlnZURGCk5NVUVKL2R5U1hNR3F6MUNKbmp2ZUlaRC9JTUgwcmcwQ3FFbnZhYVBudUxNNzlOUDRkaHFGT0hjOHFBakRkWUoKTVlMODg1TWk1b1UzMVlOdWtDUWFRNUJoOXNZM2FDaVZ3dDErMlJGRHhBVzVaTXZUakJBV2ZucXRhSWNUcitFagpVOE5sNWlYbWhDbXNkL1V0NUdleFJCZDZzdldEUUxaSC8xVlZ1ZXVmTmhYUlVWQUV0bUlhSVdDMllOS3oyQ3BoCnA0dStkM0E0VTZtUFZlRmtWb1JZWnFEZkVIaURZNzZESDkxSXhxenJkdUl3V3NkZyt6MFZNWStrSXNVaFpBRDIKOVl6bEE4a0NnWUVBNm1XRDB6MTJiNXo1QWVQUUVxdlo1cWdaWGJncEZaNmNCZ1RDaXkvWU15bk1oVytxVFZWMgphMkFUMC9BaUtNNE1BNkZBOUJiY3g5UmFrZkRiWXBHd1pnNHJHZDBMTDU5QmI0OHVBeDF2TXNmaGNYaFNmMGxECkxUV3c3YW4rVFA1L0t6MFhKeWJWWVZKYTh5MDdWUWJsT3lCWUNrS0dBY2QvR255Zm93OTlhSnNDZ1lFQTRucTUKYW9GQnVFd0gxd0RTU24zN0RzU25PVStLN1NMM1I2YWlLMkU3a2NFOXE5RUNSeWxEUzhNSW9HY2RNcjNKRXdwTgpyb0NRY3NFV2FBRXVFUVFDRlErMysxb3BmS1FSbUdOaThVNTU4ZU5hMGxKZkpjK1h4dENqTlp0eURZa0tBcDVkCmhQRjBZOWxyTytJWWJ4ZjBnaUV5bXgrd2ZHNC9abmtoeHFpRDA5TUNnWUFKTVJYc1VMcTJRY2VhQlY4QmZHKzkKRmRaNDBHSDhFUTQ1UmpLQzFzdDVwaWY1QzVuNEVtUGtiZzRZLzQrM1hlMG1yMG9teUVhOEoxMnQzMjRhL1crWApjUExMdnRsVGNzRlVLSjg3VEFveVNaaFRwTTVIWTQ0WTFjUXNiY0FsTU0yMzJsdHdFNXZHaHo0OXp3WkduVkNiCjh2YkE0RDcxRHVlekdEUUNadmNhQlFLQmdGQ3NxTG13bTJsNzQ5c0psdDhrS3pjaWcvTGRTNzZYRXdDNThkQ0UKRFVVcFViK1BiMEZNQ0lYSFRwNWN2TURqYStuVlpNQ0JXWE1YSnRVYmZuNWZNQ0t5ZTdZVWN1ek1RTnhJb3VrVQpMRW9tMDZaUjQwVER3dXYyUy96L2gwd2RBYXpYSHJjSmo0MDEySVgzVHY3YnlLUkdFUkhDNHdvZjk0T1lLSmpzClZERXpBb0dCQUxNWFJlL3dGVmk1blc0MmpSM1dxVHFCYjc1YkFmU3ZUUk44alpRbVBYV2dHWEVMZkF2ejlrdzAKWmc2cGR1d3BwUWRvTjBlbGlCbERId0pPbWJ5OVFhcE5FUXRjU3JNWkVBUVdWa3RPd0tUM1FVejNtLzVFb3VUVQpyZXFlcm9rNE1KQ1hlSmNTeTc2Y1hLL09JQ240alV2RjUrSDBQbjltSHRrYzFidmRnVXIxCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
ubuntu@ip-172-31-21-119:~$ cat /var/log/k8s-setup.log
Tue Mar 18 21:47:08 UTC 2025 - Starting Kubernetes Control Plane Setup
ubuntu@ip-172-31-21-119:~$ ls -al /var/lib/kubelet/
total 52
drwxrwxr-x  9 root root 4096 Mar 18 21:49 .
drwxr-xr-x 51 root root 4096 Mar 18 22:10 ..
-rw-r--r--  1 root root    0 Mar 11 20:38 .kubelet-keep
drwx------  2 root root 4096 Mar 18 21:49 checkpoints
-rw-r--r--  1 root root 1123 Mar 18 21:49 config.yaml
-rw-------  1 root root   62 Mar 18 21:49 cpu_manager_state
drwxr-xr-x  2 root root 4096 Mar 18 21:49 device-plugins
-rw-r--r--  1 root root  150 Mar 18 21:49 kubeadm-flags.env
-rw-------  1 root root   61 Mar 18 21:49 memory_manager_state
drwxr-xr-x  2 root root 4096 Mar 18 21:49 pki
drwxr-x---  2 root root 4096 Mar 18 21:49 plugins
drwxr-x---  2 root root 4096 Mar 18 21:49 plugins_registry
drwxr-x---  2 root root 4096 Mar 18 21:49 pod-resources
drwxr-x--- 11 root root 4096 Mar 18 21:50 pods
ubuntu@ip-172-31-21-119:~$ tree -a /var/lib/kubelet/
/var/lib/kubelet/
├── .kubelet-keep
├── checkpoints  [error opening dir]
├── config.yaml
├── cpu_manager_state
├── device-plugins
│   └── kubelet.sock
├── kubeadm-flags.env
├── memory_manager_state
├── pki
│   ├── kubelet-client-2025-03-18-21-49-07.pem
│   ├── kubelet-client-current.pem -> /var/lib/kubelet/pki/kubelet-client-2025-03-18-21-49-07.pem
│   ├── kubelet.crt
│   └── kubelet.key
├── plugins  [error opening dir]
├── plugins_registry  [error opening dir]
├── pod-resources  [error opening dir]
└── pods  [error opening dir]

8 directories, 10 files
ubuntu@ip-172-31-21-119:~$ tree -a /etc/kubernetes/
/etc/kubernetes/
├── admin.conf
├── controller-manager.conf
├── kubelet.conf
├── manifests
│   ├── .kubelet-keep
│   ├── etcd.yaml
│   ├── kube-apiserver.yaml
│   ├── kube-controller-manager.yaml
│   └── kube-scheduler.yaml
├── pki
│   ├── apiserver-etcd-client.crt
│   ├── apiserver-etcd-client.key
│   ├── apiserver-kubelet-client.crt
│   ├── apiserver-kubelet-client.key
│   ├── apiserver.crt
│   ├── apiserver.key
│   ├── ca.crt
│   ├── ca.key
│   ├── etcd
│   │   ├── ca.crt
│   │   ├── ca.key
│   │   ├── healthcheck-client.crt
│   │   ├── healthcheck-client.key
│   │   ├── peer.crt
│   │   ├── peer.key
│   │   ├── server.crt
│   │   └── server.key
│   ├── front-proxy-ca.crt
│   ├── front-proxy-ca.key
│   ├── front-proxy-client.crt
│   ├── front-proxy-client.key
│   ├── sa.key
│   └── sa.pub
├── scheduler.conf
└── super-admin.conf

4 directories, 32 files
ubuntu@ip-172-31-21-119:~$ tree -a /var/lib/etcd/
/var/lib/etcd/  [error opening dir]

0 directories, 1 file
ubuntu@ip-172-31-21-119:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 22:58:49 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: az


🔄 Change hostname? Enter new name (or press Enter to keep current): control-plane-1

🖥️ Updating hostname to 'control-plane-1'...

✅ Hostname updated successfully.
========================================
📌 System Information
========================================
🔹 Hostname       : control-plane-1
🔹 Private IP     : 172.31.21.119
🔹 Public IP      : 23.22.106.233
🔹 MAC Address    : 0a:ff:f0:41:9b:b7,ee:ee:ee:ee:ee:ee ee:ee:ee:ee:ee:ee,ee:ee:ee:ee:ee:ee
🔹 Network        : 127.0.0.1/8,172.31.21.119/20 192.168.181.192/32
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 88G/365G
🔹 CPU Load       :  0.09, 0.07, 0.07
🔹 UUID           : ec236351090639cd382545466cd99942
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE    bandwidth  calico	   dhcp   firewall  host-device  install  loopback  portmap  sbr     tap     vlan
README.md  bridge     calico-ipam  dummy  flannel   host-local	 ipvlan   macvlan   ptp      static  tuning  vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 20.550167ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Found existing Kubernetes directory: /etc/kubernetes/admin.conf
⚠️  Found existing Kubernetes directory: /etc/kubernetes/super-admin.conf
⚠️  Found existing Kubernetes directory: /etc/kubernetes/controller-manager.conf
⚠️  Found existing Kubernetes directory: /etc/kubernetes/kubelet.conf
⚠️  Found existing Kubernetes directory: /etc/kubernetes/scheduler.conf
⚠️  Found existing Kubernetes directory: /etc/kubernetes/manifests/kube-apiserver.yaml
⚠️  Found existing Kubernetes directory: /etc/kubernetes/manifests/kube-controller-manager.yaml
⚠️  Found existing Kubernetes directory: /etc/kubernetes/manifests/kube-scheduler.yaml
⚠️  Found existing Kubernetes directory: /etc/kubernetes/manifests/etcd.yaml
⚠️  Found existing Kubernetes directory: /etc/kubernetes/pki/
⚠️  Found existing Kubernetes directory: /var/lib/etcd
⚠️  Found existing Kubernetes directory: /root/.kube/
⚠️  Service is running: kubelet
⚠️  Service is running: containerd
⚠️  Port 6443 is already in use
⚠️  Port 10259 is already in use
⚠️  Port 10257 is already in use
⚠️  Port 10250 is already in use
⚠️  Port 2379 is already in use
⚠️  Port 2380 is already in use
⚠️  Conflicting resources found! Do you want to delete them? (y/n): y

🛑 Stopping Kubernetes-related services...
✅ Services stopped successfully.

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
6443/tcp:             6389
10259/tcp:            6332
10257/tcp:            6383
2379/tcp:             6364
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.
✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0318 23:00:33.989227   51045 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [control-plane-1 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.21.119]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [control-plane-1 localhost] and IPs [172.31.21.119 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [control-plane-1 localhost] and IPs [172.31.21.119 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 501.180304ms
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.002965847s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
error execution phase upload-config/kubelet: error writing CRISocket for this node: nodes "control-plane-1" not found
To see the stack trace of this error execute with --v=5 or higher

❌ kubeadm init failed. Exiting...

❌ Error at line 77. Exiting...
ubuntu@ip-172-31-21-119:~$ kubectl get nodes
Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")
ubuntu@ip-172-31-21-119:~$ sudo systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: active (running) since Tue 2025-03-18 23:00:38 UTC; 5min ago
       Docs: https://kubernetes.io/docs/
   Main PID: 51117 (kubelet)
      Tasks: 10 (limit: 4676)
     Memory: 45.8M (peak: 46.7M)
        CPU: 20.032s
     CGroup: /system.slice/kubelet.service
             └─51117 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --contain>

Mar 18 23:06:15 control-plane-1 kubelet[51117]: E0318 23:06:15.494906   51117 controller.go:145] "Failed to ensure lease exists, will retry" err="Unauthorized" interval="7s"
Mar 18 23:06:15 control-plane-1 kubelet[51117]: I0318 23:06:15.598494   51117 kubelet_node_status.go:75] "Attempting to register node" node="control-plane-1"
Mar 18 23:06:15 control-plane-1 kubelet[51117]: E0318 23:06:15.606014   51117 kubelet_node_status.go:107] "Unable to register node with API server" err="Unauthorized" node="control-plane-1"
Mar 18 23:06:15 control-plane-1 kubelet[51117]: E0318 23:06:15.609682   51117 kubelet.go:3190] "No need to create a mirror pod, since failed to get node info from the cluster" err="node \"c>
Mar 18 23:06:18 control-plane-1 kubelet[51117]: E0318 23:06:18.656316   51117 eviction_manager.go:292] "Eviction manager: failed to get summary stats" err="failed to get node info: node \"c>
Mar 18 23:06:22 control-plane-1 kubelet[51117]: E0318 23:06:22.502563   51117 controller.go:145] "Failed to ensure lease exists, will retry" err="Unauthorized" interval="7s"
Mar 18 23:06:22 control-plane-1 kubelet[51117]: I0318 23:06:22.612008   51117 kubelet_node_status.go:75] "Attempting to register node" node="control-plane-1"
Mar 18 23:06:22 control-plane-1 kubelet[51117]: E0318 23:06:22.618021   51117 kubelet_node_status.go:107] "Unable to register node with API server" err="Unauthorized" node="control-plane-1"
Mar 18 23:06:23 control-plane-1 kubelet[51117]: W0318 23:06:23.335823   51117 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: Unauthorized
Mar 18 23:06:23 control-plane-1 kubelet[51117]: E0318 23:06:23.335857   51117 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriv>

ubuntu@ip-172-31-21-119:~$ sudo kubeadm reset -f
sudo rm -rf /etc/kubernetes /var/lib/etcd ~/.kube
[reset] Reading configuration from the "kubeadm-config" ConfigMap in namespace "kube-system"...
[reset] Use 'kubeadm init phase upload-config --config your-config.yaml' to re-upload it.
W0318 23:07:44.536645   51540 configset.go:78] Warning: No kubeproxy.config.k8s.io/v1alpha1 config is loaded. Continuing without it: configmaps "kube-proxy" not found
W0318 23:07:44.553510   51540 reset.go:143] [reset] Unable to fetch the kubeadm-config ConfigMap from cluster: failed to get node registration: failed to get corresponding node: nodes "control-plane-1" not found
[preflight] Running pre-flight checks
W0318 23:07:44.553573   51540 removeetcdmember.go:106] [reset] No kubeadm config, using etcd pod spec to get data directory
[reset] Deleted contents of the etcd data directory: /var/lib/etcd
[reset] Stopping the kubelet service
[reset] Unmounting mounted directories in "/var/lib/kubelet"
W0318 23:07:45.898182   51540 cleanupnode.go:105] [reset] Failed to remove containers: [failed to stop running pod c249db6cb83cad5c5201adcd75073a466e9730cca2bb05a2da80491a595a2a2b: rpc error: code = Unknown desc = failed to destroy network for sandbox "c249db6cb83cad5c5201adcd75073a466e9730cca2bb05a2da80491a595a2a2b": plugin type="calico" failed (delete): error getting ClusterInformation: Get "https://10.96.0.1:443/apis/crd.projectcalico.org/v1/clusterinformations/default": dial tcp 10.96.0.1:443: connect: connection refused, failed to stop running pod 9d5e86f2441a5c35fb3b586e9d244f9bc91cd0a9a85296fbcc9cdbf6e4f87cf4: rpc error: code = Unknown desc = failed to destroy network for sandbox "9d5e86f2441a5c35fb3b586e9d244f9bc91cd0a9a85296fbcc9cdbf6e4f87cf4": plugin type="calico" failed (delete): error getting ClusterInformation: Get "https://10.96.0.1:443/apis/crd.projectcalico.org/v1/clusterinformations/default": dial tcp 10.96.0.1:443: connect: connection refused, failed to stop running pod 490a28547b869dda3fc41911b1061dc98b2a29feb9292f9ccfca6fa90235764a: rpc error: code = Unknown desc = failed to destroy network for sandbox "490a28547b869dda3fc41911b1061dc98b2a29feb9292f9ccfca6fa90235764a": plugin type="calico" failed (delete): error getting ClusterInformation: Get "https://10.96.0.1:443/apis/crd.projectcalico.org/v1/clusterinformations/default": dial tcp 10.96.0.1:443: connect: connection refused]
[reset] Deleting contents of directories: [/etc/kubernetes/manifests /var/lib/kubelet /etc/kubernetes/pki]
[reset] Deleting files: [/etc/kubernetes/admin.conf /etc/kubernetes/super-admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/bootstrap-kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf]

The reset process does not clean CNI configuration. To do so, you must remove /etc/cni/net.d

The reset process does not reset or clean up iptables rules or IPVS tables.
If you wish to reset iptables, you must do so manually by using the "iptables" command.

If your cluster was setup to utilize IPVS, run ipvsadm --clear (or similar)
to reset your system's IPVS tables.

The reset process does not clean your kubeconfig files and you must remove them manually.
Please, check the contents of the $HOME/.kube/config file.
ubuntu@ip-172-31-21-119:~$ ls
ubuntu@ip-172-31-21-119:~$ ls -al
total 32
drwxr-x--- 4 ubuntu ubuntu 4096 Mar 18 23:07 .
drwxr-xr-x 3 root   root   4096 Mar 18 21:45 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:46 .cache
-rw------- 1 ubuntu ubuntu   20 Mar 18 21:58 .lesshst
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:45 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 18 21:47 .sudo_as_admin_successful
ubuntu@ip-172-31-21-119:~$ ls -al /etc/cni/net.d/
total 16
drwxrwxr-x 2 root root 4096 Mar 18 21:50 .
drwxrwxr-x 3 root root 4096 Mar 18 21:48 ..
-rw-r--r-- 1 root root    0 Dec 11 18:51 .kubernetes-cni-keep
-rw-r--r-- 1 root root  653 Mar 18 21:50 10-calico.conflist
-rw------- 1 root root 2780 Mar 18 21:50 calico-kubeconfig
ubuntu@ip-172-31-21-119:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash
Tue Mar 18 23:12:34 UTC 2025 - Starting Kubernetes Control Plane Setup

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: control-plane-1


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : control-plane-1
🔹 Private IP     : 172.31.21.119
🔹 Public IP      : 23.22.106.233
🔹 MAC Address    : 0a:ff:f0:41:9b:b7,ee:ee:ee:ee:ee:ee ee:ee:ee:ee:ee:ee,ee:ee:ee:ee:ee:ee
🔹 Network        : 127.0.0.1/8,172.31.21.119/20 192.168.181.192/32
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 4.5G/23G
🔹 CPU Load       :  0.07, 0.09, 0.11
🔹 UUID           : ec236351090639cd382545466cd99942
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE    bandwidth  calico	   dhcp   firewall  host-device  install  loopback  portmap  sbr     tap     vlan
README.md  bridge     calico-ipam  dummy  flannel   host-local	 ipvlan   macvlan   ptp      static  tuning  vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: exists         |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 11.768961ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Found existing Kubernetes directory: /etc/cni/net.d
⚠️  Found existing Kubernetes directory: /var/lib/kubelet
⚠️  Service is running: containerd
⚠️  Conflicting resources found! Do you want to delete them? (y/n): y

🛑 Stopping Kubernetes-related services...
✅ Services stopped successfully.

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.
✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0318 23:13:24.567159   54246 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [control-plane-1 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.21.119]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [control-plane-1 localhost] and IPs [172.31.21.119 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [control-plane-1 localhost] and IPs [172.31.21.119 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 1.000735781s
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.502368578s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
3ac23e91316cc3f3fbcd1bf2167162b2da70944d00d1208cce5717e7228332c0
[mark-control-plane] Marking the node control-plane-1 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node control-plane-1 as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: ogqkhw.my1hs6betki4rrgf
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.21.119:6443 --token ogqkhw.my1hs6betki4rrgf \
	--discovery-token-ca-cert-hash sha256:432b80c0b3a5ed6b2a149b5ac97e4796f5c62833f757a5f61fa7ba777b51626c \
	--control-plane --certificate-key 3ac23e91316cc3f3fbcd1bf2167162b2da70944d00d1208cce5717e7228332c0

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.21.119:6443 --token ogqkhw.my1hs6betki4rrgf \
	--discovery-token-ca-cert-hash sha256:432b80c0b3a5ed6b2a149b5ac97e4796f5c62833f757a5f61fa7ba777b51626c 
✅ Kubernetes control plane initialized successfully.

🔧 Configuring kubectl...
bash: /dev/fd/63: No such file or directory

❌ Cluster not ready. Exiting...
ubuntu@ip-172-31-21-119:~$ kubectl cluster-info
E0318 23:14:30.791783   54950 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:14:30.793117   54950 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:14:30.794390   54950 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:14:30.795744   54950 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:14:30.797103   54950 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-21-119:~$ ls -a
.  ..  .bash_logout  .bashrc  .cache  .lesshst  .profile  .ssh  .sudo_as_admin_successful
ubuntu@ip-172-31-21-119:~$ ls -l /dev/fd
lrwxrwxrwx 1 root root 13 Mar 18 21:45 /dev/fd -> /proc/self/fd
ubuntu@ip-172-31-21-119:~$ curl -fsSL "$REPO_URL/kube-config-setup.sh" | sudo bash
curl: (3) URL rejected: No host part in the URL
ubuntu@ip-172-31-21-119:~$ curl -fsSL curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/kube-config-setup.sh | sudo bash
curl: (6) Could not resolve host: curl
🔍 ~/.kube/config not found. Setting it up...
✅ ~/.kube/config is set.
📌 KUBECONFIG set to /root/.kube/config
Kubernetes control plane is running at https://172.31.21.119:6443
CoreDNS is running at https://172.31.21.119:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
✅ kubectl configured successfully.
ubuntu@ip-172-31-21-119:~$ ls -a
.  ..  .bash_logout  .bashrc  .cache  .lesshst  .profile  .ssh  .sudo_as_admin_successful
ubuntu@ip-172-31-21-119:~$ ls -al
total 32
drwxr-x--- 4 ubuntu ubuntu 4096 Mar 18 23:13 .
drwxr-xr-x 3 root   root   4096 Mar 18 21:45 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:46 .cache
-rw------- 1 ubuntu ubuntu   20 Mar 18 21:58 .lesshst
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:45 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 18 21:47 .sudo_as_admin_successful
ubuntu@ip-172-31-21-119:~$ curl -fsSL curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/kube-config-setup.sh | sudo bash
curl: (6) Could not resolve host: curl
✅ ~/.kube/config is set.
📌 KUBECONFIG set to /root/.kube/config
Kubernetes control plane is running at https://172.31.21.119:6443
CoreDNS is running at https://172.31.21.119:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
✅ kubectl configured successfully.
ubuntu@ip-172-31-21-119:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/kube-config-setup.sh | sudo bash
✅ ~/.kube/config is set.
📌 KUBECONFIG set to /root/.kube/config
Kubernetes control plane is running at https://172.31.21.119:6443
CoreDNS is running at https://172.31.21.119:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
✅ kubectl configured successfully.
ubuntu@ip-172-31-21-119:~$ kubectl get nodes
E0318 23:24:29.954204   55082 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:24:29.956644   55082 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:24:29.957989   55082 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:24:29.959378   55082 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:24:29.960768   55082 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-21-119:~$ kubectl get nodes
E0318 23:24:38.669920   55089 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:24:38.671483   55089 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:24:38.672806   55089 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:24:38.674055   55089 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0318 23:24:38.675301   55089 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-21-119:~$ kubectl get nodes
E0319 00:33:55.180079   55686 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:33:55.181507   55686 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:33:55.182829   55686 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:33:55.184259   55686 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:33:55.185547   55686 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-21-119:~$ kubect
Command 'kubect' not found, did you mean:
  command 'kubectx' from deb kubectx (0.9.5-1ubuntu0.3)
Try: sudo apt install <deb name>
ubuntu@ip-172-31-21-119:~$ kubectl cluster-info
E0319 00:34:57.852446   55710 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:34:57.853912   55710 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:34:57.855261   55710 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:34:57.856723   55710 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:34:57.858073   55710 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-21-119:~$ systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: active (running) since Tue 2025-03-18 23:13:36 UTC; 1h 22min ago
       Docs: https://kubernetes.io/docs/
   Main PID: 54731 (kubelet)
      Tasks: 11 (limit: 4676)
     Memory: 34.8M (peak: 35.9M)
        CPU: 1min 13.984s
     CGroup: /system.slice/kubelet.service
             └─54731 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --contain>

Mar 19 00:35:17 control-plane-1 kubelet[54731]: E0319 00:35:17.647640   54731 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNot>
Mar 19 00:35:22 control-plane-1 kubelet[54731]: E0319 00:35:22.648339   54731 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNot>
Mar 19 00:35:27 control-plane-1 kubelet[54731]: E0319 00:35:27.649461   54731 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNot>
Mar 19 00:35:32 control-plane-1 kubelet[54731]: E0319 00:35:32.650714   54731 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNot>
Mar 19 00:35:36 control-plane-1 kubelet[54731]: E0319 00:35:36.651322   54731 log.go:32] "StopPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to destroy>
Mar 19 00:35:36 control-plane-1 kubelet[54731]: E0319 00:35:36.651353   54731 kuberuntime_gc.go:180] "Failed to stop sandbox before removing" err="rpc error: code = Unknown desc = failed to>
Mar 19 00:35:36 control-plane-1 kubelet[54731]: E0319 00:35:36.651715   54731 log.go:32] "StopPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to destroy>
Mar 19 00:35:36 control-plane-1 kubelet[54731]: E0319 00:35:36.651734   54731 kuberuntime_gc.go:180] "Failed to stop sandbox before removing" err="rpc error: code = Unknown desc = failed to>
Mar 19 00:35:36 control-plane-1 kubelet[54731]: E0319 00:35:36.652277   54731 log.go:32] "StopPodSandbox from runtime service failed" err="rpc error: code = Unknown desc = failed to destroy>
Mar 19 00:35:36 control-plane-1 kubelet[54731]: E0319 00:35:36.652306   54731 kuberuntime_gc.go:180] "Failed to stop sandbox before removing" err="rpc error: code = Unknown desc = failed to>

ubuntu@ip-172-31-21-119:~$ kubectl cluster-info
E0319 00:35:44.970378   55727 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:35:44.972164   55727 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:35:44.973503   55727 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:35:44.974775   55727 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:35:44.976086   55727 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-21-119:~$ ls -al
total 32
drwxr-x--- 4 ubuntu ubuntu 4096 Mar 19 00:35 .
drwxr-xr-x 3 root   root   4096 Mar 18 21:45 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:46 .cache
-rw------- 1 ubuntu ubuntu   20 Mar 19 00:35 .lesshst
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:45 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 18 21:47 .sudo_as_admin_successful
ubuntu@ip-172-31-21-119:~$ ls -al
total 32
drwxr-x--- 4 ubuntu ubuntu 4096 Mar 19 00:35 .
drwxr-xr-x 3 root   root   4096 Mar 18 21:45 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:46 .cache
-rw------- 1 ubuntu ubuntu   20 Mar 19 00:35 .lesshst
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:45 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 18 21:47 .sudo_as_admin_successful
ubuntu@ip-172-31-21-119:~$ curl -fsSL curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/kube-config-setup.sh | sudo bash
curl: (6) Could not resolve host: curl
✅ ~/.kube/config is set.
📌 KUBECONFIG set to /root/.kube/config
Kubernetes control plane is running at https://172.31.21.119:6443
CoreDNS is running at https://172.31.21.119:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
✅ kubectl configured successfully.
ubuntu@ip-172-31-21-119:~$ ls -al
total 32
drwxr-x--- 4 ubuntu ubuntu 4096 Mar 19 00:35 .
drwxr-xr-x 3 root   root   4096 Mar 18 21:45 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:46 .cache
-rw------- 1 ubuntu ubuntu   20 Mar 19 00:35 .lesshst
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:45 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 18 21:47 .sudo_as_admin_successful
ubuntu@ip-172-31-21-119:~$ ls -al .kube
ls: cannot access '.kube': No such file or directory
ubuntu@ip-172-31-21-119:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/kube-config-setup.sh | sudo bash
✅ ~/.kube/config is set.
📌 KUBECONFIG set to /root/.kube/config
Kubernetes control plane is running at https://172.31.21.119:6443
CoreDNS is running at https://172.31.21.119:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
✅ kubectl configured successfully.
ubuntu@ip-172-31-21-119:~$ ls -al .kube
ls: cannot access '.kube': No such file or directory
ubuntu@ip-172-31-21-119:~$ ls -al
total 32
drwxr-x--- 4 ubuntu ubuntu 4096 Mar 19 00:35 .
drwxr-xr-x 3 root   root   4096 Mar 18 21:45 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:46 .cache
-rw------- 1 ubuntu ubuntu   20 Mar 19 00:35 .lesshst
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 18 21:45 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 18 21:47 .sudo_as_admin_successful
ubuntu@ip-172-31-21-119:~$ kubectl cluster-info
E0319 00:40:31.096241   55792 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:40:31.097678   55792 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:40:31.099589   55792 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:40:31.100953   55792 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 00:40:31.102329   55792 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-21-119:~$ 
Broadcast message from root@ip-172-31-21-119 (Wed 2025-03-19 00:41:10 UTC):

The system will power off now!

Connection to ec2-23-22-106-233.compute-1.amazonaws.com closed by remote host.
Connection to ec2-23-22-106-233.compute-1.amazonaws.com closed.
ibtisam@ibtisam-iq:~$ rm -rf silverinit.pem 
ibtisam@ibtisam-iq:~$ 

--------------------------------------------------------------------------------------------------------------------------------

ubuntu@ip-172-31-25-214:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
143 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: ip-172-31-25-214


🔄 Change hostname? Enter new name (or press Enter to keep current): k8s-control-plane-1

🖥️ Updating hostname to 'k8s-control-plane-1'...

✅ Hostname updated successfully.
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.25.214
🔹 Public IP      : 18.234.196.62
🔹 MAC Address    : 0a:ff:ea:3a:93:35
🔹 Network        : 127.0.0.1/8,172.31.25.214/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.3G/23G
🔹 CPU Load       :  0.52, 0.18, 0.06
🔹 UUID           : ec222193cf6556765cea6866846c40a2
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet set on hold.
kubeadm set on hold.
kubectl set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                 total:  9.0 Ki (44.8 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    downloading    |--------------------------------------|    0.0 B/3.5 MiB 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   downloading    |--------------------------------------|    0.0 B/581.0 B 
elapsed: 0.3 s                                                                    total:  10.0 K (33.1 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.4 s                                                                    total:  10.0 K (24.9 KiB/s)                                      
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 168.063165ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Found existing Kubernetes directory: /etc/cni/net.d
⚠️  Found existing Kubernetes directory: /var/lib/kubelet
⚠️  Service is running: containerd
⚠️  Conflicting resources found! Do you want to delete them? (y/n): ^C
ubuntu@ip-172-31-25-214:~$ ls /etc/cni/net.d
ubuntu@ip-172-31-25-214:~$ ls -l /etc/cni/net.d
total 0
ubuntu@ip-172-31-25-214:~$ ls /var/lib/kubelet/
ubuntu@ip-172-31-25-214:~$ ls -al /var/lib/kubelet/
total 8
drwxrwxr-x  2 root root 4096 Mar 19 10:22 .
drwxr-xr-x 48 root root 4096 Mar 19 10:22 ..
-rw-r--r--  1 root root    0 Mar 11 20:38 .kubelet-keep
ubuntu@ip-172-31-25-214:~$ ls -la /etc/cni/net.d
total 8
drwxrwxr-x 2 root root 4096 Mar 19 10:22 .
drwxrwxr-x 3 root root 4096 Mar 19 10:22 ..
-rw-r--r-- 1 root root    0 Dec 11 18:51 .kubernetes-cni-keep
ubuntu@ip-172-31-25-214:~$ cat /etc/cni/net.d/.kubernetes-cni-keep 
ubuntu@ip-172-31-25-214:~$ cat /var/lib/kubelet/.kubelet-keep 
ubuntu@ip-172-31-25-214:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: k8s-control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.25.214
🔹 Public IP      : 18.234.196.62
🔹 MAC Address    : 0a:ff:ea:3a:93:35
🔹 Network        : 127.0.0.1/8,172.31.25.214/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.9G/23G
🔹 CPU Load       :  0.08, 0.02, 0.01
🔹 UUID           : ec222193cf6556765cea6866846c40a2
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 13.813486ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Service is running: containerd
⚠️  Conflicting resources found! Do you want to delete them? (y/n): ^C
ubuntu@ip-172-31-25-214:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: k8s-control-plane-1


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: k8s-control-plane-1
========================================
📌 System Information
========================================
🔹 Hostname       : k8s-control-plane-1
🔹 Private IP     : 172.31.25.214
🔹 Public IP      : 18.234.196.62
🔹 MAC Address    : 0a:ff:ea:3a:93:35
🔹 Network        : 127.0.0.1/8,172.31.25.214/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.9G/23G
🔹 CPU Load       :  0.00, 0.00, 0.00
🔹 UUID           : ec222193cf6556765cea6866846c40a2
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: exists         |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.1 s                                                                    total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: exists         |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 13.512414ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
✅ No conflicting resources found. Proceeding...

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

 ✨ k8s-cleanup.sh script is completed!

✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🚀 Running kubeadm-init.sh script...

🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0319 11:06:30.751258    9888 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [k8s-control-plane-1 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.25.214]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [k8s-control-plane-1 localhost] and IPs [172.31.25.214 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [k8s-control-plane-1 localhost] and IPs [172.31.25.214 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 502.505833ms
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.501233895s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
04add0aa9606b7ce63ae2f499aac2d4fe6ac792eb335c3cb058f1a366d493189
[mark-control-plane] Marking the node k8s-control-plane-1 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node k8s-control-plane-1 as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: rnepgl.kxqlm32nqf5spek8
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.25.214:6443 --token rnepgl.kxqlm32nqf5spek8 \
	--discovery-token-ca-cert-hash sha256:cfe22f9729f460972de68a9f383a196e1a110a19981ee7cd6c603c8db12538bc \
	--control-plane --certificate-key 04add0aa9606b7ce63ae2f499aac2d4fe6ac792eb335c3cb058f1a366d493189

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.25.214:6443 --token rnepgl.kxqlm32nqf5spek8 \
	--discovery-token-ca-cert-hash sha256:cfe22f9729f460972de68a9f383a196e1a110a19981ee7cd6c603c8db12538bc 
✅ Kubernetes control plane initialized successfully.

🎉 kubeadm-init.sh script is completed!
✅ Successfully executed kubeadm-init.sh.


🚀 Running kube-config-setup.sh script...

🔍 ~/.kube/config not found. Setting it up...

✅ ~/.kube/config is set.
-rw------- 1 root root 5657 Mar 19 11:06 /root/.kube/config

📌 KUBECONFIG set to /root/.kube/config
Kubernetes control plane is running at https://172.31.25.214:6443
CoreDNS is running at https://172.31.25.214:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.

✅ kubectl configured successfully.

🎉 kube-config-setup.sh script is completed!
✅ Successfully executed kube-config-setup.sh.


🚀 Running network-plugin-setup.sh script...

🚀 Deploying Calico network plugin...
poddisruptionbudget.policy/calico-kube-controllers created
serviceaccount/calico-kube-controllers created
serviceaccount/calico-node created
configmap/calico-config created
customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created
clusterrole.rbac.authorization.k8s.io/calico-kube-controllers created
clusterrole.rbac.authorization.k8s.io/calico-node created
clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created
clusterrolebinding.rbac.authorization.k8s.io/calico-node created
daemonset.apps/calico-node created
deployment.apps/calico-kube-controllers created
✅ Calico network plugin deployed successfully.

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ CNI plugins found.

🎉 network-plugin-setup.sh script is completed!
✅ Successfully executed network-plugin-setup.sh.


🚀 Running k8s-readiness-check.sh script...
⏳ Waiting for Kubernetes API server to be ready...
✅ Kubernetes API server is running.

⏳ Waiting up to 10 minutes for the control plane and pods to become ready...

❌ Error at line 38. Exiting...

❌ Failed to execute k8s-readiness-check.sh. Exiting...

ubuntu@ip-172-31-25-214:~$ ls -la /etc/cni/net.d
total 16
drwxr-xr-x 2 root root 4096 Mar 19 11:06 .
drwxrwxr-x 3 root root 4096 Mar 19 11:06 ..
-rw-r--r-- 1 root root  670 Mar 19 11:06 10-calico.conflist
-rw------- 1 root root 2780 Mar 19 11:07 calico-kubeconfig
ubuntu@ip-172-31-25-214:~$ ls /opt/cni/bin/
LICENSE    bandwidth  calico       dhcp   firewall  host-device  install  loopback  portmap  sbr     tap     vlan
README.md  bridge     calico-ipam  dummy  flannel   host-local   ipvlan   macvlan   ptp      static  tuning  vrf
ubuntu@ip-172-31-25-214:~$ ls -al
total 28
drwxr-x--- 4 ubuntu ubuntu 4096 Mar 19 11:06 .
drwxr-xr-x 3 root   root   4096 Mar 19 09:52 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 19 09:53 .cache
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 19 09:52 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 19 10:21 .sudo_as_admin_successful
ubuntu@ip-172-31-25-214:~$ ps aux | grep kube-config-setup.sh
ubuntu     17396  0.0  0.0   7088  2048 pts/0    S+   11:26   0:00 grep --color=auto kube-config-setup.sh
ubuntu@ip-172-31-25-214:~$ ls -la /etc/kubernetes/admin.conf
-rw------- 1 root root 5657 Mar 19 11:06 /etc/kubernetes/admin.conf
ubuntu@ip-172-31-25-214:~$ sudo ls -la /root/.kube
total 20
drwxr-xr-x 3 root root 4096 Mar 19 11:06 .
drwx------ 5 root root 4096 Mar 19 11:06 ..
drwxr-x--- 4 root root 4096 Mar 19 11:06 cache
-rw------- 1 root root 5657 Mar 19 11:06 config
ubuntu@ip-172-31-25-214:~$ bash -x kube-config-setup.sh
bash: kube-config-setup.sh: No such file or directory
ubuntu@ip-172-31-25-214:~$ eval echo ~$SUDO_USER
/home/ubuntu
ubuntu@ip-172-31-25-214:~$ getent passwd $SUDO_USER | cut -d: -f6
/root
/usr/sbin
/bin
/dev
/bin
/usr/games
/var/cache/man
/var/spool/lpd
/var/mail
/var/spool/news
/var/spool/uucp
/bin
/var/www
/var/backups
/var/list
/run/ircd
/nonexistent
/nonexistent
/
/
/usr/lib/dhcpcd
/nonexistent
/nonexistent
/
/run/uuidd
/var/lib/tpm
/run/sshd
/var/cache/pollinate
/nonexistent
/var/lib/landscape
/var/lib/fwupd
/
/nonexistent
/var/lib/chrony
/home/ubuntu
ubuntu@ip-172-31-25-214:~$ sudo newgrp docker
newgrp: group 'docker' does not exist
ubuntu@ip-172-31-25-214:~$ su -
Password: 
su: Authentication failure
ubuntu@ip-172-31-25-214:~$ sudo su -
root@k8s-control-plane-1:~# echo $KUBECONFIG

root@k8s-control-plane-1:~# sudo su ubuntu
ubuntu@k8s-control-plane-1:/root$ ls -al
ls: cannot open directory '.': Permission denied
ubuntu@k8s-control-plane-1:/root$ sudo ls -al
total 36
drwx------  5 root root 4096 Mar 19 11:06 .
drwxr-xr-x 22 root root 4096 Mar 19 09:52 ..
-rw-r--r--  1 root root 3106 Apr 22  2024 .bashrc
drwxr-xr-x  3 root root 4096 Mar 19 11:06 .kube
-rw-------  1 root root   20 Mar 19 11:05 .lesshst
-rw-r--r--  1 root root  161 Apr 22  2024 .profile
drwx------  2 root root 4096 Mar 19 09:52 .ssh
-rw-r--r--  1 root root  165 Mar 19 11:06 .wget-hsts
drwx------  3 root root 4096 Mar 19 09:52 snap
ubuntu@k8s-control-plane-1:/root$ cd ~
ubuntu@k8s-control-plane-1:~$ cd ~
ubuntu@k8s-control-plane-1:~$ sudo ls -al
total 28
drwxr-x--- 4 ubuntu ubuntu 4096 Mar 19 11:06 .
drwxr-xr-x 3 root   root   4096 Mar 19 09:52 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 19 09:53 .cache
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 19 09:52 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 19 10:21 .sudo_as_admin_successful
ubuntu@k8s-control-plane-1:~$ cat .sudo_as_admin_successful 
ubuntu@k8s-control-plane-1:~$ systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: active (running) since Wed 2025-03-19 11:06:41 UTC; 41min ago
       Docs: https://kubernetes.io/docs/
   Main PID: 10403 (kubelet)
      Tasks: 10 (limit: 4676)
     Memory: 36.0M (peak: 37.2M)
        CPU: 41.388s
     CGroup: /system.slice/kubelet.service
             └─10403 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --contain>

Mar 19 11:47:02 k8s-control-plane-1 kubelet[10403]: E0319 11:47:02.129232   10403 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPlugi>
Mar 19 11:47:07 k8s-control-plane-1 kubelet[10403]: E0319 11:47:07.129910   10403 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPlugi>
Mar 19 11:47:12 k8s-control-plane-1 kubelet[10403]: E0319 11:47:12.131576   10403 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPlugi>
Mar 19 11:47:17 k8s-control-plane-1 kubelet[10403]: E0319 11:47:17.133147   10403 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPlugi>
Mar 19 11:47:22 k8s-control-plane-1 kubelet[10403]: E0319 11:47:22.134656   10403 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPlugi>
Mar 19 11:47:27 k8s-control-plane-1 kubelet[10403]: E0319 11:47:27.136316   10403 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPlugi>
Mar 19 11:47:32 k8s-control-plane-1 kubelet[10403]: E0319 11:47:32.137239   10403 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPlugi>
Mar 19 11:47:37 k8s-control-plane-1 kubelet[10403]: E0319 11:47:37.139222   10403 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPlugi>
Mar 19 11:47:42 k8s-control-plane-1 kubelet[10403]: E0319 11:47:42.140855   10403 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPlugi>
Mar 19 11:47:47 k8s-control-plane-1 kubelet[10403]: E0319 11:47:47.141508   10403 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPlugi>
lines 1-23/23 (END)
ubuntu@k8s-control-plane-1:~$ kubectl get nodes
E0319 11:48:13.411341   24255 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 11:48:13.413093   24255 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 11:48:13.414633   24255 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 11:48:13.416412   24255 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 11:48:13.417876   24255 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@k8s-control-plane-1:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/kube-config-setup.sh | sudo bash

🔍 ~/.kube/config not found. Setting it up...

✅ ~/.kube/config is set.
-rw------- 1 ubuntu ubuntu 5657 Mar 19 11:49 /home/ubuntu/.kube/config

📌 KUBECONFIG set to /home/ubuntu/.kube/config
Kubernetes control plane is running at https://172.31.25.214:6443
CoreDNS is running at https://172.31.25.214:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.

✅ kubectl configured successfully.

🎉 kube-config-setup.sh script is completed!
ubuntu@k8s-control-plane-1:~$ kubectl get nodes
NAME                  STATUS     ROLES           AGE   VERSION
k8s-control-plane-1   NotReady   control-plane   43m   v1.32.3
ubuntu@k8s-control-plane-1:~$ kubectl get nodes
NAME                  STATUS     ROLES           AGE   VERSION
k8s-control-plane-1   NotReady   control-plane   43m   v1.32.3
ubuntu@k8s-control-plane-1:~$ kubectl get po
No resources found in default namespace.
ubuntu@k8s-control-plane-1:~$ kubectl get po -A
NAMESPACE     NAME                                          READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-7498b9bb4c-h82gm      0/1     Pending   0          43m
kube-system   calico-node-fnbf2                             1/1     Running   0          43m
kube-system   coredns-668d6bf9bc-prcwv                      0/1     Pending   0          43m
kube-system   coredns-668d6bf9bc-vhh8k                      0/1     Pending   0          43m
kube-system   etcd-k8s-control-plane-1                      1/1     Running   0          43m
kube-system   kube-apiserver-k8s-control-plane-1            1/1     Running   0          43m
kube-system   kube-controller-manager-k8s-control-plane-1   1/1     Running   0          43m
kube-system   kube-proxy-dnw4h                              1/1     Running   0          43m
kube-system   kube-scheduler-k8s-control-plane-1            1/1     Running   0          43m
ubuntu@k8s-control-plane-1:~$ kubectl get po -A
NAMESPACE     NAME                                          READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-7498b9bb4c-h82gm      0/1     Pending   0          44m
kube-system   calico-node-fnbf2                             1/1     Running   0          44m
kube-system   coredns-668d6bf9bc-prcwv                      0/1     Pending   0          44m
kube-system   coredns-668d6bf9bc-vhh8k                      0/1     Pending   0          44m
kube-system   etcd-k8s-control-plane-1                      1/1     Running   0          44m
kube-system   kube-apiserver-k8s-control-plane-1            1/1     Running   0          44m
kube-system   kube-controller-manager-k8s-control-plane-1   1/1     Running   0          44m
kube-system   kube-proxy-dnw4h                              1/1     Running   0          44m
kube-system   kube-scheduler-k8s-control-plane-1            1/1     Running   0          44m
ubuntu@k8s-control-plane-1:~$ kubectl get po -n kube-system -o wide
NAME                                          READY   STATUS    RESTARTS   AGE   IP              NODE                  NOMINATED NODE   READINESS GATES
calico-kube-controllers-7498b9bb4c-h82gm      0/1     Pending   0          45m   <none>          <none>                <none>           <none>
calico-node-fnbf2                             1/1     Running   0          45m   172.31.25.214   k8s-control-plane-1   <none>           <none>
coredns-668d6bf9bc-prcwv                      0/1     Pending   0          45m   <none>          <none>                <none>           <none>
coredns-668d6bf9bc-vhh8k                      0/1     Pending   0          45m   <none>          <none>                <none>           <none>
etcd-k8s-control-plane-1                      1/1     Running   0          45m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-apiserver-k8s-control-plane-1            1/1     Running   0          45m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-controller-manager-k8s-control-plane-1   1/1     Running   0          45m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-proxy-dnw4h                              1/1     Running   0          45m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-scheduler-k8s-control-plane-1            1/1     Running   0          45m   172.31.25.214   k8s-control-plane-1   <none>           <none>
ubuntu@k8s-control-plane-1:~$ kubectl describe po -n kube-system calico-kube-controllers-7498b9bb4c-h82gm
Name:                 calico-kube-controllers-7498b9bb4c-h82gm
Namespace:            kube-system
Priority:             2000000000
Priority Class Name:  system-cluster-critical
Service Account:      calico-kube-controllers
Node:                 <none>
Labels:               k8s-app=calico-kube-controllers
                      pod-template-hash=7498b9bb4c
Annotations:          <none>
Status:               Pending
IP:                   
IPs:                  <none>
Controlled By:        ReplicaSet/calico-kube-controllers-7498b9bb4c
Containers:
  calico-kube-controllers:
    Image:      docker.io/calico/kube-controllers:v3.25.0
    Port:       <none>
    Host Port:  <none>
    Liveness:   exec [/usr/bin/check-status -l] delay=10s timeout=10s period=10s #success=1 #failure=6
    Readiness:  exec [/usr/bin/check-status -r] delay=0s timeout=1s period=10s #success=1 #failure=3
    Environment:
      ENABLED_CONTROLLERS:  node
      DATASTORE_TYPE:       kubernetes
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6kgg6 (ro)
Conditions:
  Type           Status
  PodScheduled   False 
Volumes:
  kube-api-access-6kgg6:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              kubernetes.io/os=linux
Tolerations:                 CriticalAddonsOnly op=Exists
                             node-role.kubernetes.io/control-plane:NoSchedule
                             node-role.kubernetes.io/master:NoSchedule
                             node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason            Age                 From               Message
  ----     ------            ----                ----               -------
  Warning  FailedScheduling  58s (x10 over 46m)  default-scheduler  0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.
ubuntu@k8s-control-plane-1:~$ kubectl logs -n kube-system calico-kube-controllers-7498b9bb4c-h82gm
ubuntu@k8s-control-plane-1:~$ kubectl get nodes -o wide
NAME                  STATUS     ROLES           AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
k8s-control-plane-1   NotReady   control-plane   47m   v1.32.3   172.31.25.214   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@k8s-control-plane-1:~$ kubectl describe node k8s-control-plane-1
Name:               k8s-control-plane-1
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=k8s-control-plane-1
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    projectcalico.org/IPv4Address: 172.31.25.214/20
                    projectcalico.org/IPv4IPIPTunnelAddr: 192.168.98.128
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 11:06:38 +0000
Taints:             node.kubernetes.io/not-ready:NoExecute
                    node-role.kubernetes.io/control-plane:NoSchedule
                    node.kubernetes.io/not-ready:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  k8s-control-plane-1
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 11:54:10 +0000
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 11:07:02 +0000   Wed, 19 Mar 2025 11:07:02 +0000   CalicoIsUp                   Calico is running on this node
  MemoryPressure       False   Wed, 19 Mar 2025 11:53:07 +0000   Wed, 19 Mar 2025 11:06:36 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 11:53:07 +0000   Wed, 19 Mar 2025 11:06:36 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 11:53:07 +0000   Wed, 19 Mar 2025 11:06:36 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                False   Wed, 19 Mar 2025 11:53:07 +0000   Wed, 19 Mar 2025 11:06:36 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.25.214
  Hostname:    k8s-control-plane-1
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006084Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903684Ki
  pods:               110
System Info:
  Machine ID:                 ec222193cf6556765cea6866846c40a2
  System UUID:                ec222193-cf65-5676-5cea-6866846c40a2
  Boot ID:                    2de0e2d0-50ec-4769-9cee-799263795cb1
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
PodCIDR:                      192.168.0.0/24
PodCIDRs:                     192.168.0.0/24
Non-terminated Pods:          (6 in total)
  Namespace                   Name                                           CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                           ------------  ----------  ---------------  -------------  ---
  kube-system                 calico-node-fnbf2                              250m (12%)    0 (0%)      0 (0%)           0 (0%)         47m
  kube-system                 etcd-k8s-control-plane-1                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         47m
  kube-system                 kube-apiserver-k8s-control-plane-1             250m (12%)    0 (0%)      0 (0%)           0 (0%)         47m
  kube-system                 kube-controller-manager-k8s-control-plane-1    200m (10%)    0 (0%)      0 (0%)           0 (0%)         47m
  kube-system                 kube-proxy-dnw4h                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         47m
  kube-system                 kube-scheduler-k8s-control-plane-1             100m (5%)     0 (0%)      0 (0%)           0 (0%)         47m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                900m (45%)  0 (0%)
  memory             100Mi (2%)  0 (0%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type     Reason                   Age                From             Message
  ----     ------                   ----               ----             -------
  Normal   Starting                 47m                kube-proxy       
  Normal   NodeAllocatableEnforced  47m                kubelet          Updated Node Allocatable limit across pods
  Warning  InvalidDiskCapacity      47m                kubelet          invalid capacity 0 on image filesystem
  Normal   NodeHasSufficientMemory  47m (x8 over 47m)  kubelet          Node k8s-control-plane-1 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    47m (x8 over 47m)  kubelet          Node k8s-control-plane-1 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     47m (x7 over 47m)  kubelet          Node k8s-control-plane-1 status is now: NodeHasSufficientPID
  Normal   Starting                 47m                kubelet          Starting kubelet.
  Normal   Starting                 47m                kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      47m                kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  47m                kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  47m                kubelet          Node k8s-control-plane-1 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    47m                kubelet          Node k8s-control-plane-1 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     47m                kubelet          Node k8s-control-plane-1 status is now: NodeHasSufficientPID
  Normal   RegisteredNode           47m                node-controller  Node k8s-control-plane-1 event: Registered Node k8s-control-plane-1 in Controller
ubuntu@k8s-control-plane-1:~$ kubectl get daemonset -n kube-system
NAME          DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE
calico-node   1         1         1       1            1           kubernetes.io/os=linux   49m
kube-proxy    1         1         1       1            1           kubernetes.io/os=linux   49m
ubuntu@k8s-control-plane-1:~$ kubectl get nodes -o wide
NAME                  STATUS     ROLES           AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
k8s-control-plane-1   NotReady   control-plane   74m   v1.32.3   172.31.25.214   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@k8s-control-plane-1:~$ ls /etc/cni/net.d/
10-calico.conflist  calico-kubeconfig
ubuntu@k8s-control-plane-1:~$ kubectl logs -n kube-system -l k8s-app=calico-node
Defaulted container "calico-node" out of: calico-node, upgrade-ipam (init), install-cni (init), mount-bpffs (init)
2025-03-19 12:21:36.881 [INFO][70] felix/summary.go 100: Summarising 8 dataplane reconciliation loops over 1m2.2s: avg=2ms longest=8ms ()
2025-03-19 12:22:04.545 [WARNING][70] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 12:22:04.579 [INFO][66] monitor-addresses/autodetection_methods.go 103: Using autodetected IPv4 address on interface enX0: 172.31.25.214/20
2025-03-19 12:22:34.547 [WARNING][70] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 12:22:40.046 [INFO][70] felix/summary.go 100: Summarising 10 dataplane reconciliation loops over 1m3.2s: avg=4ms longest=8ms (resync-nat-v4,resync-raw-v4)
2025-03-19 12:23:04.548 [WARNING][70] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 12:23:04.580 [INFO][66] monitor-addresses/autodetection_methods.go 103: Using autodetected IPv4 address on interface enX0: 172.31.25.214/20
2025-03-19 12:23:34.548 [WARNING][70] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 12:23:43.318 [INFO][70] felix/summary.go 100: Summarising 10 dataplane reconciliation loops over 1m3.3s: avg=3ms longest=8ms (resync-nat-v4,resync-raw-v4)
2025-03-19 12:23:44.041 [INFO][70] felix/int_dataplane.go 1689: Received *proto.HostMetadataV4V6Update update from calculation graph msg=hostname:"k8s-control-plane-1" ipv4_addr:"172.31.25.214/20" labels:<key:"beta.kubernetes.io/arch" value:"amd64" > labels:<key:"beta.kubernetes.io/os" value:"linux" > labels:<key:"kubernetes.io/arch" value:"amd64" > labels:<key:"kubernetes.io/hostname" value:"k8s-control-plane-1" > labels:<key:"kubernetes.io/os" value:"linux" > labels:<key:"node-role.kubernetes.io/control-plane" value:"" > labels:<key:"node.kubernetes.io/exclude-from-external-load-balancers" value:"" > 
ubuntu@k8s-control-plane-1:~$ kubectl edit cm -n kube-system calico-config
Edit cancelled, no changes made.
ubuntu@k8s-control-plane-1:~$ kubectl get daemonset -n kube-system | grep aws-node
ubuntu@k8s-control-plane-1:~$ ip link show
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP mode DEFAULT group default qlen 1000
    link/ether 0a:ff:ea:3a:93:35 brd ff:ff:ff:ff:ff:ff
3: tunl0@NONE: <NOARP,UP,LOWER_UP> mtu 1440 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
    link/ipip 0.0.0.0 brd 0.0.0.0
ubuntu@k8s-control-plane-1:~$ kubectl get felixconfigurations -o yaml | grep -i ipip
ubuntu@k8s-control-plane-1:~$ kubectl get felixconfigurations -o yaml | grep -i vxlan
ubuntu@k8s-control-plane-1:~$ ip link show | grep mtu
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP mode DEFAULT group default qlen 1000
3: tunl0@NONE: <NOARP,UP,LOWER_UP> mtu 1440 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
ubuntu@k8s-control-plane-1:~$ kubectl get felixconfigurations -o yaml
apiVersion: v1
items:
- apiVersion: crd.projectcalico.org/v1
  kind: FelixConfiguration
  metadata:
    annotations:
      projectcalico.org/metadata: '{"uid":"d931a553-fb27-46df-a34f-7e012290ea7a","creationTimestamp":"2025-03-19T11:07:02Z"}'
    creationTimestamp: "2025-03-19T11:07:02Z"
    generation: 1
    name: default
    resourceVersion: "524"
    uid: a5cd740a-413c-4b1d-9e9d-15dbef328e68
  spec:
    bpfLogLevel: ""
    floatingIPs: Disabled
    logSeverityScreen: Info
    reportingInterval: 0s
kind: List
metadata:
  resourceVersion: ""
ubuntu@k8s-control-plane-1:~$ kubectl logs -n kube-system -l k8s-app=calico-node | grep MTU
Defaulted container "calico-node" out of: calico-node, upgrade-ipam (init), install-cni (init), mount-bpffs (init)
2025-03-19 12:37:34.571 [WARNING][70] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 12:38:04.572 [WARNING][70] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 12:38:34.573 [WARNING][70] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 12:39:04.574 [WARNING][70] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
ubuntu@k8s-control-plane-1:~$ kubectl edit cm -n kube-system calico-config
configmap/calico-config edited
ubuntu@k8s-control-plane-1:~$ kubectl get po -n kube-system -l k8s-app=calico-node
NAME                READY   STATUS    RESTARTS   AGE
calico-node-fnbf2   1/1     Running   0          94m
ubuntu@k8s-control-plane-1:~$ kubectl get nodes
NAME                  STATUS     ROLES           AGE   VERSION
k8s-control-plane-1   NotReady   control-plane   94m   v1.32.3
ubuntu@k8s-control-plane-1:~$ kubectl get po -n kube-system -o wide
NAME                                          READY   STATUS    RESTARTS   AGE   IP              NODE                  NOMINATED NODE   READINESS GATES
calico-kube-controllers-7498b9bb4c-h82gm      0/1     Pending   0          95m   <none>          <none>                <none>           <none>
calico-node-fnbf2                             1/1     Running   0          95m   172.31.25.214   k8s-control-plane-1   <none>           <none>
coredns-668d6bf9bc-prcwv                      0/1     Pending   0          95m   <none>          <none>                <none>           <none>
coredns-668d6bf9bc-vhh8k                      0/1     Pending   0          95m   <none>          <none>                <none>           <none>
etcd-k8s-control-plane-1                      1/1     Running   0          95m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-apiserver-k8s-control-plane-1            1/1     Running   0          95m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-controller-manager-k8s-control-plane-1   1/1     Running   0          95m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-proxy-dnw4h                              1/1     Running   0          95m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-scheduler-k8s-control-plane-1            1/1     Running   0          95m   172.31.25.214   k8s-control-plane-1   <none>           <none>
ubuntu@k8s-control-plane-1:~$ kubectl get pod -n kube-system -l k8s-app=calico-node
NAME                READY   STATUS    RESTARTS   AGE
calico-node-fnbf2   1/1     Running   0          95m
ubuntu@k8s-control-plane-1:~$ kubectl delete pod -n kube-system -l k8s-app=calico-node
pod "calico-node-fnbf2" deleted
ubuntu@k8s-control-plane-1:~$ kubectl get pod -n kube-system -l k8s-app=calico-node
NAME                READY   STATUS    RESTARTS   AGE
calico-node-cbtjd   1/1     Running   0          37s
ubuntu@k8s-control-plane-1:~$ kubectl get po -n kube-system -o wide
NAME                                          READY   STATUS    RESTARTS   AGE   IP              NODE                  NOMINATED NODE   READINESS GATES
calico-kube-controllers-7498b9bb4c-h82gm      0/1     Pending   0          97m   <none>          <none>                <none>           <none>
calico-node-cbtjd                             1/1     Running   0          49s   172.31.25.214   k8s-control-plane-1   <none>           <none>
coredns-668d6bf9bc-prcwv                      0/1     Pending   0          97m   <none>          <none>                <none>           <none>
coredns-668d6bf9bc-vhh8k                      0/1     Pending   0          97m   <none>          <none>                <none>           <none>
etcd-k8s-control-plane-1                      1/1     Running   0          97m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-apiserver-k8s-control-plane-1            1/1     Running   0          97m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-controller-manager-k8s-control-plane-1   1/1     Running   0          97m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-proxy-dnw4h                              1/1     Running   0          97m   172.31.25.214   k8s-control-plane-1   <none>           <none>
kube-scheduler-k8s-control-plane-1            1/1     Running   0          97m   172.31.25.214   k8s-control-plane-1   <none>           <none>
ubuntu@k8s-control-plane-1:~$ kubectl get nodes
NAME                  STATUS     ROLES           AGE   VERSION
k8s-control-plane-1   NotReady   control-plane   97m   v1.32.3
ubuntu@k8s-control-plane-1:~$ kubectl edit cm -n kube-system calico-config
Edit cancelled, no changes made.
ubuntu@k8s-control-plane-1:~$ kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
poddisruptionbudget.policy/calico-kube-controllers configured
serviceaccount/calico-kube-controllers unchanged
serviceaccount/calico-node unchanged
configmap/calico-config configured
customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org configured
clusterrole.rbac.authorization.k8s.io/calico-kube-controllers unchanged
clusterrole.rbac.authorization.k8s.io/calico-node unchanged
clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers unchanged
clusterrolebinding.rbac.authorization.k8s.io/calico-node unchanged
daemonset.apps/calico-node configured
deployment.apps/calico-kube-controllers unchanged
ubuntu@k8s-control-plane-1:~$ kubectl get nodes
NAME                  STATUS     ROLES           AGE   VERSION
k8s-control-plane-1   NotReady   control-plane   99m   v1.32.3
ubuntu@k8s-control-plane-1:~$ kubectl get pods
No resources found in default namespace.
ubuntu@k8s-control-plane-1:~$ kubectl get pods - A
Error from server (NotFound): pods "-" not found
Error from server (NotFound): pods "A" not found
ubuntu@k8s-control-plane-1:~$ kubectl get pods -A
NAMESPACE     NAME                                          READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-7498b9bb4c-h82gm      0/1     Pending   0          100m
kube-system   calico-node-cbtjd                             1/1     Running   0          4m7s
kube-system   coredns-668d6bf9bc-prcwv                      0/1     Pending   0          100m
kube-system   coredns-668d6bf9bc-vhh8k                      0/1     Pending   0          100m
kube-system   etcd-k8s-control-plane-1                      1/1     Running   0          100m
kube-system   kube-apiserver-k8s-control-plane-1            1/1     Running   0          100m
kube-system   kube-controller-manager-k8s-control-plane-1   1/1     Running   0          100m
kube-system   kube-proxy-dnw4h                              1/1     Running   0          100m
kube-system   kube-scheduler-k8s-control-plane-1            1/1     Running   0          100m
ubuntu@k8s-control-plane-1:~$ kubectl get cm -n kube-system calico-config -o yaml | grep veth_mtu
  veth_mtu: "0"
      {"apiVersion":"v1","data":{"calico_backend":"bird","cni_network_config":"{\n  \"name\": \"k8s-pod-network\",\n  \"cniVersion\": \"0.3.1\",\n  \"plugins\": [\n    {\n      \"type\": \"calico\",\n      \"log_level\": \"info\",\n      \"log_file_path\": \"/var/log/calico/cni/cni.log\",\n      \"datastore_type\": \"kubernetes\",\n      \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n      \"mtu\": __CNI_MTU__,\n      \"ipam\": {\n          \"type\": \"calico-ipam\"\n      },\n      \"policy\": {\n          \"type\": \"k8s\"\n      },\n      \"kubernetes\": {\n          \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n      }\n    },\n    {\n      \"type\": \"portmap\",\n      \"snat\": true,\n      \"capabilities\": {\"portMappings\": true}\n    },\n    {\n      \"type\": \"bandwidth\",\n      \"capabilities\": {\"bandwidth\": true}\n    }\n  ]\n}","typha_service_name":"none","veth_mtu":"0"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"calico-config","namespace":"kube-system"}}
ubuntu@k8s-control-plane-1:~$ kubectl delete pod -n kube-system -l k8s-app=calico-node
pod "calico-node-cbtjd" deleted
ubuntu@k8s-control-plane-1:~$ kubectl get pods -n kube-system
NAME                                          READY   STATUS    RESTARTS   AGE
calico-kube-controllers-7498b9bb4c-h82gm      0/1     Pending   0          102m
calico-node-7b687                             1/1     Running   0          40s
coredns-668d6bf9bc-prcwv                      0/1     Pending   0          102m
coredns-668d6bf9bc-vhh8k                      0/1     Pending   0          102m
etcd-k8s-control-plane-1                      1/1     Running   0          102m
kube-apiserver-k8s-control-plane-1            1/1     Running   0          102m
kube-controller-manager-k8s-control-plane-1   1/1     Running   0          102m
kube-proxy-dnw4h                              1/1     Running   0          102m
kube-scheduler-k8s-control-plane-1            1/1     Running   0          102m
ubuntu@k8s-control-plane-1:~$ 
Broadcast message from root@ip-172-31-25-214 (Wed 2025-03-19 12:49:51 UTC):

The system will power off now!


Broadcast message from root@ip-172-31-25-214 (Wed 2025-03-19 12:49:51 UTC):

The system will power off now!


Broadcast message from root@ip-172-31-25-214 (Wed 2025-03-19 12:49:51 UTC):

The system will power off now!

Connection to ec2-18-234-196-62.compute-1.amazonaws.com closed by remote host.
Connection to ec2-18-234-196-62.compute-1.amazonaws.com closed.
ibtisam@ibtisam-iq:~$ 

----------------------------------------------------------------------------------------------------------

ubuntu@ip-172-31-31-202:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
143 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: ip-172-31-31-202


🔄 Change hostname? Enter new name (or press Enter to keep current): control-plane-0

🖥️ Updating hostname to 'control-plane-0'...

✅ Hostname updated successfully.
========================================
📌 System Information
========================================
🔹 Hostname       : control-plane-0
🔹 Private IP     : 172.31.31.202
🔹 Public IP      : 52.203.237.18
🔹 MAC Address    : 0a:ff:f9:6a:dd:0f
🔹 Network        : 127.0.0.1/8,172.31.31.202/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.4G/23G
🔹 CPU Load       :  0.69, 0.28, 0.10
🔹 UUID           : ec247b72eade9544e0c8fb3df063b4ee
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet set on hold.
kubeadm set on hold.
kubectl set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: downloading    |--------------------------------------|    0.0 B/9.0 KiB 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: waiting        |--------------------------------------| 
elapsed: 0.2 s                                                                    total:  9.0 Ki (44.6 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: waiting        |--------------------------------------| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    downloading    |--------------------------------------|    0.0 B/3.5 MiB 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   downloading    |--------------------------------------|    0.0 B/581.0 B 
elapsed: 0.3 s                                                                    total:  9.0 Ki (29.8 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.4 s                                                                    total:  9.0 Ki (22.5 KiB/s)                                      
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 169.134538ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
✅ No conflicting resources found. Proceeding...

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

 ✨ k8s-cleanup.sh script is completed!

✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🚀 Running kubeadm-init.sh script...

🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0319 13:07:25.235829    5989 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [control-plane-0 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.31.202]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [control-plane-0 localhost] and IPs [172.31.31.202 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [control-plane-0 localhost] and IPs [172.31.31.202 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 501.578761ms
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.502082823s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
7c3655f6920b9d9b154bdd858ff7de4422af6843792b6a5ff664ab3f6436ee63
[mark-control-plane] Marking the node control-plane-0 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node control-plane-0 as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: 44t9jz.ax6ckg3583vjssn0
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.31.202:6443 --token 44t9jz.ax6ckg3583vjssn0 \
	--discovery-token-ca-cert-hash sha256:904eddecc2719bf5de8afd060c1615f30edb7fb1ec13173216f15166ba9fcf8f \
	--control-plane --certificate-key 7c3655f6920b9d9b154bdd858ff7de4422af6843792b6a5ff664ab3f6436ee63

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.31.202:6443 --token 44t9jz.ax6ckg3583vjssn0 \
	--discovery-token-ca-cert-hash sha256:904eddecc2719bf5de8afd060c1615f30edb7fb1ec13173216f15166ba9fcf8f 
✅ Kubernetes control plane initialized successfully.

🎉 kubeadm-init.sh script is completed!
✅ Successfully executed kubeadm-init.sh.


🚀 Running kube-config-setup.sh script...

🔍 ~/.kube/config not found. Setting it up...

✅ ~/.kube/config is set.
-rw------- 1 ubuntu ubuntu 5657 Mar 19 13:07 /home/ubuntu/.kube/config

📌 KUBECONFIG set to /home/ubuntu/.kube/config
Kubernetes control plane is running at https://172.31.31.202:6443
CoreDNS is running at https://172.31.31.202:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.

✅ kubectl configured successfully.

🎉 kube-config-setup.sh script is completed!
✅ Successfully executed kube-config-setup.sh.


🚀 Running network-plugin-setup.sh script...

🚀 Deploying Calico network plugin...
error: error validating "https://docs.projectcalico.org/manifests/calico.yaml": error validating data: failed to download openapi: Get "http://localhost:8080/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false

❌ Failed to apply Calico CNI. Exiting...

❌ Failed to execute network-plugin-setup.sh. Exiting...

ubuntu@ip-172-31-31-202:~$ kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
poddisruptionbudget.policy/calico-kube-controllers created
serviceaccount/calico-kube-controllers created
serviceaccount/calico-node created
configmap/calico-config created
customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created
clusterrole.rbac.authorization.k8s.io/calico-kube-controllers created
clusterrole.rbac.authorization.k8s.io/calico-node created
clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created
clusterrolebinding.rbac.authorization.k8s.io/calico-node created
daemonset.apps/calico-node created
deployment.apps/calico-kube-controllers created
ubuntu@ip-172-31-31-202:~$ kubectl get cluster-info
error: the server doesn't have a resource type "cluster-info"
ubuntu@ip-172-31-31-202:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.31.202:6443
CoreDNS is running at https://172.31.31.202:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-31-202:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE     VERSION
control-plane-0   NotReady   control-plane   3m31s   v1.32.3
ubuntu@ip-172-31-31-202:~$ kubectl get pod -A
NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-7498b9bb4c-8l9ls   0/1     Pending   0          2m13s
kube-system   calico-node-6tlgl                          1/1     Running   0          2m13s
kube-system   coredns-668d6bf9bc-vnrxg                   0/1     Pending   0          3m42s
kube-system   coredns-668d6bf9bc-vtnhb                   0/1     Pending   0          3m42s
kube-system   etcd-control-plane-0                       1/1     Running   0          3m50s
kube-system   kube-apiserver-control-plane-0             1/1     Running   0          3m48s
kube-system   kube-controller-manager-control-plane-0    1/1     Running   0          3m49s
kube-system   kube-proxy-xxxxm                           1/1     Running   0          3m42s
kube-system   kube-scheduler-control-plane-0             1/1     Running   0          3m48s
ubuntu@ip-172-31-31-202:~$ kubectl get nodes -o wide
NAME              STATUS     ROLES           AGE     VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
control-plane-0   NotReady   control-plane   4m44s   v1.32.3   172.31.31.202   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@ip-172-31-31-202:~$ kubectl get events -n kube-system
LAST SEEN   TYPE      REASON              OBJECT                                          MESSAGE
3m23s       Warning   FailedScheduling    pod/calico-kube-controllers-7498b9bb4c-8l9ls    0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.
3m23s       Normal    SuccessfulCreate    replicaset/calico-kube-controllers-7498b9bb4c   Created pod: calico-kube-controllers-7498b9bb4c-8l9ls
3m24s       Normal    NoPods              poddisruptionbudget/calico-kube-controllers     No matching pods found
3m23s       Normal    ScalingReplicaSet   deployment/calico-kube-controllers              Scaled up replica set calico-kube-controllers-7498b9bb4c from 0 to 1
3m23s       Normal    Scheduled           pod/calico-node-6tlgl                           Successfully assigned kube-system/calico-node-6tlgl to control-plane-0
3m23s       Normal    Pulling             pod/calico-node-6tlgl                           Pulling image "docker.io/calico/cni:v3.25.0"
3m19s       Normal    Pulled              pod/calico-node-6tlgl                           Successfully pulled image "docker.io/calico/cni:v3.25.0" in 3.79s (3.79s including waiting). Image size: 87984941 bytes.
3m19s       Normal    Created             pod/calico-node-6tlgl                           Created container: upgrade-ipam
3m19s       Normal    Started             pod/calico-node-6tlgl                           Started container upgrade-ipam
3m18s       Normal    Pulled              pod/calico-node-6tlgl                           Container image "docker.io/calico/cni:v3.25.0" already present on machine
3m18s       Normal    Created             pod/calico-node-6tlgl                           Created container: install-cni
3m18s       Normal    Started             pod/calico-node-6tlgl                           Started container install-cni
3m15s       Normal    Pulling             pod/calico-node-6tlgl                           Pulling image "docker.io/calico/node:v3.25.0"
3m10s       Normal    Pulled              pod/calico-node-6tlgl                           Successfully pulled image "docker.io/calico/node:v3.25.0" in 4.356s (4.356s including waiting). Image size: 87185935 bytes.
3m10s       Normal    Created             pod/calico-node-6tlgl                           Created container: mount-bpffs
3m10s       Normal    Started             pod/calico-node-6tlgl                           Started container mount-bpffs
3m9s        Normal    Pulled              pod/calico-node-6tlgl                           Container image "docker.io/calico/node:v3.25.0" already present on machine
3m9s        Normal    Created             pod/calico-node-6tlgl                           Created container: calico-node
3m8s        Normal    Started             pod/calico-node-6tlgl                           Started container calico-node
3m7s        Warning   Unhealthy           pod/calico-node-6tlgl                           Readiness probe failed: calico/node is not ready: BIRD is not ready: Error querying BIRD: unable to connect to BIRDv4 socket: dial unix /var/run/bird/bird.ctl: connect: no such file or directory
3m6s        Warning   Unhealthy           pod/calico-node-6tlgl                           Readiness probe failed: calico/node is not ready: BIRD is not ready: Error querying BIRD: unable to connect to BIRDv4 socket: dial unix /var/run/calico/bird.ctl: connect: connection refused
3m23s       Normal    SuccessfulCreate    daemonset/calico-node                           Created pod: calico-node-6tlgl
4m52s       Warning   FailedScheduling    pod/coredns-668d6bf9bc-vnrxg                    0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.
4m52s       Warning   FailedScheduling    pod/coredns-668d6bf9bc-vtnhb                    0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.
4m52s       Normal    SuccessfulCreate    replicaset/coredns-668d6bf9bc                   Created pod: coredns-668d6bf9bc-vnrxg
4m52s       Normal    SuccessfulCreate    replicaset/coredns-668d6bf9bc                   Created pod: coredns-668d6bf9bc-vtnhb
4m52s       Normal    ScalingReplicaSet   deployment/coredns                              Scaled up replica set coredns-668d6bf9bc from 0 to 2
4m57s       Normal    LeaderElection      lease/kube-controller-manager                   control-plane-0_204910e7-67e2-4261-b956-b88003651004 became leader
4m52s       Normal    Scheduled           pod/kube-proxy-xxxxm                            Successfully assigned kube-system/kube-proxy-xxxxm to control-plane-0
4m52s       Normal    Pulled              pod/kube-proxy-xxxxm                            Container image "registry.k8s.io/kube-proxy:v1.32.3" already present on machine
4m52s       Normal    Created             pod/kube-proxy-xxxxm                            Created container: kube-proxy
4m51s       Normal    Started             pod/kube-proxy-xxxxm                            Started container kube-proxy
4m52s       Normal    SuccessfulCreate    daemonset/kube-proxy                            Created pod: kube-proxy-xxxxm
4m59s       Normal    LeaderElection      lease/kube-scheduler                            control-plane-0_40e91e3b-444b-4c16-8f88-88db1b81deb1 became leader
ubuntu@ip-172-31-31-202:~$ kubectl logs -n kube-system -l k8s-app=calico-node
Defaulted container "calico-node" out of: calico-node, upgrade-ipam (init), install-cni (init), mount-bpffs (init)
2025-03-19 13:10:33.865 [INFO][71] felix/summary.go 100: Summarising 24 dataplane reconciliation loops over 1m4.2s: avg=15ms longest=232ms (resync-filter-v4,resync-ipsets-v4,resync-mangle-v4,resync-nat-v4,resync-raw-v4,resync-routes-v4,resync-routes-v4,resync-rules-v4,update-filter-v4,update-ipsets-4,update-mangle-v4,update-nat-v4,update-raw-v4)
2025-03-19 13:10:59.765 [WARNING][71] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 13:11:29.570 [INFO][66] monitor-addresses/autodetection_methods.go 103: Using autodetected IPv4 address on interface enX0: 172.31.31.202/20
2025-03-19 13:11:29.766 [WARNING][71] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 13:11:37.674 [INFO][71] felix/summary.go 100: Summarising 10 dataplane reconciliation loops over 1m3.8s: avg=4ms longest=15ms (resync-filter-v4,resync-mangle-v4,resync-nat-v4)
2025-03-19 13:11:59.767 [WARNING][71] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 13:12:29.571 [INFO][66] monitor-addresses/autodetection_methods.go 103: Using autodetected IPv4 address on interface enX0: 172.31.31.202/20
2025-03-19 13:12:29.767 [WARNING][71] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
2025-03-19 13:12:40.361 [INFO][71] felix/summary.go 100: Summarising 10 dataplane reconciliation loops over 1m2.7s: avg=4ms longest=11ms (resync-mangle-v4,resync-nat-v4)
2025-03-19 13:12:59.768 [WARNING][71] felix/int_dataplane.go 976: Failed to auto-detect host MTU - no interfaces matched the MTU interface pattern. To use auto-MTU, set mtuIfacePattern to match your host's interfaces
ubuntu@ip-172-31-31-202:~$ kubectl get cm -n kube-system calico-config -o yaml
apiVersion: v1
data:
  calico_backend: bird
  cni_network_config: |-
    {
      "name": "k8s-pod-network",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "calico",
          "log_level": "info",
          "log_file_path": "/var/log/calico/cni/cni.log",
          "datastore_type": "kubernetes",
          "nodename": "__KUBERNETES_NODE_NAME__",
          "mtu": __CNI_MTU__,
          "ipam": {
              "type": "calico-ipam"
          },
          "policy": {
              "type": "k8s"
          },
          "kubernetes": {
              "kubeconfig": "__KUBECONFIG_FILEPATH__"
          }
        },
        {
          "type": "portmap",
          "snat": true,
          "capabilities": {"portMappings": true}
        },
        {
          "type": "bandwidth",
          "capabilities": {"bandwidth": true}
        }
      ]
    }
  typha_service_name: none
  veth_mtu: "0"
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"calico_backend":"bird","cni_network_config":"{\n  \"name\": \"k8s-pod-network\",\n  \"cniVersion\": \"0.3.1\",\n  \"plugins\": [\n    {\n      \"type\": \"calico\",\n      \"log_level\": \"info\",\n      \"log_file_path\": \"/var/log/calico/cni/cni.log\",\n      \"datastore_type\": \"kubernetes\",\n      \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n      \"mtu\": __CNI_MTU__,\n      \"ipam\": {\n          \"type\": \"calico-ipam\"\n      },\n      \"policy\": {\n          \"type\": \"k8s\"\n      },\n      \"kubernetes\": {\n          \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n      }\n    },\n    {\n      \"type\": \"portmap\",\n      \"snat\": true,\n      \"capabilities\": {\"portMappings\": true}\n    },\n    {\n      \"type\": \"bandwidth\",\n      \"capabilities\": {\"bandwidth\": true}\n    }\n  ]\n}","typha_service_name":"none","veth_mtu":"0"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"calico-config","namespace":"kube-system"}}
  creationTimestamp: "2025-03-19T13:09:12Z"
  name: calico-config
  namespace: kube-system
  resourceVersion: "479"
  uid: 555f3929-5beb-4c3e-9aef-2c64901436c2
ubuntu@ip-172-31-31-202:~$ kubectl edit cm -n kube-system calico-config -o yaml
apiVersion: v1
data:
  calico_backend: bird
  cni_network_config: |-
    {
      "name": "k8s-pod-network",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "calico",
          "log_level": "info",
          "log_file_path": "/var/log/calico/cni/cni.log",
          "datastore_type": "kubernetes",
          "nodename": "__KUBERNETES_NODE_NAME__",
          "mtu": __CNI_MTU__,
          "ipam": {
              "type": "calico-ipam"
          },
          "policy": {
              "type": "k8s"
          },
          "kubernetes": {
              "kubeconfig": "__KUBECONFIG_FILEPATH__"
          }
        },
        {
          "type": "portmap",
          "snat": true,
          "capabilities": {"portMappings": true}
        },
        {
          "type": "bandwidth",
          "capabilities": {"bandwidth": true}
        }
      ]
    }
  typha_service_name: none
  veth_mtu: "8939"
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"calico_backend":"bird","cni_network_config":"{\n  \"name\": \"k8s-pod-network\",\n  \"cniVersion\": \"0.3.1\",\n  \"plugins\": [\n    {\n      \"type\": \"calico\",\n      \"log_level\": \"info\",\n      \"log_file_path\": \"/var/log/calico/cni/cni.log\",\n      \"datastore_type\": \"kubernetes\",\n      \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n      \"mtu\": __CNI_MTU__,\n      \"ipam\": {\n          \"type\": \"calico-ipam\"\n      },\n      \"policy\": {\n          \"type\": \"k8s\"\n      },\n      \"kubernetes\": {\n          \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n      }\n    },\n    {\n      \"type\": \"portmap\",\n      \"snat\": true,\n      \"capabilities\": {\"portMappings\": true}\n    },\n    {\n      \"type\": \"bandwidth\",\n      \"capabilities\": {\"bandwidth\": true}\n    }\n  ]\n}","typha_service_name":"none","veth_mtu":"0"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"calico-config","namespace":"kube-system"}}
  creationTimestamp: "2025-03-19T13:09:12Z"
  name: calico-config
  namespace: kube-system
  resourceVersion: "1031"
  uid: 555f3929-5beb-4c3e-9aef-2c64901436c2
ubuntu@ip-172-31-31-202:~$ kubectl get cm -n kube-system calico-config -o yaml | grep veth_mtu
  veth_mtu: "8939"
      {"apiVersion":"v1","data":{"calico_backend":"bird","cni_network_config":"{\n  \"name\": \"k8s-pod-network\",\n  \"cniVersion\": \"0.3.1\",\n  \"plugins\": [\n    {\n      \"type\": \"calico\",\n      \"log_level\": \"info\",\n      \"log_file_path\": \"/var/log/calico/cni/cni.log\",\n      \"datastore_type\": \"kubernetes\",\n      \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n      \"mtu\": __CNI_MTU__,\n      \"ipam\": {\n          \"type\": \"calico-ipam\"\n      },\n      \"policy\": {\n          \"type\": \"k8s\"\n      },\n      \"kubernetes\": {\n          \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n      }\n    },\n    {\n      \"type\": \"portmap\",\n      \"snat\": true,\n      \"capabilities\": {\"portMappings\": true}\n    },\n    {\n      \"type\": \"bandwidth\",\n      \"capabilities\": {\"bandwidth\": true}\n    }\n  ]\n}","typha_service_name":"none","veth_mtu":"0"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"calico-config","namespace":"kube-system"}}
ubuntu@ip-172-31-31-202:~$ kubectl get nodes -o wide
NAME              STATUS     ROLES           AGE     VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
control-plane-0   NotReady   control-plane   7m51s   v1.32.3   172.31.31.202   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@ip-172-31-31-202:~$ kubectl delete pod -n kube-system -l k8s-app=calico-node
pod "calico-node-6tlgl" deleted
ubuntu@ip-172-31-31-202:~$ kubectl get pods -A
NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-7498b9bb4c-8l9ls   0/1     Pending   0          6m51s
kube-system   calico-node-s29mg                          1/1     Running   0          29s
kube-system   coredns-668d6bf9bc-vnrxg                   0/1     Pending   0          8m20s
kube-system   coredns-668d6bf9bc-vtnhb                   0/1     Pending   0          8m20s
kube-system   etcd-control-plane-0                       1/1     Running   0          8m28s
kube-system   kube-apiserver-control-plane-0             1/1     Running   0          8m26s
kube-system   kube-controller-manager-control-plane-0    1/1     Running   0          8m27s
kube-system   kube-proxy-xxxxm                           1/1     Running   0          8m20s
kube-system   kube-scheduler-control-plane-0             1/1     Running   0          8m26s
ubuntu@ip-172-31-31-202:~$ kubectl rollout restart deployment coredns -n kube-system
deployment.apps/coredns restarted
ubuntu@ip-172-31-31-202:~$ kubectl get pods -A
NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-7498b9bb4c-8l9ls   0/1     Pending   0          7m55s
kube-system   calico-node-s29mg                          1/1     Running   0          93s
kube-system   coredns-668d6bf9bc-vnrxg                   0/1     Pending   0          9m24s
kube-system   coredns-7b575bd96b-2sx6l                   0/1     Pending   0          10s
kube-system   coredns-7b575bd96b-hrwzv                   0/1     Pending   0          10s
kube-system   etcd-control-plane-0                       1/1     Running   0          9m32s
kube-system   kube-apiserver-control-plane-0             1/1     Running   0          9m30s
kube-system   kube-controller-manager-control-plane-0    1/1     Running   0          9m31s
kube-system   kube-proxy-xxxxm                           1/1     Running   0          9m24s
kube-system   kube-scheduler-control-plane-0             1/1     Running   0          9m30s
ubuntu@ip-172-31-31-202:~$ kubectl get pods -A
NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-7498b9bb4c-8l9ls   0/1     Pending   0          8m23s
kube-system   calico-node-s29mg                          1/1     Running   0          2m1s
kube-system   coredns-668d6bf9bc-vnrxg                   0/1     Pending   0          9m52s
kube-system   coredns-7b575bd96b-2sx6l                   0/1     Pending   0          38s
kube-system   coredns-7b575bd96b-hrwzv                   0/1     Pending   0          38s
kube-system   etcd-control-plane-0                       1/1     Running   0          10m
kube-system   kube-apiserver-control-plane-0             1/1     Running   0          9m58s
kube-system   kube-controller-manager-control-plane-0    1/1     Running   0          9m59s
kube-system   kube-proxy-xxxxm                           1/1     Running   0          9m52s
kube-system   kube-scheduler-control-plane-0             1/1     Running   0          9m58s
ubuntu@ip-172-31-31-202:~$ kubectl logs -n kube-system -l k8s-app=kube-dns
ubuntu@ip-172-31-31-202:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.31.202:6443
CoreDNS is running at https://172.31.31.202:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-31-202:~$ kubectl get cm -n kube-system calico-config -o yaml | grep veth_mtu
  veth_mtu: "8939"
      {"apiVersion":"v1","data":{"calico_backend":"bird","cni_network_config":"{\n  \"name\": \"k8s-pod-network\",\n  \"cniVersion\": \"0.3.1\",\n  \"plugins\": [\n    {\n      \"type\": \"calico\",\n      \"log_level\": \"info\",\n      \"log_file_path\": \"/var/log/calico/cni/cni.log\",\n      \"datastore_type\": \"kubernetes\",\n      \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n      \"mtu\": __CNI_MTU__,\n      \"ipam\": {\n          \"type\": \"calico-ipam\"\n      },\n      \"policy\": {\n          \"type\": \"k8s\"\n      },\n      \"kubernetes\": {\n          \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n      }\n    },\n    {\n      \"type\": \"portmap\",\n      \"snat\": true,\n      \"capabilities\": {\"portMappings\": true}\n    },\n    {\n      \"type\": \"bandwidth\",\n      \"capabilities\": {\"bandwidth\": true}\n    }\n  ]\n}","typha_service_name":"none","veth_mtu":"0"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"calico-config","namespace":"kube-system"}}
ubuntu@ip-172-31-31-202:~$ ip link show | grep mtu
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP mode DEFAULT group default qlen 1000
3: tunl0@NONE: <NOARP,UP,LOWER_UP> mtu 8939 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
ubuntu@ip-172-31-31-202:~$ kubectl describe node control-plane-0
Name:               control-plane-0
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=control-plane-0
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    projectcalico.org/IPv4Address: 172.31.31.202/20
                    projectcalico.org/IPv4IPIPTunnelAddr: 192.168.95.0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 13:07:35 +0000
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
                    node.kubernetes.io/not-ready:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  control-plane-0
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 13:21:36 +0000
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 13:15:50 +0000   Wed, 19 Mar 2025 13:15:50 +0000   CalicoIsUp                   Calico is running on this node
  MemoryPressure       False   Wed, 19 Mar 2025 13:19:54 +0000   Wed, 19 Mar 2025 13:07:33 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 13:19:54 +0000   Wed, 19 Mar 2025 13:07:33 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 13:19:54 +0000   Wed, 19 Mar 2025 13:07:33 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                False   Wed, 19 Mar 2025 13:19:54 +0000   Wed, 19 Mar 2025 13:07:33 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.31.202
  Hostname:    control-plane-0
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006092Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903692Ki
  pods:               110
System Info:
  Machine ID:                 ec247b72eade9544e0c8fb3df063b4ee
  System UUID:                ec247b72-eade-9544-e0c8-fb3df063b4ee
  Boot ID:                    14901f98-c4f8-4c9d-a278-4c5947a7ac8a
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
PodCIDR:                      192.168.0.0/24
PodCIDRs:                     192.168.0.0/24
Non-terminated Pods:          (6 in total)
  Namespace                   Name                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                       ------------  ----------  ---------------  -------------  ---
  kube-system                 calico-node-s29mg                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         6m2s
  kube-system                 etcd-control-plane-0                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         14m
  kube-system                 kube-apiserver-control-plane-0             250m (12%)    0 (0%)      0 (0%)           0 (0%)         13m
  kube-system                 kube-controller-manager-control-plane-0    200m (10%)    0 (0%)      0 (0%)           0 (0%)         14m
  kube-system                 kube-proxy-xxxxm                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         13m
  kube-system                 kube-scheduler-control-plane-0             100m (5%)     0 (0%)      0 (0%)           0 (0%)         13m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                900m (45%)  0 (0%)
  memory             100Mi (2%)  0 (0%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type     Reason                   Age   From             Message
  ----     ------                   ----  ----             -------
  Normal   Starting                 13m   kube-proxy       
  Normal   Starting                 13m   kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      13m   kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  13m   kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  13m   kubelet          Node control-plane-0 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    13m   kubelet          Node control-plane-0 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     13m   kubelet          Node control-plane-0 status is now: NodeHasSufficientPID
  Normal   RegisteredNode           13m   node-controller  Node control-plane-0 event: Registered Node control-plane-0 in Controller
ubuntu@ip-172-31-31-202:~$ kubectl get pods -n kube-system | grep calico
calico-kube-controllers-7498b9bb4c-8l9ls   0/1     Pending   0          12m
calico-node-s29mg                          1/1     Running   0          6m32s
ubuntu@ip-172-31-31-202:~$ kubectl describe pod -n kube-system calico-kube-controllers-7498b9bb4c-8l9ls
Name:                 calico-kube-controllers-7498b9bb4c-8l9ls
Namespace:            kube-system
Priority:             2000000000
Priority Class Name:  system-cluster-critical
Service Account:      calico-kube-controllers
Node:                 <none>
Labels:               k8s-app=calico-kube-controllers
                      pod-template-hash=7498b9bb4c
Annotations:          <none>
Status:               Pending
IP:                   
IPs:                  <none>
Controlled By:        ReplicaSet/calico-kube-controllers-7498b9bb4c
Containers:
  calico-kube-controllers:
    Image:      docker.io/calico/kube-controllers:v3.25.0
    Port:       <none>
    Host Port:  <none>
    Liveness:   exec [/usr/bin/check-status -l] delay=10s timeout=10s period=10s #success=1 #failure=6
    Readiness:  exec [/usr/bin/check-status -r] delay=0s timeout=1s period=10s #success=1 #failure=3
    Environment:
      ENABLED_CONTROLLERS:  node
      DATASTORE_TYPE:       kubernetes
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-vp44w (ro)
Conditions:
  Type           Status
  PodScheduled   False 
Volumes:
  kube-api-access-vp44w:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              kubernetes.io/os=linux
Tolerations:                 CriticalAddonsOnly op=Exists
                             node-role.kubernetes.io/control-plane:NoSchedule
                             node-role.kubernetes.io/master:NoSchedule
                             node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason            Age                 From               Message
  ----     ------            ----                ----               -------
  Warning  FailedScheduling  3m5s (x3 over 13m)  default-scheduler  0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.
ubuntu@ip-172-31-31-202:~$ kubectl describe node control-plane-0 | grep Taints
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
ubuntu@ip-172-31-31-202:~$ kubectl taint nodes control-plane-0 node-role.kubernetes.io/control-plane:NoSchedule-
node/control-plane-0 untainted
ubuntu@ip-172-31-31-202:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE   VERSION
control-plane-0   NotReady   control-plane   16m   v1.32.3
ubuntu@ip-172-31-31-202:~$ kubectl rollout restart deployment coredns -n kube-system
deployment.apps/coredns restarted
ubuntu@ip-172-31-31-202:~$ kubectl get pods -n kube-system | grep calico
calico-kube-controllers-7498b9bb4c-8l9ls   0/1     Pending   0          15m
calico-node-s29mg                          1/1     Running   0          9m10s
ubuntu@ip-172-31-31-202:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-31-202:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE   VERSION
control-plane-0   NotReady   control-plane   17m   v1.32.3
ubuntu@ip-172-31-31-202:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE   VERSION
control-plane-0   NotReady   control-plane   17m   v1.32.3
ubuntu@ip-172-31-31-202:~$ ls /opt/cni/bin/
LICENSE    bandwidth  calico       dhcp   firewall  host-device  install  loopback  portmap  sbr     tap     vlan
README.md  bridge     calico-ipam  dummy  flannel   host-local   ipvlan   macvlan   ptp      static  tuning  vrf
ubuntu@ip-172-31-31-202:~$ sudo journalctl -u kubelet -f --no-pager | grep -i "cni"
Mar 19 13:27:18 control-plane-0 kubelet[12970]: E0319 13:27:18.213368   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:23 control-plane-0 kubelet[12970]: E0319 13:27:23.214577   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:28 control-plane-0 kubelet[12970]: E0319 13:27:28.215698   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:33 control-plane-0 kubelet[12970]: E0319 13:27:33.217066   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:38 control-plane-0 kubelet[12970]: E0319 13:27:38.218377   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:43 control-plane-0 kubelet[12970]: E0319 13:27:43.220337   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:48 control-plane-0 kubelet[12970]: E0319 13:27:48.221483   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:53 control-plane-0 kubelet[12970]: E0319 13:27:53.222373   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:58 control-plane-0 kubelet[12970]: E0319 13:27:58.223626   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:03 control-plane-0 kubelet[12970]: E0319 13:28:03.225308   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:08 control-plane-0 kubelet[12970]: E0319 13:28:08.226502   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:13 control-plane-0 kubelet[12970]: E0319 13:28:13.227961   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:18 control-plane-0 kubelet[12970]: E0319 13:28:18.229241   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:23 control-plane-0 kubelet[12970]: E0319 13:28:23.230252   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:28 control-plane-0 kubelet[12970]: E0319 13:28:28.230884   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:33 control-plane-0 kubelet[12970]: E0319 13:28:33.232114   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
^C
ubuntu@ip-172-31-31-202:~$ kubectl edit cm -n kube-system calico-config
Edit cancelled, no changes made.
ubuntu@ip-172-31-31-202:~$ kubectl get pods
No resources found in default namespace.
ubuntu@ip-172-31-31-202:~$ kubectl get pods -A
NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE
kube-system   calico-kube-controllers-7498b9bb4c-8l9ls   0/1     Pending   0          90m
kube-system   calico-node-s29mg                          1/1     Running   0          83m
kube-system   coredns-5c5b6565b8-9zzrm                   0/1     Pending   0          74m
kube-system   coredns-5c5b6565b8-qqqwg                   0/1     Pending   0          74m
kube-system   coredns-7b575bd96b-hrwzv                   0/1     Pending   0          82m
kube-system   etcd-control-plane-0                       1/1     Running   0          91m
kube-system   kube-apiserver-control-plane-0             1/1     Running   0          91m
kube-system   kube-controller-manager-control-plane-0    1/1     Running   0          91m
kube-system   kube-proxy-xxxxm                           1/1     Running   0          91m
kube-system   kube-scheduler-control-plane-0             1/1     Running   0          91m
ubuntu@ip-172-31-31-202:~$ kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml
namespace/tigera-operator created
customresourcedefinition.apiextensions.k8s.io/bgpfilters.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/tiers.crd.projectcalico.org created
customresourcedefinition.apiextensions.k8s.io/adminnetworkpolicies.policy.networking.k8s.io created
customresourcedefinition.apiextensions.k8s.io/apiservers.operator.tigera.io created
customresourcedefinition.apiextensions.k8s.io/imagesets.operator.tigera.io created
customresourcedefinition.apiextensions.k8s.io/installations.operator.tigera.io created
customresourcedefinition.apiextensions.k8s.io/tigerastatuses.operator.tigera.io created
serviceaccount/tigera-operator created
clusterrole.rbac.authorization.k8s.io/tigera-operator created
clusterrolebinding.rbac.authorization.k8s.io/tigera-operator created
deployment.apps/tigera-operator created
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "bgpconfigurations.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "bgppeers.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "blockaffinities.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "caliconodestatuses.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "clusterinformations.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "felixconfigurations.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "globalnetworkpolicies.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "globalnetworksets.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "hostendpoints.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "ipamblocks.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "ipamconfigs.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "ipamhandles.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "ippools.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "ipreservations.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "kubecontrollersconfigurations.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "networkpolicies.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "networksets.crd.projectcalico.org" already exists
ubuntu@ip-172-31-31-202:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE    VERSION
control-plane-0   NotReady   control-plane   100m   v1.32.3
ubuntu@ip-172-31-31-202:~$ kubectl get pods -n kube-system | grep calico
calico-kube-controllers-7498b9bb4c-8l9ls   0/1     Pending   0          100m
calico-node-s29mg                          1/1     Running   0          94m
ubuntu@ip-172-31-31-202:~$ kubectl delete -n kube-system daemonset calico-node
kubectl delete -n kube-system deployment calico-kube-controllers
kubectl delete -n kube-system serviceaccount calico-kube-controllers
kubectl delete -n kube-system serviceaccount calico-node
kubectl delete -n kube-system clusterrole calico-node calico-kube-controllers
kubectl delete -n kube-system clusterrolebinding calico-node calico-kube-controllers
kubectl delete -n kube-system configmap calico-config
kubectl delete -n kube-system service calico-typha
daemonset.apps "calico-node" deleted
deployment.apps "calico-kube-controllers" deleted
serviceaccount "calico-kube-controllers" deleted
serviceaccount "calico-node" deleted
Warning: deleting cluster-scoped resources, not scoped to the provided namespace
clusterrole.rbac.authorization.k8s.io "calico-node" deleted
clusterrole.rbac.authorization.k8s.io "calico-kube-controllers" deleted
Warning: deleting cluster-scoped resources, not scoped to the provided namespace
clusterrolebinding.rbac.authorization.k8s.io "calico-node" deleted
clusterrolebinding.rbac.authorization.k8s.io "calico-kube-controllers" deleted
configmap "calico-config" deleted
Error from server (NotFound): services "calico-typha" not found
ubuntu@ip-172-31-31-202:~$ kubectl get pods -n kube-system | grep calico
ubuntu@ip-172-31-31-202:~$ kubectl get pods -n kube-system | grep calico
ubuntu@ip-172-31-31-202:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE    VERSION
control-plane-0   NotReady   control-plane   105m   v1.32.3
ubuntu@ip-172-31-31-202:~$ kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": namespaces "tigera-operator" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "bgpconfigurations.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "bgpfilters.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "bgppeers.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "blockaffinities.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "caliconodestatuses.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "clusterinformations.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "felixconfigurations.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "globalnetworkpolicies.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "globalnetworksets.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "hostendpoints.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "ipamblocks.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "ipamconfigs.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "ipamhandles.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "ippools.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "ipreservations.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "kubecontrollersconfigurations.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "networkpolicies.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "networksets.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "tiers.crd.projectcalico.org" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "adminnetworkpolicies.policy.networking.k8s.io" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "apiservers.operator.tigera.io" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "imagesets.operator.tigera.io" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "installations.operator.tigera.io" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": customresourcedefinitions.apiextensions.k8s.io "tigerastatuses.operator.tigera.io" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": serviceaccounts "tigera-operator" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": clusterroles.rbac.authorization.k8s.io "tigera-operator" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": clusterrolebindings.rbac.authorization.k8s.io "tigera-operator" already exists
Error from server (AlreadyExists): error when creating "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml": deployments.apps "tigera-operator" already exists
ubuntu@ip-172-31-31-202:~$ kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml
Warning: resource namespaces/tigera-operator is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
namespace/tigera-operator configured
customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org configured
Warning: resource customresourcedefinitions/bgpfilters.crd.projectcalico.org is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
customresourcedefinition.apiextensions.k8s.io/bgpfilters.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org configured
customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org configured
Warning: resource customresourcedefinitions/tiers.crd.projectcalico.org is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
customresourcedefinition.apiextensions.k8s.io/tiers.crd.projectcalico.org configured
Warning: resource customresourcedefinitions/adminnetworkpolicies.policy.networking.k8s.io is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
customresourcedefinition.apiextensions.k8s.io/adminnetworkpolicies.policy.networking.k8s.io configured
Warning: resource customresourcedefinitions/apiservers.operator.tigera.io is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
customresourcedefinition.apiextensions.k8s.io/apiservers.operator.tigera.io configured
Warning: resource customresourcedefinitions/imagesets.operator.tigera.io is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
customresourcedefinition.apiextensions.k8s.io/imagesets.operator.tigera.io configured
Warning: resource customresourcedefinitions/installations.operator.tigera.io is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
Warning: resource customresourcedefinitions/tigerastatuses.operator.tigera.io is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
customresourcedefinition.apiextensions.k8s.io/tigerastatuses.operator.tigera.io configured
Warning: resource serviceaccounts/tigera-operator is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
serviceaccount/tigera-operator configured
Warning: resource clusterroles/tigera-operator is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
clusterrole.rbac.authorization.k8s.io/tigera-operator configured
Warning: resource clusterrolebindings/tigera-operator is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
clusterrolebinding.rbac.authorization.k8s.io/tigera-operator configured
Warning: resource deployments/tigera-operator is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.
deployment.apps/tigera-operator configured
The CustomResourceDefinition "installations.operator.tigera.io" is invalid: metadata.annotations: Too long: may not be more than 262144 bytes
ubuntu@ip-172-31-31-202:~$ kubectl get pods
No resources found in default namespace.
ubuntu@ip-172-31-31-202:~$ kubectl get pods -A
NAMESPACE         NAME                                      READY   STATUS    RESTARTS   AGE
kube-system       coredns-5c5b6565b8-9zzrm                  0/1     Pending   0          89m
kube-system       coredns-5c5b6565b8-qqqwg                  0/1     Pending   0          89m
kube-system       coredns-7b575bd96b-hrwzv                  0/1     Pending   0          97m
kube-system       etcd-control-plane-0                      1/1     Running   0          106m
kube-system       kube-apiserver-control-plane-0            1/1     Running   0          106m
kube-system       kube-controller-manager-control-plane-0   1/1     Running   0          106m
kube-system       kube-proxy-xxxxm                          1/1     Running   0          106m
kube-system       kube-scheduler-control-plane-0            1/1     Running   0          106m
tigera-operator   tigera-operator-ccfc44587-ssjg6           1/1     Running   0          6m47s
ubuntu@ip-172-31-31-202:~$ kubectl get pods -n kube-system | grep calico
ubuntu@ip-172-31-31-202:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: control-plane-0


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: control-plane-0
========================================
📌 System Information
========================================
🔹 Hostname       : control-plane-0
🔹 Private IP     : 172.31.31.202
🔹 Public IP      : 52.203.237.18
🔹 MAC Address    : 0a:ff:f9:6a:dd:0f
🔹 Network        : 127.0.0.1/8,172.31.31.202/20 192.168.95.0/32
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 58G/251G
🔹 CPU Load       :  0.08, 0.10, 0.14
🔹 UUID           : ec247b72eade9544e0c8fb3df063b4ee
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
134 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE    bandwidth  calico	   dhcp   firewall  host-device  install  loopback  portmap  sbr     tap     vlan
README.md  bridge     calico-ipam  dummy  flannel   host-local	 ipvlan   macvlan   ptp      static  tuning  vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 12.008043ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Found existing Kubernetes file: /etc/kubernetes/admin.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/super-admin.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/controller-manager.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/kubelet.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/scheduler.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-apiserver.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-controller-manager.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-scheduler.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/etcd.yaml
⚠️  Found existing Kubernetes directory: /etc/kubernetes/pki/
⚠️  Found existing Kubernetes directory: /var/lib/etcd
⚠️  Found existing Kubernetes directory: /etc/cni/net.d
⚠️  Found existing Kubernetes directory: /var/lib/kubelet
⚠️  Found existing Kubernetes directory: /root/.kube/
⚠️  Port 6443 is already in use
⚠️  Port 10259 is already in use
⚠️  Port 10257 is already in use
⚠️  Port 10250 is already in use
⚠️  Port 2379 is already in use
⚠️  Port 2380 is already in use
⚠️  Conflicting resources found! Do you want to delete them? (y/n): y

🧹 Removing existing Kubernetes configuration...
rm: cannot remove '/var/lib/kubelet/pods/0a597f6b-6d08-4921-91f6-029ea4703ee9/volumes/kubernetes.io~projected/kube-api-access-2q8l9': Device or resource busy
rm: cannot remove '/var/lib/kubelet/pods/b7293883-35d1-4485-ab00-7e77730f3b60/volumes/kubernetes.io~projected/kube-api-access-qflq5': Device or resource busy
rm: cannot remove '/var/lib/kubelet/pods/71c53902-5805-49fb-831c-02794179e7a9/volumes/kubernetes.io~projected/kube-api-access-vwq89': Device or resource busy
rm: cannot remove '/var/lib/kubelet/pods/68f002d3-0316-4ad1-bcf3-8c194420f3c5/volumes/kubernetes.io~projected/kube-api-access-wxrnj': Device or resource busy
rm: cannot remove '/var/lib/kubelet/pods/5310eff5-c4de-47d1-a092-45accb093feb/volumes/kubernetes.io~projected/kube-api-access-4bbb5': Device or resource busy
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
6443/tcp:             6360
10250/tcp:           12970
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

 ✨ k8s-cleanup.sh script is completed!

✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🚀 Running kubeadm-init.sh script...

🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0319 15:03:07.999999   44754 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [control-plane-0 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.31.202]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [control-plane-0 localhost] and IPs [172.31.31.202 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [control-plane-0 localhost] and IPs [172.31.31.202 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 502.734729ms
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.00171929s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
91310ffe4656d0a9e82a23592989158767a8c465086c6689fac52f435505e463
[mark-control-plane] Marking the node control-plane-0 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node control-plane-0 as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: hsxstk.2471sa3e29pqh5q6
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.31.202:6443 --token hsxstk.2471sa3e29pqh5q6 \
	--discovery-token-ca-cert-hash sha256:d8ff006a0de24c9e439849b07f7cde5846e6332e348aad12689ea3caa8d3fad9 \
	--control-plane --certificate-key 91310ffe4656d0a9e82a23592989158767a8c465086c6689fac52f435505e463

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.31.202:6443 --token hsxstk.2471sa3e29pqh5q6 \
	--discovery-token-ca-cert-hash sha256:d8ff006a0de24c9e439849b07f7cde5846e6332e348aad12689ea3caa8d3fad9 
✅ Kubernetes control plane initialized successfully.

🎉 kubeadm-init.sh script is completed!
✅ Successfully executed kubeadm-init.sh.


🚀 Running kube-config-setup.sh script...

✅ ~/.kube/config is set.
-rw------- 1 ubuntu ubuntu 5657 Mar 19 13:07 /home/ubuntu/.kube/config

📌 KUBECONFIG set to /home/ubuntu/.kube/config
E0319 15:03:18.795450   45299 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.202:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 15:03:18.801892   45299 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.202:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 15:03:18.806493   45299 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.202:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 15:03:18.811381   45299 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.202:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 15:03:18.816500   45299 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.202:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")
⚠️ Failed to connect to Kubernetes cluster

❌ Failed to execute kube-config-setup.sh. Exiting...

ubuntu@ip-172-31-31-202:~$ ls -al
total 36
drwxr-x--- 5 ubuntu ubuntu 4096 Mar 19 15:02 .
drwxr-xr-x 3 root   root   4096 Mar 19 13:04 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 19 13:05 .cache
drwxr-xr-x 2 root   root   4096 Mar 19 13:07 .kube
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 19 13:04 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 19 13:05 .sudo_as_admin_successful
-rw------- 1 ubuntu ubuntu 1532 Mar 19 14:38 .viminfo
ubuntu@ip-172-31-31-202:~$ kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
error: error validating "https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml": error validating data: failed to download openapi: Get "https://172.31.31.202:6443/openapi/v2?timeout=32s": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes"); if you choose to ignore these errors, turn validation off with --validate=false
ubuntu@ip-172-31-31-202:~$ sudo systemctl status kubelet
● kubelet.service - kubelet: The Kubernetes Node Agent
     Loaded: loaded (/usr/lib/systemd/system/kubelet.service; enabled; preset: enabled)
    Drop-In: /usr/lib/systemd/system/kubelet.service.d
             └─10-kubeadm.conf
     Active: active (running) since Wed 2025-03-19 15:03:17 UTC; 2min 12s ago
       Docs: https://kubernetes.io/docs/
   Main PID: 45250 (kubelet)
      Tasks: 12 (limit: 4676)
     Memory: 32.0M (peak: 32.5M)
        CPU: 4.609s
     CGroup: /system.slice/kubelet.service
             └─45250 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --contain>

Mar 19 15:03:22 control-plane-0 kubelet[45250]: I0319 15:03:22.088240   45250 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-acces>
Mar 19 15:03:22 control-plane-0 kubelet[45250]: I0319 15:03:22.088347   45250 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (>
Mar 19 15:03:22 control-plane-0 kubelet[45250]: I0319 15:03:22.088366   45250 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" >
Mar 19 15:03:22 control-plane-0 kubelet[45250]: I0319 15:03:22.088382   45250 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\">
Mar 19 15:03:23 control-plane-0 kubelet[45250]: I0319 15:03:23.580865   45250 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-proxy-6km88" podStart>
Mar 19 15:04:18 control-plane-0 kubelet[45250]: I0319 15:04:18.053750   45250 scope.go:117] "RemoveContainer" containerID="5904a7aa32c8c36ecb46e0331c285b825065d9f0c904b4ba0d88ccb85f719304"
Mar 19 15:05:18 control-plane-0 kubelet[45250]: E0319 15:05:18.106298   45250 kubelet_node_status.go:460] "Node not becoming ready in time after startup"
Mar 19 15:05:18 control-plane-0 kubelet[45250]: E0319 15:05:18.169966   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNot>
Mar 19 15:05:23 control-plane-0 kubelet[45250]: E0319 15:05:23.171362   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNot>
Mar 19 15:05:28 control-plane-0 kubelet[45250]: E0319 15:05:28.172978   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNot>

ubuntu@ip-172-31-31-202:~$ sudo journalctl -u kubelet -f
Mar 19 15:03:23 control-plane-0 kubelet[45250]: I0319 15:03:23.580865   45250 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-proxy-6km88" podStartSLOduration=1.5808480679999999 podStartE2EDuration="1.580848068s" podCreationTimestamp="2025-03-19 15:03:22 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-03-19 15:03:23.141466991 +0000 UTC m=+5.216498760" watchObservedRunningTime="2025-03-19 15:03:23.580848068 +0000 UTC m=+5.655879838"
Mar 19 15:04:18 control-plane-0 kubelet[45250]: I0319 15:04:18.053750   45250 scope.go:117] "RemoveContainer" containerID="5904a7aa32c8c36ecb46e0331c285b825065d9f0c904b4ba0d88ccb85f719304"
Mar 19 15:05:18 control-plane-0 kubelet[45250]: E0319 15:05:18.106298   45250 kubelet_node_status.go:460] "Node not becoming ready in time after startup"
Mar 19 15:05:18 control-plane-0 kubelet[45250]: E0319 15:05:18.169966   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:23 control-plane-0 kubelet[45250]: E0319 15:05:23.171362   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:28 control-plane-0 kubelet[45250]: E0319 15:05:28.172978   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:33 control-plane-0 kubelet[45250]: E0319 15:05:33.173964   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:38 control-plane-0 kubelet[45250]: E0319 15:05:38.175192   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:43 control-plane-0 kubelet[45250]: E0319 15:05:43.176297   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:48 control-plane-0 kubelet[45250]: E0319 15:05:48.177384   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:53 control-plane-0 kubelet[45250]: E0319 15:05:53.179147   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
^C
ubuntu@ip-172-31-31-202:~$ mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
cp: overwrite '/home/ubuntu/.kube/config'? y
ubuntu@ip-172-31-31-202:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.31.202:6443
CoreDNS is running at https://172.31.31.202:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-31-202:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE     VERSION
control-plane-0   NotReady   control-plane   3m56s   v1.32.3
ubuntu@ip-172-31-31-202:~$ kubectl get po -A
NAMESPACE     NAME                                      READY   STATUS    RESTARTS        AGE
kube-system   coredns-668d6bf9bc-qlrkp                  0/1     Pending   0               4m8s
kube-system   coredns-668d6bf9bc-xkphr                  0/1     Pending   0               4m8s
kube-system   etcd-control-plane-0                      1/1     Running   1 (4m45s ago)   4m15s
kube-system   kube-apiserver-control-plane-0            1/1     Running   1 (4m45s ago)   4m12s
kube-system   kube-controller-manager-control-plane-0   1/1     Running   0               4m13s
kube-system   kube-proxy-6km88                          1/1     Running   0               4m8s
kube-system   kube-scheduler-control-plane-0            1/1     Running   1 (4m44s ago)   4m12s
ubuntu@ip-172-31-31-202:~$ kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-31-202:~$ kubectl get po -A
NAMESPACE      NAME                                      READY   STATUS    RESTARTS        AGE
kube-flannel   kube-flannel-ds-wlms7                     1/1     Running   0               9s
kube-system    coredns-668d6bf9bc-qlrkp                  0/1     Pending   0               4m42s
kube-system    coredns-668d6bf9bc-xkphr                  0/1     Pending   0               4m42s
kube-system    etcd-control-plane-0                      1/1     Running   1 (5m19s ago)   4m49s
kube-system    kube-apiserver-control-plane-0            1/1     Running   1 (5m19s ago)   4m46s
kube-system    kube-controller-manager-control-plane-0   1/1     Running   0               4m47s
kube-system    kube-proxy-6km88                          1/1     Running   0               4m42s
kube-system    kube-scheduler-control-plane-0            1/1     Running   1 (5m18s ago)   4m46s
ubuntu@ip-172-31-31-202:~$ kubectl get po -A
NAMESPACE      NAME                                      READY   STATUS    RESTARTS        AGE
kube-flannel   kube-flannel-ds-wlms7                     1/1     Running   0               25s
kube-system    coredns-668d6bf9bc-qlrkp                  0/1     Pending   0               4m58s
kube-system    coredns-668d6bf9bc-xkphr                  0/1     Pending   0               4m58s
kube-system    etcd-control-plane-0                      1/1     Running   1 (5m35s ago)   5m5s
kube-system    kube-apiserver-control-plane-0            1/1     Running   1 (5m35s ago)   5m2s
kube-system    kube-controller-manager-control-plane-0   1/1     Running   0               5m3s
kube-system    kube-proxy-6km88                          1/1     Running   0               4m58s
kube-system    kube-scheduler-control-plane-0            1/1     Running   1 (5m34s ago)   5m2s
ubuntu@ip-172-31-31-202:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE     VERSION
control-plane-0   NotReady   control-plane   5m17s   v1.32.3
ubuntu@ip-172-31-31-202:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE     VERSION
control-plane-0   NotReady   control-plane   5m35s   v1.32.3
ubuntu@ip-172-31-31-202:~$ kubectl get pods -n kube-flannel -o wide
NAME                    READY   STATUS    RESTARTS   AGE    IP              NODE              NOMINATED NODE   READINESS GATES
kube-flannel-ds-wlms7   1/1     Running   0          2m1s   172.31.31.202   control-plane-0   <none>           <none>
ubuntu@ip-172-31-31-202:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-202:~$ sudo systemctl restart kubelet
ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-202:~$ kubectl get nodes -o wide
kubectl get pods -A -o wide
NAME              STATUS     ROLES           AGE     VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
control-plane-0   NotReady   control-plane   7m51s   v1.32.3   172.31.31.202   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
NAMESPACE      NAME                                      READY   STATUS    RESTARTS        AGE     IP              NODE              NOMINATED NODE   READINESS GATES
kube-flannel   kube-flannel-ds-wlms7                     1/1     Running   0               3m10s   172.31.31.202   control-plane-0   <none>           <none>
kube-system    coredns-668d6bf9bc-qlrkp                  0/1     Pending   0               7m43s   <none>          <none>            <none>           <none>
kube-system    coredns-668d6bf9bc-xkphr                  0/1     Pending   0               7m43s   <none>          <none>            <none>           <none>
kube-system    etcd-control-plane-0                      1/1     Running   1 (8m20s ago)   7m50s   172.31.31.202   control-plane-0   <none>           <none>
kube-system    kube-apiserver-control-plane-0            1/1     Running   1 (8m20s ago)   7m47s   172.31.31.202   control-plane-0   <none>           <none>
kube-system    kube-controller-manager-control-plane-0   1/1     Running   0               7m48s   172.31.31.202   control-plane-0   <none>           <none>
kube-system    kube-proxy-6km88                          1/1     Running   0               7m43s   172.31.31.202   control-plane-0   <none>           <none>
kube-system    kube-scheduler-control-plane-0            1/1     Running   1 (8m19s ago)   7m47s   172.31.31.202   control-plane-0   <none>           <none>
ubuntu@ip-172-31-31-202:~$ kubectl delete pod -n kube-system --all
pod "coredns-668d6bf9bc-qlrkp" deleted
pod "coredns-668d6bf9bc-xkphr" deleted
pod "etcd-control-plane-0" deleted
pod "kube-apiserver-control-plane-0" deleted
pod "kube-controller-manager-control-plane-0" deleted
pod "kube-proxy-6km88" deleted
pod "kube-scheduler-control-plane-0" deleted
ubuntu@ip-172-31-31-202:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
W0319 15:08:00.811803       1 main.go:557] no subnet found for key: FLANNEL_IPV6_SUBNET in file: /run/flannel/subnet.env
I0319 15:08:00.811808       1 iptables.go:115] Current network or subnet (10.244.0.0/16, 10.244.0.0/24) is not equal to previous one (0.0.0.0/0, 0.0.0.0/0), trying to recycle old iptables rules
I0319 15:08:00.839181       1 iptables.go:125] Setting up masking rules
I0319 15:08:00.845893       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 15:08:00.851894       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 15:08:00.851915       1 main.go:416] Running backend.
I0319 15:08:00.861895       1 vxlan_network.go:65] watching for new subnet leases
I0319 15:08:00.868554       1 main.go:437] Waiting for all goroutines to exit
I0319 15:08:00.874539       1 iptables.go:372] bootstrap done
I0319 15:08:00.880730       1 iptables.go:372] bootstrap done
ubuntu@ip-172-31-31-202:~$ kubectl delete -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace "kube-flannel" deleted
serviceaccount "flannel" deleted
clusterrole.rbac.authorization.k8s.io "flannel" deleted
clusterrolebinding.rbac.authorization.k8s.io "flannel" deleted
configmap "kube-flannel-cfg" deleted
daemonset.apps "kube-flannel-ds" deleted
ubuntu@ip-172-31-31-202:~$ kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-31-202:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-202:~$ ls -l /etc/cni/net.d/
total 4
-rw-r--r-- 1 root root 292 Mar 19 15:13 10-flannel.conflist
ubuntu@ip-172-31-31-202:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-31-202:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-202:~$ kubectl get nodes -o
error: flag needs an argument: 'o' in -o
See 'kubectl get --help' for usage.
ubuntu@ip-172-31-31-202:~$ kubectl get nodes -w
NAME              STATUS     ROLES           AGE   VERSION
control-plane-0   NotReady   control-plane   38m   v1.32.3
^Cubuntu@ip-172-31-31-202:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-202:~$ kubectl describe pod -n kube-system coredns-*
Error from server (NotFound): pods "coredns-*" not found
ubuntu@ip-172-31-31-202:~$ kubectl logs -n kube-flannel -l app=flannel
kubectl describe pod -n kube-system coredns-*
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
W0319 15:13:26.348426       1 main.go:557] no subnet found for key: FLANNEL_IPV6_NETWORK in file: /run/flannel/subnet.env
W0319 15:13:26.348520       1 main.go:557] no subnet found for key: FLANNEL_IPV6_SUBNET in file: /run/flannel/subnet.env
I0319 15:13:26.348588       1 iptables.go:125] Setting up masking rules
I0319 15:13:26.361249       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 15:13:26.365905       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 15:13:26.366010       1 main.go:416] Running backend.
I0319 15:13:26.380800       1 main.go:437] Waiting for all goroutines to exit
I0319 15:13:26.381403       1 vxlan_network.go:65] watching for new subnet leases
I0319 15:13:26.386731       1 iptables.go:372] bootstrap done
I0319 15:13:26.391482       1 iptables.go:372] bootstrap done
Error from server (NotFound): pods "coredns-*" not found
ubuntu@ip-172-31-31-202:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-202:~$ ls /etc/cni/net.d/
10-flannel.conflist
ubuntu@ip-172-31-31-202:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-202:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
W0319 15:13:26.348426       1 main.go:557] no subnet found for key: FLANNEL_IPV6_NETWORK in file: /run/flannel/subnet.env
W0319 15:13:26.348520       1 main.go:557] no subnet found for key: FLANNEL_IPV6_SUBNET in file: /run/flannel/subnet.env
I0319 15:13:26.348588       1 iptables.go:125] Setting up masking rules
I0319 15:13:26.361249       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 15:13:26.365905       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 15:13:26.366010       1 main.go:416] Running backend.
I0319 15:13:26.380800       1 main.go:437] Waiting for all goroutines to exit
I0319 15:13:26.381403       1 vxlan_network.go:65] watching for new subnet leases
I0319 15:13:26.386731       1 iptables.go:372] bootstrap done
I0319 15:13:26.391482       1 iptables.go:372] bootstrap done
ubuntu@ip-172-31-31-202:~$ sudo journalctl -u kubelet --no-pager | grep -i cni
Mar 19 13:09:13 control-plane-0 kubelet[6486]: I0319 13:09:13.279760    6486 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-log-dir\" (UniqueName: \"kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-log-dir\") pod \"calico-node-6tlgl\" (UID: \"6d322b42-8bb6-4ee9-a720-0187f5d5fba5\") " pod="kube-system/calico-node-6tlgl"
Mar 19 13:09:13 control-plane-0 kubelet[6486]: I0319 13:09:13.279792    6486 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-bin-dir\" (UniqueName: \"kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-bin-dir\") pod \"calico-node-6tlgl\" (UID: \"6d322b42-8bb6-4ee9-a720-0187f5d5fba5\") " pod="kube-system/calico-node-6tlgl"
Mar 19 13:09:13 control-plane-0 kubelet[6486]: I0319 13:09:13.279810    6486 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-net-dir\" (UniqueName: \"kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-net-dir\") pod \"calico-node-6tlgl\" (UID: \"6d322b42-8bb6-4ee9-a720-0187f5d5fba5\") " pod="kube-system/calico-node-6tlgl"
Mar 19 13:09:38 control-plane-0 kubelet[6486]: E0319 13:09:38.754200    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:09:43 control-plane-0 kubelet[6486]: E0319 13:09:43.755830    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:09:48 control-plane-0 kubelet[6486]: E0319 13:09:48.757715    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:09:53 control-plane-0 kubelet[6486]: E0319 13:09:53.759851    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:09:58 control-plane-0 kubelet[6486]: E0319 13:09:58.760454    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:03 control-plane-0 kubelet[6486]: E0319 13:10:03.761372    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:08 control-plane-0 kubelet[6486]: E0319 13:10:08.762323    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:13 control-plane-0 kubelet[6486]: E0319 13:10:13.763544    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:18 control-plane-0 kubelet[6486]: E0319 13:10:18.764937    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:23 control-plane-0 kubelet[6486]: E0319 13:10:23.765966    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:28 control-plane-0 kubelet[6486]: E0319 13:10:28.767482    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:33 control-plane-0 kubelet[6486]: E0319 13:10:33.768439    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:38 control-plane-0 kubelet[6486]: E0319 13:10:38.769973    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:43 control-plane-0 kubelet[6486]: E0319 13:10:43.771359    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:48 control-plane-0 kubelet[6486]: E0319 13:10:48.771840    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:53 control-plane-0 kubelet[6486]: E0319 13:10:53.773005    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:10:58 control-plane-0 kubelet[6486]: E0319 13:10:58.774380    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:03 control-plane-0 kubelet[6486]: E0319 13:11:03.775440    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:08 control-plane-0 kubelet[6486]: E0319 13:11:08.776318    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:13 control-plane-0 kubelet[6486]: E0319 13:11:13.777496    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:18 control-plane-0 kubelet[6486]: E0319 13:11:18.779055    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:23 control-plane-0 kubelet[6486]: E0319 13:11:23.780414    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:28 control-plane-0 kubelet[6486]: E0319 13:11:28.781998    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:33 control-plane-0 kubelet[6486]: E0319 13:11:33.783039    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:38 control-plane-0 kubelet[6486]: E0319 13:11:38.784718    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:43 control-plane-0 kubelet[6486]: E0319 13:11:43.786475    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:48 control-plane-0 kubelet[6486]: E0319 13:11:48.787219    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:53 control-plane-0 kubelet[6486]: E0319 13:11:53.788794    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:11:58 control-plane-0 kubelet[6486]: E0319 13:11:58.790397    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:03 control-plane-0 kubelet[6486]: E0319 13:12:03.791972    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:08 control-plane-0 kubelet[6486]: E0319 13:12:08.792930    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:13 control-plane-0 kubelet[6486]: E0319 13:12:13.794497    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:18 control-plane-0 kubelet[6486]: E0319 13:12:18.795788    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:23 control-plane-0 kubelet[6486]: E0319 13:12:23.798008    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:28 control-plane-0 kubelet[6486]: E0319 13:12:28.799119    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:33 control-plane-0 kubelet[6486]: E0319 13:12:33.800435    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:38 control-plane-0 kubelet[6486]: E0319 13:12:38.801812    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:43 control-plane-0 kubelet[6486]: E0319 13:12:43.804175    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:48 control-plane-0 kubelet[6486]: E0319 13:12:48.805796    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:53 control-plane-0 kubelet[6486]: E0319 13:12:53.806448    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:12:58 control-plane-0 kubelet[6486]: E0319 13:12:58.807989    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:03 control-plane-0 kubelet[6486]: E0319 13:13:03.809758    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:08 control-plane-0 kubelet[6486]: E0319 13:13:08.810757    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:13 control-plane-0 kubelet[6486]: E0319 13:13:13.811720    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:18 control-plane-0 kubelet[6486]: E0319 13:13:18.812335    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:23 control-plane-0 kubelet[6486]: E0319 13:13:23.813111    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:28 control-plane-0 kubelet[6486]: E0319 13:13:28.814202    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:33 control-plane-0 kubelet[6486]: E0319 13:13:33.815083    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:38 control-plane-0 kubelet[6486]: E0319 13:13:38.816027    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:43 control-plane-0 kubelet[6486]: E0319 13:13:43.817874    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:48 control-plane-0 kubelet[6486]: E0319 13:13:48.819404    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:53 control-plane-0 kubelet[6486]: E0319 13:13:53.820991    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:13:58 control-plane-0 kubelet[6486]: E0319 13:13:58.822494    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:03 control-plane-0 kubelet[6486]: E0319 13:14:03.823856    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:08 control-plane-0 kubelet[6486]: E0319 13:14:08.824864    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:13 control-plane-0 kubelet[6486]: E0319 13:14:13.826208    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:18 control-plane-0 kubelet[6486]: E0319 13:14:18.827590    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:23 control-plane-0 kubelet[6486]: E0319 13:14:23.828574    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:28 control-plane-0 kubelet[6486]: E0319 13:14:28.829504    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:33 control-plane-0 kubelet[6486]: E0319 13:14:33.830269    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:38 control-plane-0 kubelet[6486]: E0319 13:14:38.831517    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:43 control-plane-0 kubelet[6486]: E0319 13:14:43.832712    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:48 control-plane-0 kubelet[6486]: E0319 13:14:48.833779    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:53 control-plane-0 kubelet[6486]: E0319 13:14:53.835164    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:14:58 control-plane-0 kubelet[6486]: E0319 13:14:58.837057    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:03 control-plane-0 kubelet[6486]: E0319 13:15:03.838719    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:08 control-plane-0 kubelet[6486]: E0319 13:15:08.840513    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:13 control-plane-0 kubelet[6486]: E0319 13:15:13.841746    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:18 control-plane-0 kubelet[6486]: E0319 13:15:18.842518    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:23 control-plane-0 kubelet[6486]: E0319 13:15:23.844099    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:28 control-plane-0 kubelet[6486]: E0319 13:15:28.845587    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:33 control-plane-0 kubelet[6486]: E0319 13:15:33.846846    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:35 control-plane-0 kubelet[6486]: I0319 13:15:35.834468    6486 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-bin-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-bin-dir\") pod \"calico-node-s29mg\" (UID: \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\") " pod="kube-system/calico-node-s29mg"
Mar 19 13:15:35 control-plane-0 kubelet[6486]: I0319 13:15:35.834484    6486 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-net-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-net-dir\") pod \"calico-node-s29mg\" (UID: \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\") " pod="kube-system/calico-node-s29mg"
Mar 19 13:15:35 control-plane-0 kubelet[6486]: I0319 13:15:35.834517    6486 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-log-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-log-dir\") pod \"calico-node-s29mg\" (UID: \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\") " pod="kube-system/calico-node-s29mg"
Mar 19 13:15:37 control-plane-0 kubelet[6486]: I0319 13:15:37.044400    6486 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"cni-log-dir\" (UniqueName: \"kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-log-dir\") pod \"6d322b42-8bb6-4ee9-a720-0187f5d5fba5\" (UID: \"6d322b42-8bb6-4ee9-a720-0187f5d5fba5\") "
Mar 19 13:15:37 control-plane-0 kubelet[6486]: I0319 13:15:37.044632    6486 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"cni-net-dir\" (UniqueName: \"kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-net-dir\") pod \"6d322b42-8bb6-4ee9-a720-0187f5d5fba5\" (UID: \"6d322b42-8bb6-4ee9-a720-0187f5d5fba5\") "
Mar 19 13:15:37 control-plane-0 kubelet[6486]: I0319 13:15:37.044696    6486 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"cni-bin-dir\" (UniqueName: \"kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-bin-dir\") pod \"6d322b42-8bb6-4ee9-a720-0187f5d5fba5\" (UID: \"6d322b42-8bb6-4ee9-a720-0187f5d5fba5\") "
Mar 19 13:15:37 control-plane-0 kubelet[6486]: I0319 13:15:37.044804    6486 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-bin-dir" (OuterVolumeSpecName: "cni-bin-dir") pod "6d322b42-8bb6-4ee9-a720-0187f5d5fba5" (UID: "6d322b42-8bb6-4ee9-a720-0187f5d5fba5"). InnerVolumeSpecName "cni-bin-dir". PluginName "kubernetes.io/host-path", VolumeGIDValue ""
Mar 19 13:15:37 control-plane-0 kubelet[6486]: I0319 13:15:37.045259    6486 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-log-dir" (OuterVolumeSpecName: "cni-log-dir") pod "6d322b42-8bb6-4ee9-a720-0187f5d5fba5" (UID: "6d322b42-8bb6-4ee9-a720-0187f5d5fba5"). InnerVolumeSpecName "cni-log-dir". PluginName "kubernetes.io/host-path", VolumeGIDValue ""
Mar 19 13:15:37 control-plane-0 kubelet[6486]: I0319 13:15:37.045349    6486 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-net-dir" (OuterVolumeSpecName: "cni-net-dir") pod "6d322b42-8bb6-4ee9-a720-0187f5d5fba5" (UID: "6d322b42-8bb6-4ee9-a720-0187f5d5fba5"). InnerVolumeSpecName "cni-net-dir". PluginName "kubernetes.io/host-path", VolumeGIDValue ""
Mar 19 13:15:37 control-plane-0 kubelet[6486]: I0319 13:15:37.145971    6486 reconciler_common.go:299] "Volume detached for volume \"cni-log-dir\" (UniqueName: \"kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-log-dir\") on node \"control-plane-0\" DevicePath \"\""
Mar 19 13:15:37 control-plane-0 kubelet[6486]: I0319 13:15:37.146597    6486 reconciler_common.go:299] "Volume detached for volume \"cni-net-dir\" (UniqueName: \"kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-net-dir\") on node \"control-plane-0\" DevicePath \"\""
Mar 19 13:15:37 control-plane-0 kubelet[6486]: I0319 13:15:37.146613    6486 reconciler_common.go:299] "Volume detached for volume \"cni-bin-dir\" (UniqueName: \"kubernetes.io/host-path/6d322b42-8bb6-4ee9-a720-0187f5d5fba5-cni-bin-dir\") on node \"control-plane-0\" DevicePath \"\""
Mar 19 13:15:38 control-plane-0 kubelet[6486]: E0319 13:15:38.847901    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:43 control-plane-0 kubelet[6486]: E0319 13:15:43.849270    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:48 control-plane-0 kubelet[6486]: E0319 13:15:48.850100    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:53 control-plane-0 kubelet[6486]: E0319 13:15:53.851139    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:15:58 control-plane-0 kubelet[6486]: E0319 13:15:58.852590    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:03 control-plane-0 kubelet[6486]: E0319 13:16:03.853297    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:08 control-plane-0 kubelet[6486]: E0319 13:16:08.854019    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:13 control-plane-0 kubelet[6486]: E0319 13:16:13.855498    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:18 control-plane-0 kubelet[6486]: E0319 13:16:18.856587    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:23 control-plane-0 kubelet[6486]: E0319 13:16:23.857669    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:28 control-plane-0 kubelet[6486]: E0319 13:16:28.858615    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:33 control-plane-0 kubelet[6486]: E0319 13:16:33.859847    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:38 control-plane-0 kubelet[6486]: E0319 13:16:38.861536    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:43 control-plane-0 kubelet[6486]: E0319 13:16:43.863108    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:48 control-plane-0 kubelet[6486]: E0319 13:16:48.864288    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:53 control-plane-0 kubelet[6486]: E0319 13:16:53.865068    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:16:58 control-plane-0 kubelet[6486]: E0319 13:16:58.868019    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:03 control-plane-0 kubelet[6486]: E0319 13:17:03.868811    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:08 control-plane-0 kubelet[6486]: E0319 13:17:08.870484    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:13 control-plane-0 kubelet[6486]: E0319 13:17:13.871140    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:18 control-plane-0 kubelet[6486]: E0319 13:17:18.872514    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:23 control-plane-0 kubelet[6486]: E0319 13:17:23.873941    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:28 control-plane-0 kubelet[6486]: E0319 13:17:28.875681    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:33 control-plane-0 kubelet[6486]: E0319 13:17:33.877739    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:38 control-plane-0 kubelet[6486]: E0319 13:17:38.878574    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:43 control-plane-0 kubelet[6486]: E0319 13:17:43.879927    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:48 control-plane-0 kubelet[6486]: E0319 13:17:48.881237    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:53 control-plane-0 kubelet[6486]: E0319 13:17:53.882791    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:17:58 control-plane-0 kubelet[6486]: E0319 13:17:58.884316    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:03 control-plane-0 kubelet[6486]: E0319 13:18:03.884893    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:08 control-plane-0 kubelet[6486]: E0319 13:18:08.886009    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:13 control-plane-0 kubelet[6486]: E0319 13:18:13.887318    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:18 control-plane-0 kubelet[6486]: E0319 13:18:18.888314    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:23 control-plane-0 kubelet[6486]: E0319 13:18:23.888948    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:28 control-plane-0 kubelet[6486]: E0319 13:18:28.890871    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:33 control-plane-0 kubelet[6486]: E0319 13:18:33.892497    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:38 control-plane-0 kubelet[6486]: E0319 13:18:38.894284    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:43 control-plane-0 kubelet[6486]: E0319 13:18:43.895291    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:48 control-plane-0 kubelet[6486]: E0319 13:18:48.896473    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:53 control-plane-0 kubelet[6486]: E0319 13:18:53.897654    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:18:58 control-plane-0 kubelet[6486]: E0319 13:18:58.899379    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:03 control-plane-0 kubelet[6486]: E0319 13:19:03.901031    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:08 control-plane-0 kubelet[6486]: E0319 13:19:08.902175    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:13 control-plane-0 kubelet[6486]: E0319 13:19:13.902886    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:18 control-plane-0 kubelet[6486]: E0319 13:19:18.903937    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:23 control-plane-0 kubelet[6486]: E0319 13:19:23.905231    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:28 control-plane-0 kubelet[6486]: E0319 13:19:28.906924    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:33 control-plane-0 kubelet[6486]: E0319 13:19:33.908723    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:38 control-plane-0 kubelet[6486]: E0319 13:19:38.909756    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:43 control-plane-0 kubelet[6486]: E0319 13:19:43.910445    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:48 control-plane-0 kubelet[6486]: E0319 13:19:48.912145    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:53 control-plane-0 kubelet[6486]: E0319 13:19:53.913340    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:19:58 control-plane-0 kubelet[6486]: E0319 13:19:58.914073    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:03 control-plane-0 kubelet[6486]: E0319 13:20:03.915737    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:08 control-plane-0 kubelet[6486]: E0319 13:20:08.917781    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:13 control-plane-0 kubelet[6486]: E0319 13:20:13.919138    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:18 control-plane-0 kubelet[6486]: E0319 13:20:18.920296    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:23 control-plane-0 kubelet[6486]: E0319 13:20:23.921323    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:28 control-plane-0 kubelet[6486]: E0319 13:20:28.922114    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:33 control-plane-0 kubelet[6486]: E0319 13:20:33.923468    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:38 control-plane-0 kubelet[6486]: E0319 13:20:38.924397    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:43 control-plane-0 kubelet[6486]: E0319 13:20:43.926173    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:48 control-plane-0 kubelet[6486]: E0319 13:20:48.926796    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:53 control-plane-0 kubelet[6486]: E0319 13:20:53.928117    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:20:58 control-plane-0 kubelet[6486]: E0319 13:20:58.929069    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:03 control-plane-0 kubelet[6486]: E0319 13:21:03.930013    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:08 control-plane-0 kubelet[6486]: E0319 13:21:08.931807    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:13 control-plane-0 kubelet[6486]: E0319 13:21:13.932877    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:18 control-plane-0 kubelet[6486]: E0319 13:21:18.934689    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:23 control-plane-0 kubelet[6486]: E0319 13:21:23.935862    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:28 control-plane-0 kubelet[6486]: E0319 13:21:28.937561    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:33 control-plane-0 kubelet[6486]: E0319 13:21:33.938813    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:38 control-plane-0 kubelet[6486]: E0319 13:21:38.939642    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:43 control-plane-0 kubelet[6486]: E0319 13:21:43.940769    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:48 control-plane-0 kubelet[6486]: E0319 13:21:48.941911    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:53 control-plane-0 kubelet[6486]: E0319 13:21:53.944362    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:21:58 control-plane-0 kubelet[6486]: E0319 13:21:58.945250    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:03 control-plane-0 kubelet[6486]: E0319 13:22:03.947246    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:08 control-plane-0 kubelet[6486]: E0319 13:22:08.948165    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:13 control-plane-0 kubelet[6486]: E0319 13:22:13.949505    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:18 control-plane-0 kubelet[6486]: E0319 13:22:18.951219    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:23 control-plane-0 kubelet[6486]: E0319 13:22:23.952217    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:28 control-plane-0 kubelet[6486]: E0319 13:22:28.953397    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:33 control-plane-0 kubelet[6486]: E0319 13:22:33.954323    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:38 control-plane-0 kubelet[6486]: E0319 13:22:38.955516    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:43 control-plane-0 kubelet[6486]: E0319 13:22:43.957249    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:48 control-plane-0 kubelet[6486]: E0319 13:22:48.958413    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:53 control-plane-0 kubelet[6486]: E0319 13:22:53.960033    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:22:58 control-plane-0 kubelet[6486]: E0319 13:22:58.961376    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:03 control-plane-0 kubelet[6486]: E0319 13:23:03.963077    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:08 control-plane-0 kubelet[6486]: E0319 13:23:08.964609    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:13 control-plane-0 kubelet[6486]: E0319 13:23:13.966778    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:18 control-plane-0 kubelet[6486]: E0319 13:23:18.967907    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:23 control-plane-0 kubelet[6486]: E0319 13:23:23.969202    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:28 control-plane-0 kubelet[6486]: E0319 13:23:28.970140    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:33 control-plane-0 kubelet[6486]: E0319 13:23:33.971318    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:38 control-plane-0 kubelet[6486]: E0319 13:23:38.972493    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:43 control-plane-0 kubelet[6486]: E0319 13:23:43.973479    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:48 control-plane-0 kubelet[6486]: E0319 13:23:48.974574    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:53 control-plane-0 kubelet[6486]: E0319 13:23:53.975275    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:23:58 control-plane-0 kubelet[6486]: E0319 13:23:58.977058    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:03 control-plane-0 kubelet[6486]: E0319 13:24:03.978358    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:08 control-plane-0 kubelet[6486]: E0319 13:24:08.980045    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:13 control-plane-0 kubelet[6486]: E0319 13:24:13.981738    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:18 control-plane-0 kubelet[6486]: E0319 13:24:18.983442    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:23 control-plane-0 kubelet[6486]: E0319 13:24:23.984951    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:28 control-plane-0 kubelet[6486]: E0319 13:24:28.986336    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:33 control-plane-0 kubelet[6486]: E0319 13:24:33.986988    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:38 control-plane-0 kubelet[6486]: E0319 13:24:38.987905    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:43 control-plane-0 kubelet[6486]: E0319 13:24:43.988843    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:48 control-plane-0 kubelet[6486]: E0319 13:24:48.990231    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:53 control-plane-0 kubelet[6486]: E0319 13:24:53.991198    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:24:58 control-plane-0 kubelet[6486]: E0319 13:24:58.992755    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:25:03 control-plane-0 kubelet[6486]: E0319 13:25:03.994511    6486 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:25:09 control-plane-0 kubelet[12970]: I0319 13:25:09.088087   12970 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-bin-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-bin-dir\") pod \"calico-node-s29mg\" (UID: \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\") " pod="kube-system/calico-node-s29mg"
Mar 19 13:25:09 control-plane-0 kubelet[12970]: I0319 13:25:09.088116   12970 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-net-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-net-dir\") pod \"calico-node-s29mg\" (UID: \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\") " pod="kube-system/calico-node-s29mg"
Mar 19 13:25:09 control-plane-0 kubelet[12970]: I0319 13:25:09.088129   12970 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-log-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-log-dir\") pod \"calico-node-s29mg\" (UID: \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\") " pod="kube-system/calico-node-s29mg"
Mar 19 13:27:08 control-plane-0 kubelet[12970]: E0319 13:27:08.210134   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:13 control-plane-0 kubelet[12970]: E0319 13:27:13.212275   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:18 control-plane-0 kubelet[12970]: E0319 13:27:18.213368   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:23 control-plane-0 kubelet[12970]: E0319 13:27:23.214577   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:28 control-plane-0 kubelet[12970]: E0319 13:27:28.215698   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:33 control-plane-0 kubelet[12970]: E0319 13:27:33.217066   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:38 control-plane-0 kubelet[12970]: E0319 13:27:38.218377   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:43 control-plane-0 kubelet[12970]: E0319 13:27:43.220337   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:48 control-plane-0 kubelet[12970]: E0319 13:27:48.221483   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:53 control-plane-0 kubelet[12970]: E0319 13:27:53.222373   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:27:58 control-plane-0 kubelet[12970]: E0319 13:27:58.223626   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:03 control-plane-0 kubelet[12970]: E0319 13:28:03.225308   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:08 control-plane-0 kubelet[12970]: E0319 13:28:08.226502   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:13 control-plane-0 kubelet[12970]: E0319 13:28:13.227961   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:18 control-plane-0 kubelet[12970]: E0319 13:28:18.229241   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:23 control-plane-0 kubelet[12970]: E0319 13:28:23.230252   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:28 control-plane-0 kubelet[12970]: E0319 13:28:28.230884   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:33 control-plane-0 kubelet[12970]: E0319 13:28:33.232114   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:38 control-plane-0 kubelet[12970]: E0319 13:28:38.232951   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:43 control-plane-0 kubelet[12970]: E0319 13:28:43.233589   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:48 control-plane-0 kubelet[12970]: E0319 13:28:48.234942   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:53 control-plane-0 kubelet[12970]: E0319 13:28:53.237934   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:28:58 control-plane-0 kubelet[12970]: E0319 13:28:58.239351   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:03 control-plane-0 kubelet[12970]: E0319 13:29:03.240644   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:08 control-plane-0 kubelet[12970]: E0319 13:29:08.242445   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:13 control-plane-0 kubelet[12970]: E0319 13:29:13.243362   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:18 control-plane-0 kubelet[12970]: E0319 13:29:18.244222   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:23 control-plane-0 kubelet[12970]: E0319 13:29:23.246138   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:28 control-plane-0 kubelet[12970]: E0319 13:29:28.247826   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:33 control-plane-0 kubelet[12970]: E0319 13:29:33.249426   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:38 control-plane-0 kubelet[12970]: E0319 13:29:38.251058   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:43 control-plane-0 kubelet[12970]: E0319 13:29:43.251961   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:48 control-plane-0 kubelet[12970]: E0319 13:29:48.253478   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:53 control-plane-0 kubelet[12970]: E0319 13:29:53.254139   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:29:58 control-plane-0 kubelet[12970]: E0319 13:29:58.255676   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:03 control-plane-0 kubelet[12970]: E0319 13:30:03.256349   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:08 control-plane-0 kubelet[12970]: E0319 13:30:08.258004   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:13 control-plane-0 kubelet[12970]: E0319 13:30:13.259569   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:18 control-plane-0 kubelet[12970]: E0319 13:30:18.260867   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:23 control-plane-0 kubelet[12970]: E0319 13:30:23.261794   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:28 control-plane-0 kubelet[12970]: E0319 13:30:28.264008   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:33 control-plane-0 kubelet[12970]: E0319 13:30:33.265574   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:38 control-plane-0 kubelet[12970]: E0319 13:30:38.266556   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:43 control-plane-0 kubelet[12970]: E0319 13:30:43.267263   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:48 control-plane-0 kubelet[12970]: E0319 13:30:48.268209   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:53 control-plane-0 kubelet[12970]: E0319 13:30:53.269859   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:30:58 control-plane-0 kubelet[12970]: E0319 13:30:58.273284   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:03 control-plane-0 kubelet[12970]: E0319 13:31:03.274790   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:08 control-plane-0 kubelet[12970]: E0319 13:31:08.276207   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:13 control-plane-0 kubelet[12970]: E0319 13:31:13.277872   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:18 control-plane-0 kubelet[12970]: E0319 13:31:18.280061   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:23 control-plane-0 kubelet[12970]: E0319 13:31:23.280802   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:28 control-plane-0 kubelet[12970]: E0319 13:31:28.282675   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:33 control-plane-0 kubelet[12970]: E0319 13:31:33.284290   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:38 control-plane-0 kubelet[12970]: E0319 13:31:38.285346   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:43 control-plane-0 kubelet[12970]: E0319 13:31:43.286002   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:48 control-plane-0 kubelet[12970]: E0319 13:31:48.287406   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:53 control-plane-0 kubelet[12970]: E0319 13:31:53.288669   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:31:58 control-plane-0 kubelet[12970]: E0319 13:31:58.289810   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:03 control-plane-0 kubelet[12970]: E0319 13:32:03.290852   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:08 control-plane-0 kubelet[12970]: E0319 13:32:08.292456   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:13 control-plane-0 kubelet[12970]: E0319 13:32:13.293667   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:18 control-plane-0 kubelet[12970]: E0319 13:32:18.295202   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:23 control-plane-0 kubelet[12970]: E0319 13:32:23.296656   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:28 control-plane-0 kubelet[12970]: E0319 13:32:28.298028   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:33 control-plane-0 kubelet[12970]: E0319 13:32:33.299429   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:38 control-plane-0 kubelet[12970]: E0319 13:32:38.301083   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:43 control-plane-0 kubelet[12970]: E0319 13:32:43.302253   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:48 control-plane-0 kubelet[12970]: E0319 13:32:48.304140   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:53 control-plane-0 kubelet[12970]: E0319 13:32:53.305748   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:32:58 control-plane-0 kubelet[12970]: E0319 13:32:58.306889   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:03 control-plane-0 kubelet[12970]: E0319 13:33:03.309038   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:08 control-plane-0 kubelet[12970]: E0319 13:33:08.310341   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:13 control-plane-0 kubelet[12970]: E0319 13:33:13.311742   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:18 control-plane-0 kubelet[12970]: E0319 13:33:18.312838   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:23 control-plane-0 kubelet[12970]: E0319 13:33:23.314773   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:28 control-plane-0 kubelet[12970]: E0319 13:33:28.315903   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:33 control-plane-0 kubelet[12970]: E0319 13:33:33.317861   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:38 control-plane-0 kubelet[12970]: E0319 13:33:38.318715   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:43 control-plane-0 kubelet[12970]: E0319 13:33:43.320249   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:48 control-plane-0 kubelet[12970]: E0319 13:33:48.321454   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:53 control-plane-0 kubelet[12970]: E0319 13:33:53.322437   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:33:58 control-plane-0 kubelet[12970]: E0319 13:33:58.323898   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:03 control-plane-0 kubelet[12970]: E0319 13:34:03.325130   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:08 control-plane-0 kubelet[12970]: E0319 13:34:08.327050   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:13 control-plane-0 kubelet[12970]: E0319 13:34:13.328066   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:18 control-plane-0 kubelet[12970]: E0319 13:34:18.329483   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:23 control-plane-0 kubelet[12970]: E0319 13:34:23.331314   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:28 control-plane-0 kubelet[12970]: E0319 13:34:28.332528   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:33 control-plane-0 kubelet[12970]: E0319 13:34:33.333499   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:38 control-plane-0 kubelet[12970]: E0319 13:34:38.334602   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:43 control-plane-0 kubelet[12970]: E0319 13:34:43.335505   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:48 control-plane-0 kubelet[12970]: E0319 13:34:48.336205   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:53 control-plane-0 kubelet[12970]: E0319 13:34:53.337603   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:34:58 control-plane-0 kubelet[12970]: E0319 13:34:58.338715   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:03 control-plane-0 kubelet[12970]: E0319 13:35:03.340524   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:08 control-plane-0 kubelet[12970]: E0319 13:35:08.341693   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:13 control-plane-0 kubelet[12970]: E0319 13:35:13.342996   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:18 control-plane-0 kubelet[12970]: E0319 13:35:18.344927   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:23 control-plane-0 kubelet[12970]: E0319 13:35:23.346396   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:28 control-plane-0 kubelet[12970]: E0319 13:35:28.347534   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:33 control-plane-0 kubelet[12970]: E0319 13:35:33.349205   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:38 control-plane-0 kubelet[12970]: E0319 13:35:38.350407   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:43 control-plane-0 kubelet[12970]: E0319 13:35:43.351512   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:48 control-plane-0 kubelet[12970]: E0319 13:35:48.352373   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:53 control-plane-0 kubelet[12970]: E0319 13:35:53.353623   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:35:58 control-plane-0 kubelet[12970]: E0319 13:35:58.355219   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:03 control-plane-0 kubelet[12970]: E0319 13:36:03.357319   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:08 control-plane-0 kubelet[12970]: E0319 13:36:08.358304   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:13 control-plane-0 kubelet[12970]: E0319 13:36:13.358899   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:18 control-plane-0 kubelet[12970]: E0319 13:36:18.360505   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:23 control-plane-0 kubelet[12970]: E0319 13:36:23.362148   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:28 control-plane-0 kubelet[12970]: E0319 13:36:28.363474   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:33 control-plane-0 kubelet[12970]: E0319 13:36:33.364350   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:38 control-plane-0 kubelet[12970]: E0319 13:36:38.365914   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:43 control-plane-0 kubelet[12970]: E0319 13:36:43.367409   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:48 control-plane-0 kubelet[12970]: E0319 13:36:48.368080   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:53 control-plane-0 kubelet[12970]: E0319 13:36:53.368946   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:36:58 control-plane-0 kubelet[12970]: E0319 13:36:58.370600   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:03 control-plane-0 kubelet[12970]: E0319 13:37:03.371857   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:08 control-plane-0 kubelet[12970]: E0319 13:37:08.373676   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:13 control-plane-0 kubelet[12970]: E0319 13:37:13.375285   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:18 control-plane-0 kubelet[12970]: E0319 13:37:18.376870   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:23 control-plane-0 kubelet[12970]: E0319 13:37:23.378489   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:28 control-plane-0 kubelet[12970]: E0319 13:37:28.380134   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:33 control-plane-0 kubelet[12970]: E0319 13:37:33.381282   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:38 control-plane-0 kubelet[12970]: E0319 13:37:38.382580   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:43 control-plane-0 kubelet[12970]: E0319 13:37:43.383633   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:48 control-plane-0 kubelet[12970]: E0319 13:37:48.384916   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:53 control-plane-0 kubelet[12970]: E0319 13:37:53.385910   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:37:58 control-plane-0 kubelet[12970]: E0319 13:37:58.387056   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:03 control-plane-0 kubelet[12970]: E0319 13:38:03.388061   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:08 control-plane-0 kubelet[12970]: E0319 13:38:08.389326   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:13 control-plane-0 kubelet[12970]: E0319 13:38:13.390589   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:18 control-plane-0 kubelet[12970]: E0319 13:38:18.391654   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:23 control-plane-0 kubelet[12970]: E0319 13:38:23.393148   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:28 control-plane-0 kubelet[12970]: E0319 13:38:28.394596   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:33 control-plane-0 kubelet[12970]: E0319 13:38:33.395698   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:38 control-plane-0 kubelet[12970]: E0319 13:38:38.396861   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:43 control-plane-0 kubelet[12970]: E0319 13:38:43.398124   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:48 control-plane-0 kubelet[12970]: E0319 13:38:48.399810   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:53 control-plane-0 kubelet[12970]: E0319 13:38:53.401084   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:38:58 control-plane-0 kubelet[12970]: E0319 13:38:58.401938   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:03 control-plane-0 kubelet[12970]: E0319 13:39:03.402943   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:08 control-plane-0 kubelet[12970]: E0319 13:39:08.404758   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:13 control-plane-0 kubelet[12970]: E0319 13:39:13.405733   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:18 control-plane-0 kubelet[12970]: E0319 13:39:18.406927   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:23 control-plane-0 kubelet[12970]: E0319 13:39:23.408225   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:28 control-plane-0 kubelet[12970]: E0319 13:39:28.409877   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:33 control-plane-0 kubelet[12970]: E0319 13:39:33.410906   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:38 control-plane-0 kubelet[12970]: E0319 13:39:38.411556   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:43 control-plane-0 kubelet[12970]: E0319 13:39:43.413239   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:48 control-plane-0 kubelet[12970]: E0319 13:39:48.414252   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:53 control-plane-0 kubelet[12970]: E0319 13:39:53.415235   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:39:58 control-plane-0 kubelet[12970]: E0319 13:39:58.416483   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:03 control-plane-0 kubelet[12970]: E0319 13:40:03.418200   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:08 control-plane-0 kubelet[12970]: E0319 13:40:08.419797   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:13 control-plane-0 kubelet[12970]: E0319 13:40:13.420529   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:18 control-plane-0 kubelet[12970]: E0319 13:40:18.422129   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:23 control-plane-0 kubelet[12970]: E0319 13:40:23.422928   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:28 control-plane-0 kubelet[12970]: E0319 13:40:28.423938   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:33 control-plane-0 kubelet[12970]: E0319 13:40:33.424949   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:38 control-plane-0 kubelet[12970]: E0319 13:40:38.426754   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:43 control-plane-0 kubelet[12970]: E0319 13:40:43.428247   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:48 control-plane-0 kubelet[12970]: E0319 13:40:48.430010   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:53 control-plane-0 kubelet[12970]: E0319 13:40:53.430834   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:40:58 control-plane-0 kubelet[12970]: E0319 13:40:58.431614   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:03 control-plane-0 kubelet[12970]: E0319 13:41:03.433230   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:08 control-plane-0 kubelet[12970]: E0319 13:41:08.434450   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:13 control-plane-0 kubelet[12970]: E0319 13:41:13.436299   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:18 control-plane-0 kubelet[12970]: E0319 13:41:18.438274   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:23 control-plane-0 kubelet[12970]: E0319 13:41:23.439308   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:28 control-plane-0 kubelet[12970]: E0319 13:41:28.440316   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:33 control-plane-0 kubelet[12970]: E0319 13:41:33.441530   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:38 control-plane-0 kubelet[12970]: E0319 13:41:38.442950   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:43 control-plane-0 kubelet[12970]: E0319 13:41:43.444883   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:48 control-plane-0 kubelet[12970]: E0319 13:41:48.446353   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:53 control-plane-0 kubelet[12970]: E0319 13:41:53.447536   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:41:58 control-plane-0 kubelet[12970]: E0319 13:41:58.448269   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:03 control-plane-0 kubelet[12970]: E0319 13:42:03.449225   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:08 control-plane-0 kubelet[12970]: E0319 13:42:08.450890   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:13 control-plane-0 kubelet[12970]: E0319 13:42:13.452745   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:18 control-plane-0 kubelet[12970]: E0319 13:42:18.454654   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:23 control-plane-0 kubelet[12970]: E0319 13:42:23.455882   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:28 control-plane-0 kubelet[12970]: E0319 13:42:28.457077   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:33 control-plane-0 kubelet[12970]: E0319 13:42:33.458264   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:38 control-plane-0 kubelet[12970]: E0319 13:42:38.459156   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:43 control-plane-0 kubelet[12970]: E0319 13:42:43.460749   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:48 control-plane-0 kubelet[12970]: E0319 13:42:48.462752   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:53 control-plane-0 kubelet[12970]: E0319 13:42:53.463785   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:42:58 control-plane-0 kubelet[12970]: E0319 13:42:58.465566   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:03 control-plane-0 kubelet[12970]: E0319 13:43:03.466687   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:08 control-plane-0 kubelet[12970]: E0319 13:43:08.467583   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:13 control-plane-0 kubelet[12970]: E0319 13:43:13.469254   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:18 control-plane-0 kubelet[12970]: E0319 13:43:18.470252   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:23 control-plane-0 kubelet[12970]: E0319 13:43:23.471263   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:28 control-plane-0 kubelet[12970]: E0319 13:43:28.472949   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:33 control-plane-0 kubelet[12970]: E0319 13:43:33.474434   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:38 control-plane-0 kubelet[12970]: E0319 13:43:38.475592   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:43 control-plane-0 kubelet[12970]: E0319 13:43:43.478389   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:48 control-plane-0 kubelet[12970]: E0319 13:43:48.479159   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:53 control-plane-0 kubelet[12970]: E0319 13:43:53.481097   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:43:58 control-plane-0 kubelet[12970]: E0319 13:43:58.482024   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:03 control-plane-0 kubelet[12970]: E0319 13:44:03.483418   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:08 control-plane-0 kubelet[12970]: E0319 13:44:08.484578   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:13 control-plane-0 kubelet[12970]: E0319 13:44:13.485295   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:18 control-plane-0 kubelet[12970]: E0319 13:44:18.486063   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:23 control-plane-0 kubelet[12970]: E0319 13:44:23.487389   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:28 control-plane-0 kubelet[12970]: E0319 13:44:28.488699   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:33 control-plane-0 kubelet[12970]: E0319 13:44:33.489972   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:38 control-plane-0 kubelet[12970]: E0319 13:44:38.491497   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:43 control-plane-0 kubelet[12970]: E0319 13:44:43.492557   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:48 control-plane-0 kubelet[12970]: E0319 13:44:48.493402   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:53 control-plane-0 kubelet[12970]: E0319 13:44:53.494779   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:44:58 control-plane-0 kubelet[12970]: E0319 13:44:58.496323   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:03 control-plane-0 kubelet[12970]: E0319 13:45:03.497950   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:08 control-plane-0 kubelet[12970]: E0319 13:45:08.500162   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:13 control-plane-0 kubelet[12970]: E0319 13:45:13.501719   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:18 control-plane-0 kubelet[12970]: E0319 13:45:18.503333   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:23 control-plane-0 kubelet[12970]: E0319 13:45:23.504371   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:28 control-plane-0 kubelet[12970]: E0319 13:45:28.505513   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:33 control-plane-0 kubelet[12970]: E0319 13:45:33.506880   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:38 control-plane-0 kubelet[12970]: E0319 13:45:38.507824   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:43 control-plane-0 kubelet[12970]: E0319 13:45:43.509182   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:48 control-plane-0 kubelet[12970]: E0319 13:45:48.510716   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:53 control-plane-0 kubelet[12970]: E0319 13:45:53.514055   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:45:58 control-plane-0 kubelet[12970]: E0319 13:45:58.515576   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:03 control-plane-0 kubelet[12970]: E0319 13:46:03.517420   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:08 control-plane-0 kubelet[12970]: E0319 13:46:08.518988   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:13 control-plane-0 kubelet[12970]: E0319 13:46:13.519777   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:18 control-plane-0 kubelet[12970]: E0319 13:46:18.520991   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:23 control-plane-0 kubelet[12970]: E0319 13:46:23.522437   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:28 control-plane-0 kubelet[12970]: E0319 13:46:28.523390   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:33 control-plane-0 kubelet[12970]: E0319 13:46:33.524487   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:38 control-plane-0 kubelet[12970]: E0319 13:46:38.526272   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:43 control-plane-0 kubelet[12970]: E0319 13:46:43.528611   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:48 control-plane-0 kubelet[12970]: E0319 13:46:48.530251   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:53 control-plane-0 kubelet[12970]: E0319 13:46:53.530783   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:46:58 control-plane-0 kubelet[12970]: E0319 13:46:58.532401   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:03 control-plane-0 kubelet[12970]: E0319 13:47:03.532970   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:08 control-plane-0 kubelet[12970]: E0319 13:47:08.534571   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:13 control-plane-0 kubelet[12970]: E0319 13:47:13.536557   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:18 control-plane-0 kubelet[12970]: E0319 13:47:18.537986   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:23 control-plane-0 kubelet[12970]: E0319 13:47:23.539290   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:28 control-plane-0 kubelet[12970]: E0319 13:47:28.540848   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:33 control-plane-0 kubelet[12970]: E0319 13:47:33.542100   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:38 control-plane-0 kubelet[12970]: E0319 13:47:38.543821   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:43 control-plane-0 kubelet[12970]: E0319 13:47:43.544930   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:48 control-plane-0 kubelet[12970]: E0319 13:47:48.546657   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:53 control-plane-0 kubelet[12970]: E0319 13:47:53.547595   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:47:58 control-plane-0 kubelet[12970]: E0319 13:47:58.548851   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:03 control-plane-0 kubelet[12970]: E0319 13:48:03.549795   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:08 control-plane-0 kubelet[12970]: E0319 13:48:08.550708   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:13 control-plane-0 kubelet[12970]: E0319 13:48:13.552748   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:18 control-plane-0 kubelet[12970]: E0319 13:48:18.554253   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:23 control-plane-0 kubelet[12970]: E0319 13:48:23.555681   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:28 control-plane-0 kubelet[12970]: E0319 13:48:28.556387   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:33 control-plane-0 kubelet[12970]: E0319 13:48:33.558167   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:38 control-plane-0 kubelet[12970]: E0319 13:48:38.559319   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:43 control-plane-0 kubelet[12970]: E0319 13:48:43.560459   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:48 control-plane-0 kubelet[12970]: E0319 13:48:48.561875   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:53 control-plane-0 kubelet[12970]: E0319 13:48:53.562862   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:48:58 control-plane-0 kubelet[12970]: E0319 13:48:58.564224   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:03 control-plane-0 kubelet[12970]: E0319 13:49:03.565366   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:08 control-plane-0 kubelet[12970]: E0319 13:49:08.566392   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:13 control-plane-0 kubelet[12970]: E0319 13:49:13.567978   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:18 control-plane-0 kubelet[12970]: E0319 13:49:18.568663   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:23 control-plane-0 kubelet[12970]: E0319 13:49:23.569354   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:28 control-plane-0 kubelet[12970]: E0319 13:49:28.570850   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:33 control-plane-0 kubelet[12970]: E0319 13:49:33.571744   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:38 control-plane-0 kubelet[12970]: E0319 13:49:38.572751   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:43 control-plane-0 kubelet[12970]: E0319 13:49:43.574211   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:48 control-plane-0 kubelet[12970]: E0319 13:49:48.576058   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:53 control-plane-0 kubelet[12970]: E0319 13:49:53.577575   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:49:58 control-plane-0 kubelet[12970]: E0319 13:49:58.578754   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:03 control-plane-0 kubelet[12970]: E0319 13:50:03.580506   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:08 control-plane-0 kubelet[12970]: E0319 13:50:08.582081   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:13 control-plane-0 kubelet[12970]: E0319 13:50:13.583802   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:18 control-plane-0 kubelet[12970]: E0319 13:50:18.584754   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:23 control-plane-0 kubelet[12970]: E0319 13:50:23.585901   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:28 control-plane-0 kubelet[12970]: E0319 13:50:28.587583   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:33 control-plane-0 kubelet[12970]: E0319 13:50:33.588764   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:38 control-plane-0 kubelet[12970]: E0319 13:50:38.590091   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:43 control-plane-0 kubelet[12970]: E0319 13:50:43.591507   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:48 control-plane-0 kubelet[12970]: E0319 13:50:48.592536   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:53 control-plane-0 kubelet[12970]: E0319 13:50:53.593916   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:50:58 control-plane-0 kubelet[12970]: E0319 13:50:58.594715   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:03 control-plane-0 kubelet[12970]: E0319 13:51:03.596186   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:08 control-plane-0 kubelet[12970]: E0319 13:51:08.597901   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:13 control-plane-0 kubelet[12970]: E0319 13:51:13.599598   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:18 control-plane-0 kubelet[12970]: E0319 13:51:18.600362   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:23 control-plane-0 kubelet[12970]: E0319 13:51:23.602028   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:28 control-plane-0 kubelet[12970]: E0319 13:51:28.603543   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:33 control-plane-0 kubelet[12970]: E0319 13:51:33.604247   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:38 control-plane-0 kubelet[12970]: E0319 13:51:38.605234   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:43 control-plane-0 kubelet[12970]: E0319 13:51:43.607993   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:48 control-plane-0 kubelet[12970]: E0319 13:51:48.608961   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:53 control-plane-0 kubelet[12970]: E0319 13:51:53.610442   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:51:58 control-plane-0 kubelet[12970]: E0319 13:51:58.613272   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:03 control-plane-0 kubelet[12970]: E0319 13:52:03.614339   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:08 control-plane-0 kubelet[12970]: E0319 13:52:08.615962   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:13 control-plane-0 kubelet[12970]: E0319 13:52:13.617159   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:18 control-plane-0 kubelet[12970]: E0319 13:52:18.618371   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:23 control-plane-0 kubelet[12970]: E0319 13:52:23.619507   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:28 control-plane-0 kubelet[12970]: E0319 13:52:28.620699   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:33 control-plane-0 kubelet[12970]: E0319 13:52:33.621827   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:38 control-plane-0 kubelet[12970]: E0319 13:52:38.623483   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:43 control-plane-0 kubelet[12970]: E0319 13:52:43.624984   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:48 control-plane-0 kubelet[12970]: E0319 13:52:48.626048   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:53 control-plane-0 kubelet[12970]: E0319 13:52:53.626879   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:52:58 control-plane-0 kubelet[12970]: E0319 13:52:58.628255   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:03 control-plane-0 kubelet[12970]: E0319 13:53:03.629989   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:08 control-plane-0 kubelet[12970]: E0319 13:53:08.631419   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:13 control-plane-0 kubelet[12970]: E0319 13:53:13.633343   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:18 control-plane-0 kubelet[12970]: E0319 13:53:18.635223   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:23 control-plane-0 kubelet[12970]: E0319 13:53:23.636468   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:28 control-plane-0 kubelet[12970]: E0319 13:53:28.637991   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:33 control-plane-0 kubelet[12970]: E0319 13:53:33.639551   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:38 control-plane-0 kubelet[12970]: E0319 13:53:38.640667   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:43 control-plane-0 kubelet[12970]: E0319 13:53:43.641726   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:48 control-plane-0 kubelet[12970]: E0319 13:53:48.643347   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:53 control-plane-0 kubelet[12970]: E0319 13:53:53.644391   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:53:58 control-plane-0 kubelet[12970]: E0319 13:53:58.646017   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:03 control-plane-0 kubelet[12970]: E0319 13:54:03.647426   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:08 control-plane-0 kubelet[12970]: E0319 13:54:08.648665   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:13 control-plane-0 kubelet[12970]: E0319 13:54:13.649298   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:18 control-plane-0 kubelet[12970]: E0319 13:54:18.652719   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:23 control-plane-0 kubelet[12970]: E0319 13:54:23.655109   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:28 control-plane-0 kubelet[12970]: E0319 13:54:28.656322   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:33 control-plane-0 kubelet[12970]: E0319 13:54:33.657355   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:38 control-plane-0 kubelet[12970]: E0319 13:54:38.658740   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:43 control-plane-0 kubelet[12970]: E0319 13:54:43.660458   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:48 control-plane-0 kubelet[12970]: E0319 13:54:48.662763   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:53 control-plane-0 kubelet[12970]: E0319 13:54:53.664070   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:54:58 control-plane-0 kubelet[12970]: E0319 13:54:58.665763   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:03 control-plane-0 kubelet[12970]: E0319 13:55:03.666427   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:08 control-plane-0 kubelet[12970]: E0319 13:55:08.667155   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:13 control-plane-0 kubelet[12970]: E0319 13:55:13.668790   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:18 control-plane-0 kubelet[12970]: E0319 13:55:18.670140   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:23 control-plane-0 kubelet[12970]: E0319 13:55:23.671215   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:28 control-plane-0 kubelet[12970]: E0319 13:55:28.672394   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:33 control-plane-0 kubelet[12970]: E0319 13:55:33.674157   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:38 control-plane-0 kubelet[12970]: E0319 13:55:38.675962   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:43 control-plane-0 kubelet[12970]: E0319 13:55:43.677603   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:48 control-plane-0 kubelet[12970]: E0319 13:55:48.679207   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:53 control-plane-0 kubelet[12970]: E0319 13:55:53.680822   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:55:58 control-plane-0 kubelet[12970]: E0319 13:55:58.681956   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:03 control-plane-0 kubelet[12970]: E0319 13:56:03.682945   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:08 control-plane-0 kubelet[12970]: E0319 13:56:08.684747   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:13 control-plane-0 kubelet[12970]: E0319 13:56:13.686818   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:18 control-plane-0 kubelet[12970]: E0319 13:56:18.687609   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:23 control-plane-0 kubelet[12970]: E0319 13:56:23.691651   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:28 control-plane-0 kubelet[12970]: E0319 13:56:28.693170   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:33 control-plane-0 kubelet[12970]: E0319 13:56:33.694668   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:38 control-plane-0 kubelet[12970]: E0319 13:56:38.696398   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:43 control-plane-0 kubelet[12970]: E0319 13:56:43.697900   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:48 control-plane-0 kubelet[12970]: E0319 13:56:48.698630   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:53 control-plane-0 kubelet[12970]: E0319 13:56:53.699972   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:56:58 control-plane-0 kubelet[12970]: E0319 13:56:58.701535   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:03 control-plane-0 kubelet[12970]: E0319 13:57:03.702382   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:08 control-plane-0 kubelet[12970]: E0319 13:57:08.704138   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:13 control-plane-0 kubelet[12970]: E0319 13:57:13.704950   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:18 control-plane-0 kubelet[12970]: E0319 13:57:18.706716   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:23 control-plane-0 kubelet[12970]: E0319 13:57:23.708034   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:28 control-plane-0 kubelet[12970]: E0319 13:57:28.708672   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:33 control-plane-0 kubelet[12970]: E0319 13:57:33.709638   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:38 control-plane-0 kubelet[12970]: E0319 13:57:38.710621   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:43 control-plane-0 kubelet[12970]: E0319 13:57:43.712118   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:48 control-plane-0 kubelet[12970]: E0319 13:57:48.714011   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:53 control-plane-0 kubelet[12970]: E0319 13:57:53.714646   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:57:58 control-plane-0 kubelet[12970]: E0319 13:57:58.715454   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:03 control-plane-0 kubelet[12970]: E0319 13:58:03.717614   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:08 control-plane-0 kubelet[12970]: E0319 13:58:08.718717   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:13 control-plane-0 kubelet[12970]: E0319 13:58:13.720024   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:18 control-plane-0 kubelet[12970]: E0319 13:58:18.720989   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:23 control-plane-0 kubelet[12970]: E0319 13:58:23.722215   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:28 control-plane-0 kubelet[12970]: E0319 13:58:28.723365   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:33 control-plane-0 kubelet[12970]: E0319 13:58:33.724304   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:38 control-plane-0 kubelet[12970]: E0319 13:58:38.725484   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:43 control-plane-0 kubelet[12970]: E0319 13:58:43.727191   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:48 control-plane-0 kubelet[12970]: E0319 13:58:48.728557   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:53 control-plane-0 kubelet[12970]: E0319 13:58:53.729959   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:58:58 control-plane-0 kubelet[12970]: E0319 13:58:58.731575   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:03 control-plane-0 kubelet[12970]: E0319 13:59:03.732829   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:08 control-plane-0 kubelet[12970]: E0319 13:59:08.734333   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:13 control-plane-0 kubelet[12970]: E0319 13:59:13.735461   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:18 control-plane-0 kubelet[12970]: E0319 13:59:18.736766   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:23 control-plane-0 kubelet[12970]: E0319 13:59:23.737572   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:28 control-plane-0 kubelet[12970]: E0319 13:59:28.738504   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:33 control-plane-0 kubelet[12970]: E0319 13:59:33.739456   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:38 control-plane-0 kubelet[12970]: E0319 13:59:38.740762   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:43 control-plane-0 kubelet[12970]: E0319 13:59:43.742328   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:48 control-plane-0 kubelet[12970]: E0319 13:59:48.743673   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:53 control-plane-0 kubelet[12970]: E0319 13:59:53.745522   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 13:59:58 control-plane-0 kubelet[12970]: E0319 13:59:58.746386   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:03 control-plane-0 kubelet[12970]: E0319 14:00:03.748503   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:08 control-plane-0 kubelet[12970]: E0319 14:00:08.749292   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:13 control-plane-0 kubelet[12970]: E0319 14:00:13.750917   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:18 control-plane-0 kubelet[12970]: E0319 14:00:18.752557   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:23 control-plane-0 kubelet[12970]: E0319 14:00:23.754752   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:28 control-plane-0 kubelet[12970]: E0319 14:00:28.755631   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:33 control-plane-0 kubelet[12970]: E0319 14:00:33.756981   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:38 control-plane-0 kubelet[12970]: E0319 14:00:38.759187   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:43 control-plane-0 kubelet[12970]: E0319 14:00:43.761001   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:48 control-plane-0 kubelet[12970]: E0319 14:00:48.762573   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:53 control-plane-0 kubelet[12970]: E0319 14:00:53.763632   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:00:58 control-plane-0 kubelet[12970]: E0319 14:00:58.764297   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:03 control-plane-0 kubelet[12970]: E0319 14:01:03.764983   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:08 control-plane-0 kubelet[12970]: E0319 14:01:08.766161   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:13 control-plane-0 kubelet[12970]: E0319 14:01:13.766785   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:18 control-plane-0 kubelet[12970]: E0319 14:01:18.767442   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:23 control-plane-0 kubelet[12970]: E0319 14:01:23.768034   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:28 control-plane-0 kubelet[12970]: E0319 14:01:28.769383   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:33 control-plane-0 kubelet[12970]: E0319 14:01:33.770285   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:38 control-plane-0 kubelet[12970]: E0319 14:01:38.771740   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:43 control-plane-0 kubelet[12970]: E0319 14:01:43.773106   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:48 control-plane-0 kubelet[12970]: E0319 14:01:48.775141   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:53 control-plane-0 kubelet[12970]: E0319 14:01:53.776528   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:01:58 control-plane-0 kubelet[12970]: E0319 14:01:58.778500   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:03 control-plane-0 kubelet[12970]: E0319 14:02:03.780274   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:08 control-plane-0 kubelet[12970]: E0319 14:02:08.781368   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:13 control-plane-0 kubelet[12970]: E0319 14:02:13.783139   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:18 control-plane-0 kubelet[12970]: E0319 14:02:18.784770   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:23 control-plane-0 kubelet[12970]: E0319 14:02:23.785603   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:28 control-plane-0 kubelet[12970]: E0319 14:02:28.787260   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:33 control-plane-0 kubelet[12970]: E0319 14:02:33.788636   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:38 control-plane-0 kubelet[12970]: E0319 14:02:38.789662   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:43 control-plane-0 kubelet[12970]: E0319 14:02:43.790964   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:48 control-plane-0 kubelet[12970]: E0319 14:02:48.792586   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:53 control-plane-0 kubelet[12970]: E0319 14:02:53.793752   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:02:58 control-plane-0 kubelet[12970]: E0319 14:02:58.795042   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:03 control-plane-0 kubelet[12970]: E0319 14:03:03.796373   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:08 control-plane-0 kubelet[12970]: E0319 14:03:08.798649   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:13 control-plane-0 kubelet[12970]: E0319 14:03:13.799636   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:18 control-plane-0 kubelet[12970]: E0319 14:03:18.800331   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:23 control-plane-0 kubelet[12970]: E0319 14:03:23.801934   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:28 control-plane-0 kubelet[12970]: E0319 14:03:28.803592   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:33 control-plane-0 kubelet[12970]: E0319 14:03:33.805264   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:38 control-plane-0 kubelet[12970]: E0319 14:03:38.806546   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:43 control-plane-0 kubelet[12970]: E0319 14:03:43.807932   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:48 control-plane-0 kubelet[12970]: E0319 14:03:48.808802   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:53 control-plane-0 kubelet[12970]: E0319 14:03:53.810064   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:03:58 control-plane-0 kubelet[12970]: E0319 14:03:58.811308   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:03 control-plane-0 kubelet[12970]: E0319 14:04:03.812555   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:08 control-plane-0 kubelet[12970]: E0319 14:04:08.816262   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:13 control-plane-0 kubelet[12970]: E0319 14:04:13.817581   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:18 control-plane-0 kubelet[12970]: E0319 14:04:18.818563   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:23 control-plane-0 kubelet[12970]: E0319 14:04:23.820504   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:28 control-plane-0 kubelet[12970]: E0319 14:04:28.821315   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:33 control-plane-0 kubelet[12970]: E0319 14:04:33.822600   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:38 control-plane-0 kubelet[12970]: E0319 14:04:38.824210   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:43 control-plane-0 kubelet[12970]: E0319 14:04:43.825313   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:48 control-plane-0 kubelet[12970]: E0319 14:04:48.826288   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:53 control-plane-0 kubelet[12970]: E0319 14:04:53.828044   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:04:58 control-plane-0 kubelet[12970]: E0319 14:04:58.829087   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:03 control-plane-0 kubelet[12970]: E0319 14:05:03.830566   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:08 control-plane-0 kubelet[12970]: E0319 14:05:08.832086   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:13 control-plane-0 kubelet[12970]: E0319 14:05:13.833818   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:18 control-plane-0 kubelet[12970]: E0319 14:05:18.835221   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:23 control-plane-0 kubelet[12970]: E0319 14:05:23.836531   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:28 control-plane-0 kubelet[12970]: E0319 14:05:28.837731   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:33 control-plane-0 kubelet[12970]: E0319 14:05:33.838396   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:38 control-plane-0 kubelet[12970]: E0319 14:05:38.839553   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:43 control-plane-0 kubelet[12970]: E0319 14:05:43.840499   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:48 control-plane-0 kubelet[12970]: E0319 14:05:48.843221   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:53 control-plane-0 kubelet[12970]: E0319 14:05:53.844425   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:05:58 control-plane-0 kubelet[12970]: E0319 14:05:58.845831   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:03 control-plane-0 kubelet[12970]: E0319 14:06:03.847130   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:08 control-plane-0 kubelet[12970]: E0319 14:06:08.848481   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:13 control-plane-0 kubelet[12970]: E0319 14:06:13.850083   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:18 control-plane-0 kubelet[12970]: E0319 14:06:18.852285   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:23 control-plane-0 kubelet[12970]: E0319 14:06:23.853565   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:28 control-plane-0 kubelet[12970]: E0319 14:06:28.854754   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:33 control-plane-0 kubelet[12970]: E0319 14:06:33.856001   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:38 control-plane-0 kubelet[12970]: E0319 14:06:38.857535   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:43 control-plane-0 kubelet[12970]: E0319 14:06:43.859895   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:48 control-plane-0 kubelet[12970]: E0319 14:06:48.861547   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:53 control-plane-0 kubelet[12970]: E0319 14:06:53.862917   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:06:58 control-plane-0 kubelet[12970]: E0319 14:06:58.863598   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:03 control-plane-0 kubelet[12970]: E0319 14:07:03.865110   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:08 control-plane-0 kubelet[12970]: E0319 14:07:08.866003   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:13 control-plane-0 kubelet[12970]: E0319 14:07:13.867448   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:18 control-plane-0 kubelet[12970]: E0319 14:07:18.868825   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:23 control-plane-0 kubelet[12970]: E0319 14:07:23.869957   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:28 control-plane-0 kubelet[12970]: E0319 14:07:28.871996   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:33 control-plane-0 kubelet[12970]: E0319 14:07:33.873029   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:38 control-plane-0 kubelet[12970]: E0319 14:07:38.873934   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:43 control-plane-0 kubelet[12970]: E0319 14:07:43.874985   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:48 control-plane-0 kubelet[12970]: E0319 14:07:48.876564   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:53 control-plane-0 kubelet[12970]: E0319 14:07:53.878016   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:07:58 control-plane-0 kubelet[12970]: E0319 14:07:58.880281   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:03 control-plane-0 kubelet[12970]: E0319 14:08:03.881242   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:08 control-plane-0 kubelet[12970]: E0319 14:08:08.883045   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:13 control-plane-0 kubelet[12970]: E0319 14:08:13.884822   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:18 control-plane-0 kubelet[12970]: E0319 14:08:18.886304   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:23 control-plane-0 kubelet[12970]: E0319 14:08:23.887675   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:28 control-plane-0 kubelet[12970]: E0319 14:08:28.888911   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:33 control-plane-0 kubelet[12970]: E0319 14:08:33.890843   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:38 control-plane-0 kubelet[12970]: E0319 14:08:38.891605   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:43 control-plane-0 kubelet[12970]: E0319 14:08:43.892941   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:48 control-plane-0 kubelet[12970]: E0319 14:08:48.897711   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:53 control-plane-0 kubelet[12970]: E0319 14:08:53.898787   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:08:58 control-plane-0 kubelet[12970]: E0319 14:08:58.899899   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:03 control-plane-0 kubelet[12970]: E0319 14:09:03.901118   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:08 control-plane-0 kubelet[12970]: E0319 14:09:08.902738   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:13 control-plane-0 kubelet[12970]: E0319 14:09:13.903927   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:18 control-plane-0 kubelet[12970]: E0319 14:09:18.905720   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:23 control-plane-0 kubelet[12970]: E0319 14:09:23.907312   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:28 control-plane-0 kubelet[12970]: E0319 14:09:28.908724   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:33 control-plane-0 kubelet[12970]: E0319 14:09:33.910286   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:38 control-plane-0 kubelet[12970]: E0319 14:09:38.911643   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:43 control-plane-0 kubelet[12970]: E0319 14:09:43.913051   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:48 control-plane-0 kubelet[12970]: E0319 14:09:48.915142   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:53 control-plane-0 kubelet[12970]: E0319 14:09:53.915947   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:09:58 control-plane-0 kubelet[12970]: E0319 14:09:58.917580   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:03 control-plane-0 kubelet[12970]: E0319 14:10:03.918887   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:08 control-plane-0 kubelet[12970]: E0319 14:10:08.920482   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:13 control-plane-0 kubelet[12970]: E0319 14:10:13.921432   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:18 control-plane-0 kubelet[12970]: E0319 14:10:18.922523   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:23 control-plane-0 kubelet[12970]: E0319 14:10:23.923903   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:28 control-plane-0 kubelet[12970]: E0319 14:10:28.925024   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:33 control-plane-0 kubelet[12970]: E0319 14:10:33.926700   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:38 control-plane-0 kubelet[12970]: E0319 14:10:38.928431   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:43 control-plane-0 kubelet[12970]: E0319 14:10:43.930489   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:48 control-plane-0 kubelet[12970]: E0319 14:10:48.932676   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:53 control-plane-0 kubelet[12970]: E0319 14:10:53.933737   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:10:58 control-plane-0 kubelet[12970]: E0319 14:10:58.935426   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:03 control-plane-0 kubelet[12970]: E0319 14:11:03.936106   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:08 control-plane-0 kubelet[12970]: E0319 14:11:08.937023   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:13 control-plane-0 kubelet[12970]: E0319 14:11:13.938204   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:18 control-plane-0 kubelet[12970]: E0319 14:11:18.938905   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:23 control-plane-0 kubelet[12970]: E0319 14:11:23.939736   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:28 control-plane-0 kubelet[12970]: E0319 14:11:28.941265   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:33 control-plane-0 kubelet[12970]: E0319 14:11:33.942159   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:38 control-plane-0 kubelet[12970]: E0319 14:11:38.943350   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:43 control-plane-0 kubelet[12970]: E0319 14:11:43.944716   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:48 control-plane-0 kubelet[12970]: E0319 14:11:48.947167   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:53 control-plane-0 kubelet[12970]: E0319 14:11:53.947877   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:11:58 control-plane-0 kubelet[12970]: E0319 14:11:58.949211   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:03 control-plane-0 kubelet[12970]: E0319 14:12:03.950879   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:08 control-plane-0 kubelet[12970]: E0319 14:12:08.951877   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:13 control-plane-0 kubelet[12970]: E0319 14:12:13.952894   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:18 control-plane-0 kubelet[12970]: E0319 14:12:18.955045   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:23 control-plane-0 kubelet[12970]: E0319 14:12:23.957093   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:28 control-plane-0 kubelet[12970]: E0319 14:12:28.957690   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:33 control-plane-0 kubelet[12970]: E0319 14:12:33.959142   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:38 control-plane-0 kubelet[12970]: E0319 14:12:38.960853   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:43 control-plane-0 kubelet[12970]: E0319 14:12:43.962378   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:48 control-plane-0 kubelet[12970]: E0319 14:12:48.964116   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:53 control-plane-0 kubelet[12970]: E0319 14:12:53.965039   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:12:58 control-plane-0 kubelet[12970]: E0319 14:12:58.966174   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:03 control-plane-0 kubelet[12970]: E0319 14:13:03.968202   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:08 control-plane-0 kubelet[12970]: E0319 14:13:08.969814   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:13 control-plane-0 kubelet[12970]: E0319 14:13:13.971763   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:18 control-plane-0 kubelet[12970]: E0319 14:13:18.973396   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:23 control-plane-0 kubelet[12970]: E0319 14:13:23.974703   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:28 control-plane-0 kubelet[12970]: E0319 14:13:28.975423   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:33 control-plane-0 kubelet[12970]: E0319 14:13:33.976263   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:38 control-plane-0 kubelet[12970]: E0319 14:13:38.977025   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:43 control-plane-0 kubelet[12970]: E0319 14:13:43.978230   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:48 control-plane-0 kubelet[12970]: E0319 14:13:48.979934   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:53 control-plane-0 kubelet[12970]: E0319 14:13:53.981157   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:13:58 control-plane-0 kubelet[12970]: E0319 14:13:58.982662   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:03 control-plane-0 kubelet[12970]: E0319 14:14:03.983901   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:08 control-plane-0 kubelet[12970]: E0319 14:14:08.984911   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:13 control-plane-0 kubelet[12970]: E0319 14:14:13.985828   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:18 control-plane-0 kubelet[12970]: E0319 14:14:18.986826   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:23 control-plane-0 kubelet[12970]: E0319 14:14:23.988647   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:28 control-plane-0 kubelet[12970]: E0319 14:14:28.989760   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:33 control-plane-0 kubelet[12970]: E0319 14:14:33.991288   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:38 control-plane-0 kubelet[12970]: E0319 14:14:38.992977   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:43 control-plane-0 kubelet[12970]: E0319 14:14:43.994393   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:48 control-plane-0 kubelet[12970]: E0319 14:14:48.995833   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:53 control-plane-0 kubelet[12970]: E0319 14:14:53.996727   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:14:58 control-plane-0 kubelet[12970]: E0319 14:14:58.998092   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:03 control-plane-0 kubelet[12970]: E0319 14:15:03.999656   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:09 control-plane-0 kubelet[12970]: E0319 14:15:09.001768   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:14 control-plane-0 kubelet[12970]: E0319 14:15:14.003744   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:19 control-plane-0 kubelet[12970]: E0319 14:15:19.004876   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:24 control-plane-0 kubelet[12970]: E0319 14:15:24.005843   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:29 control-plane-0 kubelet[12970]: E0319 14:15:29.007615   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:34 control-plane-0 kubelet[12970]: E0319 14:15:34.009159   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:39 control-plane-0 kubelet[12970]: E0319 14:15:39.010389   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:44 control-plane-0 kubelet[12970]: E0319 14:15:44.011144   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:49 control-plane-0 kubelet[12970]: E0319 14:15:49.011943   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:54 control-plane-0 kubelet[12970]: E0319 14:15:54.013033   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:15:59 control-plane-0 kubelet[12970]: E0319 14:15:59.014045   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:04 control-plane-0 kubelet[12970]: E0319 14:16:04.015613   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:09 control-plane-0 kubelet[12970]: E0319 14:16:09.016632   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:14 control-plane-0 kubelet[12970]: E0319 14:16:14.017893   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:19 control-plane-0 kubelet[12970]: E0319 14:16:19.018918   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:24 control-plane-0 kubelet[12970]: E0319 14:16:24.020511   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:29 control-plane-0 kubelet[12970]: E0319 14:16:29.021872   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:34 control-plane-0 kubelet[12970]: E0319 14:16:34.023250   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:39 control-plane-0 kubelet[12970]: E0319 14:16:39.024550   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:44 control-plane-0 kubelet[12970]: E0319 14:16:44.025537   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:49 control-plane-0 kubelet[12970]: E0319 14:16:49.026223   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:54 control-plane-0 kubelet[12970]: E0319 14:16:54.027419   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:16:59 control-plane-0 kubelet[12970]: E0319 14:16:59.028657   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:04 control-plane-0 kubelet[12970]: E0319 14:17:04.030497   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:09 control-plane-0 kubelet[12970]: E0319 14:17:09.031837   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:14 control-plane-0 kubelet[12970]: E0319 14:17:14.033940   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:19 control-plane-0 kubelet[12970]: E0319 14:17:19.034979   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:24 control-plane-0 kubelet[12970]: E0319 14:17:24.037423   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:29 control-plane-0 kubelet[12970]: E0319 14:17:29.039550   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:34 control-plane-0 kubelet[12970]: E0319 14:17:34.041072   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:39 control-plane-0 kubelet[12970]: E0319 14:17:39.044504   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:44 control-plane-0 kubelet[12970]: E0319 14:17:44.045435   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:49 control-plane-0 kubelet[12970]: E0319 14:17:49.046693   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:54 control-plane-0 kubelet[12970]: E0319 14:17:54.048101   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:17:59 control-plane-0 kubelet[12970]: E0319 14:17:59.050538   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:04 control-plane-0 kubelet[12970]: E0319 14:18:04.051360   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:09 control-plane-0 kubelet[12970]: E0319 14:18:09.052763   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:14 control-plane-0 kubelet[12970]: E0319 14:18:14.054284   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:19 control-plane-0 kubelet[12970]: E0319 14:18:19.055807   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:24 control-plane-0 kubelet[12970]: E0319 14:18:24.057152   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:29 control-plane-0 kubelet[12970]: E0319 14:18:29.058279   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:34 control-plane-0 kubelet[12970]: E0319 14:18:34.059346   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:39 control-plane-0 kubelet[12970]: E0319 14:18:39.060780   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:44 control-plane-0 kubelet[12970]: E0319 14:18:44.061499   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:49 control-plane-0 kubelet[12970]: E0319 14:18:49.062504   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:54 control-plane-0 kubelet[12970]: E0319 14:18:54.063540   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:18:59 control-plane-0 kubelet[12970]: E0319 14:18:59.064920   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:04 control-plane-0 kubelet[12970]: E0319 14:19:04.066274   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:09 control-plane-0 kubelet[12970]: E0319 14:19:09.066997   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:14 control-plane-0 kubelet[12970]: E0319 14:19:14.068260   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:19 control-plane-0 kubelet[12970]: E0319 14:19:19.069712   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:24 control-plane-0 kubelet[12970]: E0319 14:19:24.070521   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:29 control-plane-0 kubelet[12970]: E0319 14:19:29.071327   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:34 control-plane-0 kubelet[12970]: E0319 14:19:34.072567   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:39 control-plane-0 kubelet[12970]: E0319 14:19:39.074189   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:44 control-plane-0 kubelet[12970]: E0319 14:19:44.075296   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:49 control-plane-0 kubelet[12970]: E0319 14:19:49.078468   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:54 control-plane-0 kubelet[12970]: E0319 14:19:54.079553   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:19:59 control-plane-0 kubelet[12970]: E0319 14:19:59.081016   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:04 control-plane-0 kubelet[12970]: E0319 14:20:04.082184   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:09 control-plane-0 kubelet[12970]: E0319 14:20:09.083393   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:14 control-plane-0 kubelet[12970]: E0319 14:20:14.084644   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:19 control-plane-0 kubelet[12970]: E0319 14:20:19.085496   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:24 control-plane-0 kubelet[12970]: E0319 14:20:24.086763   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:29 control-plane-0 kubelet[12970]: E0319 14:20:29.088929   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:34 control-plane-0 kubelet[12970]: E0319 14:20:34.090321   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:39 control-plane-0 kubelet[12970]: E0319 14:20:39.092099   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:44 control-plane-0 kubelet[12970]: E0319 14:20:44.093690   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:49 control-plane-0 kubelet[12970]: E0319 14:20:49.094885   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:54 control-plane-0 kubelet[12970]: E0319 14:20:54.096242   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:20:59 control-plane-0 kubelet[12970]: E0319 14:20:59.097746   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:04 control-plane-0 kubelet[12970]: E0319 14:21:04.099076   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:09 control-plane-0 kubelet[12970]: E0319 14:21:09.100025   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:14 control-plane-0 kubelet[12970]: E0319 14:21:14.101065   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:19 control-plane-0 kubelet[12970]: E0319 14:21:19.102374   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:24 control-plane-0 kubelet[12970]: E0319 14:21:24.103661   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:29 control-plane-0 kubelet[12970]: E0319 14:21:29.104838   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:34 control-plane-0 kubelet[12970]: E0319 14:21:34.106548   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:39 control-plane-0 kubelet[12970]: E0319 14:21:39.108545   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:44 control-plane-0 kubelet[12970]: E0319 14:21:44.109515   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:49 control-plane-0 kubelet[12970]: E0319 14:21:49.111474   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:54 control-plane-0 kubelet[12970]: E0319 14:21:54.112498   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:21:59 control-plane-0 kubelet[12970]: E0319 14:21:59.114744   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:04 control-plane-0 kubelet[12970]: E0319 14:22:04.116212   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:09 control-plane-0 kubelet[12970]: E0319 14:22:09.117145   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:14 control-plane-0 kubelet[12970]: E0319 14:22:14.118044   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:19 control-plane-0 kubelet[12970]: E0319 14:22:19.119769   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:24 control-plane-0 kubelet[12970]: E0319 14:22:24.121454   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:29 control-plane-0 kubelet[12970]: E0319 14:22:29.122444   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:34 control-plane-0 kubelet[12970]: E0319 14:22:34.123508   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:39 control-plane-0 kubelet[12970]: E0319 14:22:39.124754   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:44 control-plane-0 kubelet[12970]: E0319 14:22:44.126616   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:49 control-plane-0 kubelet[12970]: E0319 14:22:49.127578   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:54 control-plane-0 kubelet[12970]: E0319 14:22:54.128521   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:22:59 control-plane-0 kubelet[12970]: E0319 14:22:59.129337   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:04 control-plane-0 kubelet[12970]: E0319 14:23:04.130231   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:09 control-plane-0 kubelet[12970]: E0319 14:23:09.130992   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:14 control-plane-0 kubelet[12970]: E0319 14:23:14.132250   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:19 control-plane-0 kubelet[12970]: E0319 14:23:19.134548   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:24 control-plane-0 kubelet[12970]: E0319 14:23:24.135754   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:29 control-plane-0 kubelet[12970]: E0319 14:23:29.137201   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:34 control-plane-0 kubelet[12970]: E0319 14:23:34.138785   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:39 control-plane-0 kubelet[12970]: E0319 14:23:39.140092   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:44 control-plane-0 kubelet[12970]: E0319 14:23:44.140958   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:49 control-plane-0 kubelet[12970]: E0319 14:23:49.142401   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:54 control-plane-0 kubelet[12970]: E0319 14:23:54.143469   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:23:59 control-plane-0 kubelet[12970]: E0319 14:23:59.145376   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:04 control-plane-0 kubelet[12970]: E0319 14:24:04.146652   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:09 control-plane-0 kubelet[12970]: E0319 14:24:09.147581   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:14 control-plane-0 kubelet[12970]: E0319 14:24:14.148727   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:19 control-plane-0 kubelet[12970]: E0319 14:24:19.150520   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:24 control-plane-0 kubelet[12970]: E0319 14:24:24.151679   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:29 control-plane-0 kubelet[12970]: E0319 14:24:29.153238   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:34 control-plane-0 kubelet[12970]: E0319 14:24:34.154610   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:39 control-plane-0 kubelet[12970]: E0319 14:24:39.155438   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:44 control-plane-0 kubelet[12970]: E0319 14:24:44.156278   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:49 control-plane-0 kubelet[12970]: E0319 14:24:49.157901   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:54 control-plane-0 kubelet[12970]: E0319 14:24:54.159240   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:24:59 control-plane-0 kubelet[12970]: E0319 14:24:59.160560   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:04 control-plane-0 kubelet[12970]: E0319 14:25:04.162436   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:09 control-plane-0 kubelet[12970]: E0319 14:25:09.163479   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:14 control-plane-0 kubelet[12970]: E0319 14:25:14.164962   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:19 control-plane-0 kubelet[12970]: E0319 14:25:19.166599   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:24 control-plane-0 kubelet[12970]: E0319 14:25:24.167917   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:29 control-plane-0 kubelet[12970]: E0319 14:25:29.169372   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:34 control-plane-0 kubelet[12970]: E0319 14:25:34.171158   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:39 control-plane-0 kubelet[12970]: E0319 14:25:39.172511   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:44 control-plane-0 kubelet[12970]: E0319 14:25:44.173732   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:49 control-plane-0 kubelet[12970]: E0319 14:25:49.175252   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:54 control-plane-0 kubelet[12970]: E0319 14:25:54.176226   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:25:59 control-plane-0 kubelet[12970]: E0319 14:25:59.178031   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:04 control-plane-0 kubelet[12970]: E0319 14:26:04.179469   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:09 control-plane-0 kubelet[12970]: E0319 14:26:09.180841   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:14 control-plane-0 kubelet[12970]: E0319 14:26:14.182925   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:19 control-plane-0 kubelet[12970]: E0319 14:26:19.184300   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:24 control-plane-0 kubelet[12970]: E0319 14:26:24.185706   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:29 control-plane-0 kubelet[12970]: E0319 14:26:29.186581   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:34 control-plane-0 kubelet[12970]: E0319 14:26:34.188189   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:39 control-plane-0 kubelet[12970]: E0319 14:26:39.189527   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:44 control-plane-0 kubelet[12970]: E0319 14:26:44.190875   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:49 control-plane-0 kubelet[12970]: E0319 14:26:49.192306   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:54 control-plane-0 kubelet[12970]: E0319 14:26:54.193952   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:26:59 control-plane-0 kubelet[12970]: E0319 14:26:59.195678   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:04 control-plane-0 kubelet[12970]: E0319 14:27:04.197578   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:09 control-plane-0 kubelet[12970]: E0319 14:27:09.198612   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:14 control-plane-0 kubelet[12970]: E0319 14:27:14.199457   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:19 control-plane-0 kubelet[12970]: E0319 14:27:19.201018   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:24 control-plane-0 kubelet[12970]: E0319 14:27:24.202403   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:29 control-plane-0 kubelet[12970]: E0319 14:27:29.203967   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:34 control-plane-0 kubelet[12970]: E0319 14:27:34.205499   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:39 control-plane-0 kubelet[12970]: E0319 14:27:39.206949   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:44 control-plane-0 kubelet[12970]: E0319 14:27:44.207842   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:49 control-plane-0 kubelet[12970]: E0319 14:27:49.209986   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:54 control-plane-0 kubelet[12970]: E0319 14:27:54.211283   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:27:59 control-plane-0 kubelet[12970]: E0319 14:27:59.212900   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:04 control-plane-0 kubelet[12970]: E0319 14:28:04.214998   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:09 control-plane-0 kubelet[12970]: E0319 14:28:09.216675   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:14 control-plane-0 kubelet[12970]: E0319 14:28:14.218932   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:19 control-plane-0 kubelet[12970]: E0319 14:28:19.220077   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:24 control-plane-0 kubelet[12970]: E0319 14:28:24.221638   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:29 control-plane-0 kubelet[12970]: E0319 14:28:29.222434   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:34 control-plane-0 kubelet[12970]: E0319 14:28:34.223996   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:39 control-plane-0 kubelet[12970]: E0319 14:28:39.225317   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:44 control-plane-0 kubelet[12970]: E0319 14:28:44.226664   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:49 control-plane-0 kubelet[12970]: E0319 14:28:49.228166   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:54 control-plane-0 kubelet[12970]: E0319 14:28:54.229327   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:28:59 control-plane-0 kubelet[12970]: E0319 14:28:59.231367   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:04 control-plane-0 kubelet[12970]: E0319 14:29:04.232814   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:09 control-plane-0 kubelet[12970]: E0319 14:29:09.234378   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:14 control-plane-0 kubelet[12970]: E0319 14:29:14.236079   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:19 control-plane-0 kubelet[12970]: E0319 14:29:19.237961   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:24 control-plane-0 kubelet[12970]: E0319 14:29:24.239498   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:29 control-plane-0 kubelet[12970]: E0319 14:29:29.241218   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:34 control-plane-0 kubelet[12970]: E0319 14:29:34.242200   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:39 control-plane-0 kubelet[12970]: E0319 14:29:39.243394   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:44 control-plane-0 kubelet[12970]: E0319 14:29:44.244854   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:49 control-plane-0 kubelet[12970]: E0319 14:29:49.246592   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:54 control-plane-0 kubelet[12970]: E0319 14:29:54.248002   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:29:59 control-plane-0 kubelet[12970]: E0319 14:29:59.249411   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:04 control-plane-0 kubelet[12970]: E0319 14:30:04.250358   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:09 control-plane-0 kubelet[12970]: E0319 14:30:09.251348   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:14 control-plane-0 kubelet[12970]: E0319 14:30:14.252700   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:19 control-plane-0 kubelet[12970]: E0319 14:30:19.254046   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:24 control-plane-0 kubelet[12970]: E0319 14:30:24.254665   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:29 control-plane-0 kubelet[12970]: E0319 14:30:29.255810   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:34 control-plane-0 kubelet[12970]: E0319 14:30:34.257171   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:39 control-plane-0 kubelet[12970]: E0319 14:30:39.258246   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:44 control-plane-0 kubelet[12970]: E0319 14:30:44.259095   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:49 control-plane-0 kubelet[12970]: E0319 14:30:49.261204   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:54 control-plane-0 kubelet[12970]: E0319 14:30:54.262868   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:30:59 control-plane-0 kubelet[12970]: E0319 14:30:59.264573   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:04 control-plane-0 kubelet[12970]: E0319 14:31:04.265991   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:09 control-plane-0 kubelet[12970]: E0319 14:31:09.267341   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:14 control-plane-0 kubelet[12970]: E0319 14:31:14.269216   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:19 control-plane-0 kubelet[12970]: E0319 14:31:19.270536   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:24 control-plane-0 kubelet[12970]: E0319 14:31:24.272785   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:29 control-plane-0 kubelet[12970]: E0319 14:31:29.273918   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:34 control-plane-0 kubelet[12970]: E0319 14:31:34.275355   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:39 control-plane-0 kubelet[12970]: E0319 14:31:39.277067   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:44 control-plane-0 kubelet[12970]: E0319 14:31:44.282915   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:49 control-plane-0 kubelet[12970]: E0319 14:31:49.283720   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:54 control-plane-0 kubelet[12970]: E0319 14:31:54.285359   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:31:59 control-plane-0 kubelet[12970]: E0319 14:31:59.286329   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:04 control-plane-0 kubelet[12970]: E0319 14:32:04.287746   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:09 control-plane-0 kubelet[12970]: E0319 14:32:09.289323   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:14 control-plane-0 kubelet[12970]: E0319 14:32:14.291284   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:19 control-plane-0 kubelet[12970]: E0319 14:32:19.292827   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:24 control-plane-0 kubelet[12970]: E0319 14:32:24.294705   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:29 control-plane-0 kubelet[12970]: E0319 14:32:29.295456   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:34 control-plane-0 kubelet[12970]: E0319 14:32:34.296164   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:39 control-plane-0 kubelet[12970]: E0319 14:32:39.297889   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:44 control-plane-0 kubelet[12970]: E0319 14:32:44.299495   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:49 control-plane-0 kubelet[12970]: E0319 14:32:49.300796   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:54 control-plane-0 kubelet[12970]: E0319 14:32:54.301663   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:32:59 control-plane-0 kubelet[12970]: E0319 14:32:59.303043   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:04 control-plane-0 kubelet[12970]: E0319 14:33:04.304921   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:09 control-plane-0 kubelet[12970]: E0319 14:33:09.306014   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:14 control-plane-0 kubelet[12970]: E0319 14:33:14.307345   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:19 control-plane-0 kubelet[12970]: E0319 14:33:19.308555   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:24 control-plane-0 kubelet[12970]: E0319 14:33:24.309331   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:29 control-plane-0 kubelet[12970]: E0319 14:33:29.310711   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:34 control-plane-0 kubelet[12970]: E0319 14:33:34.311882   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:39 control-plane-0 kubelet[12970]: E0319 14:33:39.312836   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:44 control-plane-0 kubelet[12970]: E0319 14:33:44.314111   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:49 control-plane-0 kubelet[12970]: E0319 14:33:49.315380   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:54 control-plane-0 kubelet[12970]: E0319 14:33:54.317038   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:33:59 control-plane-0 kubelet[12970]: E0319 14:33:59.318122   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:04 control-plane-0 kubelet[12970]: E0319 14:34:04.319424   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:09 control-plane-0 kubelet[12970]: E0319 14:34:09.320831   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:14 control-plane-0 kubelet[12970]: E0319 14:34:14.321892   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:19 control-plane-0 kubelet[12970]: E0319 14:34:19.322639   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:24 control-plane-0 kubelet[12970]: E0319 14:34:24.323867   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:29 control-plane-0 kubelet[12970]: E0319 14:34:29.325265   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:34 control-plane-0 kubelet[12970]: E0319 14:34:34.327021   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:39 control-plane-0 kubelet[12970]: E0319 14:34:39.327673   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:44 control-plane-0 kubelet[12970]: E0319 14:34:44.329090   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:49 control-plane-0 kubelet[12970]: E0319 14:34:49.331027   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:54 control-plane-0 kubelet[12970]: E0319 14:34:54.332094   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:34:59 control-plane-0 kubelet[12970]: E0319 14:34:59.332827   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:04 control-plane-0 kubelet[12970]: E0319 14:35:04.333570   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:09 control-plane-0 kubelet[12970]: E0319 14:35:09.334904   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:14 control-plane-0 kubelet[12970]: E0319 14:35:14.335862   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:19 control-plane-0 kubelet[12970]: E0319 14:35:19.337211   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:24 control-plane-0 kubelet[12970]: E0319 14:35:24.338673   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:29 control-plane-0 kubelet[12970]: E0319 14:35:29.340071   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:34 control-plane-0 kubelet[12970]: E0319 14:35:34.341246   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:39 control-plane-0 kubelet[12970]: E0319 14:35:39.343045   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:44 control-plane-0 kubelet[12970]: E0319 14:35:44.344581   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:49 control-plane-0 kubelet[12970]: E0319 14:35:49.345833   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:54 control-plane-0 kubelet[12970]: E0319 14:35:54.346918   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:35:59 control-plane-0 kubelet[12970]: E0319 14:35:59.348847   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:04 control-plane-0 kubelet[12970]: E0319 14:36:04.350170   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:09 control-plane-0 kubelet[12970]: E0319 14:36:09.351598   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:14 control-plane-0 kubelet[12970]: E0319 14:36:14.353450   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:19 control-plane-0 kubelet[12970]: E0319 14:36:19.355178   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:24 control-plane-0 kubelet[12970]: E0319 14:36:24.357949   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:29 control-plane-0 kubelet[12970]: E0319 14:36:29.358912   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:34 control-plane-0 kubelet[12970]: E0319 14:36:34.360684   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:39 control-plane-0 kubelet[12970]: E0319 14:36:39.361935   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:44 control-plane-0 kubelet[12970]: E0319 14:36:44.363485   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:49 control-plane-0 kubelet[12970]: E0319 14:36:49.365349   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:54 control-plane-0 kubelet[12970]: E0319 14:36:54.366637   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:36:59 control-plane-0 kubelet[12970]: E0319 14:36:59.367631   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:04 control-plane-0 kubelet[12970]: E0319 14:37:04.369389   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:09 control-plane-0 kubelet[12970]: E0319 14:37:09.370927   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:14 control-plane-0 kubelet[12970]: E0319 14:37:14.372322   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:19 control-plane-0 kubelet[12970]: E0319 14:37:19.373836   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:24 control-plane-0 kubelet[12970]: E0319 14:37:24.375312   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:29 control-plane-0 kubelet[12970]: E0319 14:37:29.376961   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:34 control-plane-0 kubelet[12970]: E0319 14:37:34.378569   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:39 control-plane-0 kubelet[12970]: E0319 14:37:39.379895   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:44 control-plane-0 kubelet[12970]: E0319 14:37:44.381045   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:49 control-plane-0 kubelet[12970]: E0319 14:37:49.382465   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:54 control-plane-0 kubelet[12970]: E0319 14:37:54.383700   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:37:59 control-plane-0 kubelet[12970]: E0319 14:37:59.384947   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:04 control-plane-0 kubelet[12970]: E0319 14:38:04.386769   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:09 control-plane-0 kubelet[12970]: E0319 14:38:09.388672   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:14 control-plane-0 kubelet[12970]: E0319 14:38:14.390183   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:19 control-plane-0 kubelet[12970]: E0319 14:38:19.391677   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:24 control-plane-0 kubelet[12970]: E0319 14:38:24.393279   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:29 control-plane-0 kubelet[12970]: E0319 14:38:29.395214   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:34 control-plane-0 kubelet[12970]: E0319 14:38:34.397191   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:39 control-plane-0 kubelet[12970]: E0319 14:38:39.398962   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:44 control-plane-0 kubelet[12970]: E0319 14:38:44.399888   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:49 control-plane-0 kubelet[12970]: E0319 14:38:49.401491   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:54 control-plane-0 kubelet[12970]: E0319 14:38:54.402413   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:38:59 control-plane-0 kubelet[12970]: E0319 14:38:59.403759   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:04 control-plane-0 kubelet[12970]: E0319 14:39:04.404890   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:09 control-plane-0 kubelet[12970]: E0319 14:39:09.405652   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:14 control-plane-0 kubelet[12970]: E0319 14:39:14.406646   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:19 control-plane-0 kubelet[12970]: E0319 14:39:19.408245   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:24 control-plane-0 kubelet[12970]: E0319 14:39:24.408760   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:29 control-plane-0 kubelet[12970]: E0319 14:39:29.409849   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:34 control-plane-0 kubelet[12970]: E0319 14:39:34.411208   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:39 control-plane-0 kubelet[12970]: E0319 14:39:39.412035   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:44 control-plane-0 kubelet[12970]: E0319 14:39:44.415509   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:49 control-plane-0 kubelet[12970]: E0319 14:39:49.417693   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:54 control-plane-0 kubelet[12970]: E0319 14:39:54.419362   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:39:59 control-plane-0 kubelet[12970]: E0319 14:39:59.420848   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:04 control-plane-0 kubelet[12970]: E0319 14:40:04.421714   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:09 control-plane-0 kubelet[12970]: E0319 14:40:09.423142   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:14 control-plane-0 kubelet[12970]: E0319 14:40:14.424453   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:19 control-plane-0 kubelet[12970]: E0319 14:40:19.425604   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:24 control-plane-0 kubelet[12970]: E0319 14:40:24.426228   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:29 control-plane-0 kubelet[12970]: E0319 14:40:29.427855   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:34 control-plane-0 kubelet[12970]: E0319 14:40:34.428689   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:39 control-plane-0 kubelet[12970]: E0319 14:40:39.430311   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:44 control-plane-0 kubelet[12970]: E0319 14:40:44.431611   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:49 control-plane-0 kubelet[12970]: E0319 14:40:49.432467   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:54 control-plane-0 kubelet[12970]: E0319 14:40:54.433972   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:40:59 control-plane-0 kubelet[12970]: E0319 14:40:59.434534   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:04 control-plane-0 kubelet[12970]: E0319 14:41:04.436029   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:09 control-plane-0 kubelet[12970]: E0319 14:41:09.437679   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:14 control-plane-0 kubelet[12970]: E0319 14:41:14.439749   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:19 control-plane-0 kubelet[12970]: E0319 14:41:19.441040   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:24 control-plane-0 kubelet[12970]: E0319 14:41:24.442175   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:29 control-plane-0 kubelet[12970]: E0319 14:41:29.443966   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:34 control-plane-0 kubelet[12970]: E0319 14:41:34.444976   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:39 control-plane-0 kubelet[12970]: E0319 14:41:39.445734   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:44 control-plane-0 kubelet[12970]: E0319 14:41:44.447305   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:49 control-plane-0 kubelet[12970]: E0319 14:41:49.448095   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:54 control-plane-0 kubelet[12970]: E0319 14:41:54.450543   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:41:59 control-plane-0 kubelet[12970]: E0319 14:41:59.451393   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:04 control-plane-0 kubelet[12970]: E0319 14:42:04.452600   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:09 control-plane-0 kubelet[12970]: E0319 14:42:09.453268   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:14 control-plane-0 kubelet[12970]: E0319 14:42:14.454225   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:19 control-plane-0 kubelet[12970]: E0319 14:42:19.455773   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:24 control-plane-0 kubelet[12970]: E0319 14:42:24.456450   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:29 control-plane-0 kubelet[12970]: E0319 14:42:29.458052   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:34 control-plane-0 kubelet[12970]: E0319 14:42:34.459318   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:39 control-plane-0 kubelet[12970]: E0319 14:42:39.461210   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:44 control-plane-0 kubelet[12970]: E0319 14:42:44.463281   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:49 control-plane-0 kubelet[12970]: E0319 14:42:49.464825   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:54 control-plane-0 kubelet[12970]: E0319 14:42:54.465595   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:42:59 control-plane-0 kubelet[12970]: E0319 14:42:59.467472   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:04 control-plane-0 kubelet[12970]: E0319 14:43:04.469178   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:09 control-plane-0 kubelet[12970]: E0319 14:43:09.470784   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:14 control-plane-0 kubelet[12970]: E0319 14:43:14.472445   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:19 control-plane-0 kubelet[12970]: E0319 14:43:19.473553   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:24 control-plane-0 kubelet[12970]: E0319 14:43:24.474286   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:29 control-plane-0 kubelet[12970]: E0319 14:43:29.475636   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:34 control-plane-0 kubelet[12970]: E0319 14:43:34.477001   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:39 control-plane-0 kubelet[12970]: E0319 14:43:39.478306   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:44 control-plane-0 kubelet[12970]: E0319 14:43:44.479486   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:49 control-plane-0 kubelet[12970]: E0319 14:43:49.480236   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:54 control-plane-0 kubelet[12970]: E0319 14:43:54.482327   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:43:59 control-plane-0 kubelet[12970]: E0319 14:43:59.483144   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:04 control-plane-0 kubelet[12970]: E0319 14:44:04.485329   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:09 control-plane-0 kubelet[12970]: E0319 14:44:09.486819   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:14 control-plane-0 kubelet[12970]: E0319 14:44:14.487884   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:19 control-plane-0 kubelet[12970]: E0319 14:44:19.489085   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:24 control-plane-0 kubelet[12970]: E0319 14:44:24.490204   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:29 control-plane-0 kubelet[12970]: E0319 14:44:29.491759   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:34 control-plane-0 kubelet[12970]: E0319 14:44:34.493000   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:39 control-plane-0 kubelet[12970]: E0319 14:44:39.493856   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:44 control-plane-0 kubelet[12970]: E0319 14:44:44.494900   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:49 control-plane-0 kubelet[12970]: E0319 14:44:49.495804   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:54 control-plane-0 kubelet[12970]: E0319 14:44:54.497466   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:44:59 control-plane-0 kubelet[12970]: E0319 14:44:59.499217   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:04 control-plane-0 kubelet[12970]: E0319 14:45:04.500919   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:09 control-plane-0 kubelet[12970]: E0319 14:45:09.502138   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:14 control-plane-0 kubelet[12970]: E0319 14:45:14.503034   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:19 control-plane-0 kubelet[12970]: E0319 14:45:19.504724   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:24 control-plane-0 kubelet[12970]: E0319 14:45:24.505765   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:29 control-plane-0 kubelet[12970]: E0319 14:45:29.507146   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:34 control-plane-0 kubelet[12970]: E0319 14:45:34.508097   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:39 control-plane-0 kubelet[12970]: E0319 14:45:39.508875   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:44 control-plane-0 kubelet[12970]: E0319 14:45:44.510242   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:49 control-plane-0 kubelet[12970]: E0319 14:45:49.511168   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:54 control-plane-0 kubelet[12970]: E0319 14:45:54.512404   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:45:59 control-plane-0 kubelet[12970]: E0319 14:45:59.513926   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:04 control-plane-0 kubelet[12970]: E0319 14:46:04.515584   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:09 control-plane-0 kubelet[12970]: E0319 14:46:09.516757   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:14 control-plane-0 kubelet[12970]: E0319 14:46:14.518079   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:19 control-plane-0 kubelet[12970]: E0319 14:46:19.519353   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:24 control-plane-0 kubelet[12970]: E0319 14:46:24.520010   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:29 control-plane-0 kubelet[12970]: E0319 14:46:29.521526   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:34 control-plane-0 kubelet[12970]: E0319 14:46:34.522868   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:39 control-plane-0 kubelet[12970]: E0319 14:46:39.524882   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:44 control-plane-0 kubelet[12970]: E0319 14:46:44.526073   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:49 control-plane-0 kubelet[12970]: E0319 14:46:49.527011   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:54 control-plane-0 kubelet[12970]: E0319 14:46:54.528217   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:46:59 control-plane-0 kubelet[12970]: E0319 14:46:59.529572   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:04 control-plane-0 kubelet[12970]: E0319 14:47:04.530651   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:09 control-plane-0 kubelet[12970]: E0319 14:47:09.532524   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:14 control-plane-0 kubelet[12970]: E0319 14:47:14.534197   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:19 control-plane-0 kubelet[12970]: E0319 14:47:19.535194   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:24 control-plane-0 kubelet[12970]: E0319 14:47:24.537001   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:29 control-plane-0 kubelet[12970]: E0319 14:47:29.537883   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:34 control-plane-0 kubelet[12970]: E0319 14:47:34.539021   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:39 control-plane-0 kubelet[12970]: E0319 14:47:39.540903   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:44 control-plane-0 kubelet[12970]: E0319 14:47:44.542005   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:49 control-plane-0 kubelet[12970]: E0319 14:47:49.543975   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:54 control-plane-0 kubelet[12970]: E0319 14:47:54.545263   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:47:59 control-plane-0 kubelet[12970]: E0319 14:47:59.546141   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:04 control-plane-0 kubelet[12970]: E0319 14:48:04.547965   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:09 control-plane-0 kubelet[12970]: E0319 14:48:09.548978   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:14 control-plane-0 kubelet[12970]: E0319 14:48:14.549894   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:19 control-plane-0 kubelet[12970]: E0319 14:48:19.551177   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:24 control-plane-0 kubelet[12970]: E0319 14:48:24.552636   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:29 control-plane-0 kubelet[12970]: E0319 14:48:29.553842   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:34 control-plane-0 kubelet[12970]: E0319 14:48:34.555225   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:39 control-plane-0 kubelet[12970]: E0319 14:48:39.556186   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:44 control-plane-0 kubelet[12970]: E0319 14:48:44.557036   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:49 control-plane-0 kubelet[12970]: E0319 14:48:49.558658   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:54 control-plane-0 kubelet[12970]: E0319 14:48:54.559927   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:48:59 control-plane-0 kubelet[12970]: E0319 14:48:59.560913   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:04 control-plane-0 kubelet[12970]: E0319 14:49:04.562313   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:09 control-plane-0 kubelet[12970]: E0319 14:49:09.563632   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:14 control-plane-0 kubelet[12970]: E0319 14:49:14.565423   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:19 control-plane-0 kubelet[12970]: E0319 14:49:19.566820   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:24 control-plane-0 kubelet[12970]: E0319 14:49:24.567821   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:29 control-plane-0 kubelet[12970]: E0319 14:49:29.569506   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:34 control-plane-0 kubelet[12970]: E0319 14:49:34.571150   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:39 control-plane-0 kubelet[12970]: E0319 14:49:39.572073   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:44 control-plane-0 kubelet[12970]: E0319 14:49:44.573823   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:49 control-plane-0 kubelet[12970]: E0319 14:49:49.574985   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:54 control-plane-0 kubelet[12970]: E0319 14:49:54.575864   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:49:59 control-plane-0 kubelet[12970]: E0319 14:49:59.579225   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:04 control-plane-0 kubelet[12970]: E0319 14:50:04.580842   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:09 control-plane-0 kubelet[12970]: E0319 14:50:09.581553   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:14 control-plane-0 kubelet[12970]: E0319 14:50:14.582951   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:19 control-plane-0 kubelet[12970]: E0319 14:50:19.583870   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:24 control-plane-0 kubelet[12970]: E0319 14:50:24.585127   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:29 control-plane-0 kubelet[12970]: E0319 14:50:29.586141   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:34 control-plane-0 kubelet[12970]: E0319 14:50:34.587449   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:39 control-plane-0 kubelet[12970]: I0319 14:50:39.100115   12970 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"cni-log-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-log-dir\") pod \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\" (UID: \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\") "
Mar 19 14:50:39 control-plane-0 kubelet[12970]: I0319 14:50:39.100142   12970 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"cni-net-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-net-dir\") pod \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\" (UID: \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\") "
Mar 19 14:50:39 control-plane-0 kubelet[12970]: I0319 14:50:39.100173   12970 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"cni-bin-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-bin-dir\") pod \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\" (UID: \"878d3905-ee8f-4d60-9249-2d2e7cbe7e0f\") "
Mar 19 14:50:39 control-plane-0 kubelet[12970]: I0319 14:50:39.100232   12970 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-bin-dir" (OuterVolumeSpecName: "cni-bin-dir") pod "878d3905-ee8f-4d60-9249-2d2e7cbe7e0f" (UID: "878d3905-ee8f-4d60-9249-2d2e7cbe7e0f"). InnerVolumeSpecName "cni-bin-dir". PluginName "kubernetes.io/host-path", VolumeGIDValue ""
Mar 19 14:50:39 control-plane-0 kubelet[12970]: I0319 14:50:39.100244   12970 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-log-dir" (OuterVolumeSpecName: "cni-log-dir") pod "878d3905-ee8f-4d60-9249-2d2e7cbe7e0f" (UID: "878d3905-ee8f-4d60-9249-2d2e7cbe7e0f"). InnerVolumeSpecName "cni-log-dir". PluginName "kubernetes.io/host-path", VolumeGIDValue ""
Mar 19 14:50:39 control-plane-0 kubelet[12970]: I0319 14:50:39.100264   12970 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-net-dir" (OuterVolumeSpecName: "cni-net-dir") pod "878d3905-ee8f-4d60-9249-2d2e7cbe7e0f" (UID: "878d3905-ee8f-4d60-9249-2d2e7cbe7e0f"). InnerVolumeSpecName "cni-net-dir". PluginName "kubernetes.io/host-path", VolumeGIDValue ""
Mar 19 14:50:39 control-plane-0 kubelet[12970]: I0319 14:50:39.200938   12970 reconciler_common.go:299] "Volume detached for volume \"cni-log-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-log-dir\") on node \"control-plane-0\" DevicePath \"\""
Mar 19 14:50:39 control-plane-0 kubelet[12970]: I0319 14:50:39.200988   12970 reconciler_common.go:299] "Volume detached for volume \"cni-net-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-net-dir\") on node \"control-plane-0\" DevicePath \"\""
Mar 19 14:50:39 control-plane-0 kubelet[12970]: I0319 14:50:39.201004   12970 reconciler_common.go:299] "Volume detached for volume \"cni-bin-dir\" (UniqueName: \"kubernetes.io/host-path/878d3905-ee8f-4d60-9249-2d2e7cbe7e0f-cni-bin-dir\") on node \"control-plane-0\" DevicePath \"\""
Mar 19 14:50:39 control-plane-0 kubelet[12970]: E0319 14:50:39.589095   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:44 control-plane-0 kubelet[12970]: E0319 14:50:44.590492   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:49 control-plane-0 kubelet[12970]: E0319 14:50:49.592163   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:54 control-plane-0 kubelet[12970]: E0319 14:50:54.593653   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:50:59 control-plane-0 kubelet[12970]: E0319 14:50:59.594818   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:04 control-plane-0 kubelet[12970]: E0319 14:51:04.595458   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:09 control-plane-0 kubelet[12970]: E0319 14:51:09.597270   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:14 control-plane-0 kubelet[12970]: E0319 14:51:14.598896   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:19 control-plane-0 kubelet[12970]: E0319 14:51:19.599573   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:24 control-plane-0 kubelet[12970]: E0319 14:51:24.601158   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:29 control-plane-0 kubelet[12970]: E0319 14:51:29.602514   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:34 control-plane-0 kubelet[12970]: E0319 14:51:34.604246   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:39 control-plane-0 kubelet[12970]: E0319 14:51:39.605380   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:44 control-plane-0 kubelet[12970]: E0319 14:51:44.607114   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:49 control-plane-0 kubelet[12970]: E0319 14:51:49.608208   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:54 control-plane-0 kubelet[12970]: E0319 14:51:54.609684   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:51:59 control-plane-0 kubelet[12970]: E0319 14:51:59.611077   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:04 control-plane-0 kubelet[12970]: E0319 14:52:04.611789   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:09 control-plane-0 kubelet[12970]: E0319 14:52:09.613521   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:14 control-plane-0 kubelet[12970]: E0319 14:52:14.614753   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:19 control-plane-0 kubelet[12970]: E0319 14:52:19.615989   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:24 control-plane-0 kubelet[12970]: E0319 14:52:24.617436   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:29 control-plane-0 kubelet[12970]: E0319 14:52:29.618672   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:34 control-plane-0 kubelet[12970]: E0319 14:52:34.620311   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:39 control-plane-0 kubelet[12970]: E0319 14:52:39.621432   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:44 control-plane-0 kubelet[12970]: E0319 14:52:44.622203   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:49 control-plane-0 kubelet[12970]: E0319 14:52:49.624074   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:54 control-plane-0 kubelet[12970]: E0319 14:52:54.625815   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:52:59 control-plane-0 kubelet[12970]: E0319 14:52:59.627034   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:04 control-plane-0 kubelet[12970]: E0319 14:53:04.628131   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:09 control-plane-0 kubelet[12970]: E0319 14:53:09.628839   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:14 control-plane-0 kubelet[12970]: E0319 14:53:14.630300   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:19 control-plane-0 kubelet[12970]: E0319 14:53:19.631283   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:24 control-plane-0 kubelet[12970]: E0319 14:53:24.632956   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:29 control-plane-0 kubelet[12970]: E0319 14:53:29.633731   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:34 control-plane-0 kubelet[12970]: E0319 14:53:34.635147   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:39 control-plane-0 kubelet[12970]: E0319 14:53:39.637882   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:44 control-plane-0 kubelet[12970]: E0319 14:53:44.639728   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:49 control-plane-0 kubelet[12970]: E0319 14:53:49.641166   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:54 control-plane-0 kubelet[12970]: E0319 14:53:54.641802   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:53:59 control-plane-0 kubelet[12970]: E0319 14:53:59.643569   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:04 control-plane-0 kubelet[12970]: E0319 14:54:04.644938   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:09 control-plane-0 kubelet[12970]: E0319 14:54:09.646008   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:14 control-plane-0 kubelet[12970]: E0319 14:54:14.646759   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:19 control-plane-0 kubelet[12970]: E0319 14:54:19.647559   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:24 control-plane-0 kubelet[12970]: E0319 14:54:24.649422   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:29 control-plane-0 kubelet[12970]: E0319 14:54:29.650526   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:34 control-plane-0 kubelet[12970]: E0319 14:54:34.652129   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:39 control-plane-0 kubelet[12970]: E0319 14:54:39.652738   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:44 control-plane-0 kubelet[12970]: E0319 14:54:44.653884   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:49 control-plane-0 kubelet[12970]: E0319 14:54:49.655395   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:54 control-plane-0 kubelet[12970]: E0319 14:54:54.657473   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:54:59 control-plane-0 kubelet[12970]: E0319 14:54:59.659737   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:04 control-plane-0 kubelet[12970]: E0319 14:55:04.660563   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:09 control-plane-0 kubelet[12970]: E0319 14:55:09.662423   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:14 control-plane-0 kubelet[12970]: E0319 14:55:14.663232   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:19 control-plane-0 kubelet[12970]: E0319 14:55:19.664831   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:24 control-plane-0 kubelet[12970]: E0319 14:55:24.665663   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:29 control-plane-0 kubelet[12970]: E0319 14:55:29.666888   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:34 control-plane-0 kubelet[12970]: E0319 14:55:34.667746   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:39 control-plane-0 kubelet[12970]: E0319 14:55:39.669283   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:44 control-plane-0 kubelet[12970]: E0319 14:55:44.670040   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:49 control-plane-0 kubelet[12970]: E0319 14:55:49.671834   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:54 control-plane-0 kubelet[12970]: E0319 14:55:54.672955   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:55:59 control-plane-0 kubelet[12970]: E0319 14:55:59.674604   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:04 control-plane-0 kubelet[12970]: E0319 14:56:04.676328   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:09 control-plane-0 kubelet[12970]: E0319 14:56:09.676996   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:14 control-plane-0 kubelet[12970]: E0319 14:56:14.677830   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:19 control-plane-0 kubelet[12970]: E0319 14:56:19.679310   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:24 control-plane-0 kubelet[12970]: E0319 14:56:24.680492   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:29 control-plane-0 kubelet[12970]: E0319 14:56:29.681710   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:34 control-plane-0 kubelet[12970]: E0319 14:56:34.683116   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:39 control-plane-0 kubelet[12970]: E0319 14:56:39.684595   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:44 control-plane-0 kubelet[12970]: E0319 14:56:44.686323   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:49 control-plane-0 kubelet[12970]: E0319 14:56:49.688473   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:54 control-plane-0 kubelet[12970]: E0319 14:56:54.689816   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:56:59 control-plane-0 kubelet[12970]: E0319 14:56:59.691397   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:04 control-plane-0 kubelet[12970]: E0319 14:57:04.692517   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:09 control-plane-0 kubelet[12970]: E0319 14:57:09.693394   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:14 control-plane-0 kubelet[12970]: E0319 14:57:14.694403   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:19 control-plane-0 kubelet[12970]: E0319 14:57:19.695872   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:24 control-plane-0 kubelet[12970]: E0319 14:57:24.697177   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:29 control-plane-0 kubelet[12970]: E0319 14:57:29.698429   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:34 control-plane-0 kubelet[12970]: E0319 14:57:34.699951   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:39 control-plane-0 kubelet[12970]: E0319 14:57:39.701423   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:44 control-plane-0 kubelet[12970]: E0319 14:57:44.703183   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:49 control-plane-0 kubelet[12970]: E0319 14:57:49.704071   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:54 control-plane-0 kubelet[12970]: E0319 14:57:54.705606   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:57:59 control-plane-0 kubelet[12970]: E0319 14:57:59.707511   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:04 control-plane-0 kubelet[12970]: E0319 14:58:04.708541   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:09 control-plane-0 kubelet[12970]: E0319 14:58:09.709876   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:14 control-plane-0 kubelet[12970]: E0319 14:58:14.711068   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:19 control-plane-0 kubelet[12970]: E0319 14:58:19.712663   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:24 control-plane-0 kubelet[12970]: E0319 14:58:24.713993   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:29 control-plane-0 kubelet[12970]: E0319 14:58:29.715540   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:34 control-plane-0 kubelet[12970]: E0319 14:58:34.716260   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:39 control-plane-0 kubelet[12970]: E0319 14:58:39.718013   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:44 control-plane-0 kubelet[12970]: E0319 14:58:44.719656   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:49 control-plane-0 kubelet[12970]: E0319 14:58:49.721157   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:54 control-plane-0 kubelet[12970]: E0319 14:58:54.722687   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:58:59 control-plane-0 kubelet[12970]: E0319 14:58:59.723723   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:04 control-plane-0 kubelet[12970]: E0319 14:59:04.724797   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:09 control-plane-0 kubelet[12970]: E0319 14:59:09.725742   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:14 control-plane-0 kubelet[12970]: E0319 14:59:14.726828   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:19 control-plane-0 kubelet[12970]: E0319 14:59:19.727761   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:24 control-plane-0 kubelet[12970]: E0319 14:59:24.728904   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:29 control-plane-0 kubelet[12970]: E0319 14:59:29.730566   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:34 control-plane-0 kubelet[12970]: E0319 14:59:34.732456   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:39 control-plane-0 kubelet[12970]: E0319 14:59:39.733897   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:44 control-plane-0 kubelet[12970]: E0319 14:59:44.735061   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:49 control-plane-0 kubelet[12970]: E0319 14:59:49.736669   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:54 control-plane-0 kubelet[12970]: E0319 14:59:54.737789   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 14:59:59 control-plane-0 kubelet[12970]: E0319 14:59:59.740419   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:04 control-plane-0 kubelet[12970]: E0319 15:00:04.742221   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:09 control-plane-0 kubelet[12970]: E0319 15:00:09.744301   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:14 control-plane-0 kubelet[12970]: E0319 15:00:14.746181   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:19 control-plane-0 kubelet[12970]: E0319 15:00:19.747255   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:24 control-plane-0 kubelet[12970]: E0319 15:00:24.749203   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:29 control-plane-0 kubelet[12970]: E0319 15:00:29.751310   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:34 control-plane-0 kubelet[12970]: E0319 15:00:34.752716   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:39 control-plane-0 kubelet[12970]: E0319 15:00:39.753771   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:44 control-plane-0 kubelet[12970]: E0319 15:00:44.754548   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:49 control-plane-0 kubelet[12970]: E0319 15:00:49.756533   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:54 control-plane-0 kubelet[12970]: E0319 15:00:54.758063   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:00:59 control-plane-0 kubelet[12970]: E0319 15:00:59.758852   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:04 control-plane-0 kubelet[12970]: E0319 15:01:04.759714   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:09 control-plane-0 kubelet[12970]: E0319 15:01:09.761028   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:14 control-plane-0 kubelet[12970]: E0319 15:01:14.762661   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:19 control-plane-0 kubelet[12970]: E0319 15:01:19.763877   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:24 control-plane-0 kubelet[12970]: E0319 15:01:24.765929   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:29 control-plane-0 kubelet[12970]: E0319 15:01:29.766823   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:34 control-plane-0 kubelet[12970]: E0319 15:01:34.768331   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:39 control-plane-0 kubelet[12970]: E0319 15:01:39.769227   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:44 control-plane-0 kubelet[12970]: E0319 15:01:44.771247   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:49 control-plane-0 kubelet[12970]: E0319 15:01:49.773003   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:54 control-plane-0 kubelet[12970]: E0319 15:01:54.773734   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:01:59 control-plane-0 kubelet[12970]: E0319 15:01:59.775051   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:02:04 control-plane-0 kubelet[12970]: E0319 15:02:04.776665   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:02:09 control-plane-0 kubelet[12970]: E0319 15:02:09.778619   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:02:14 control-plane-0 kubelet[12970]: E0319 15:02:14.779952   12970 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:02:26 control-plane-0 kubelet[12970]: I0319 15:02:26.481942   12970 memory_manager.go:355] "RemoveStaleState removing state" podUID="878d3905-ee8f-4d60-9249-2d2e7cbe7e0f" containerName="install-cni"
Mar 19 15:05:18 control-plane-0 kubelet[45250]: E0319 15:05:18.169966   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:23 control-plane-0 kubelet[45250]: E0319 15:05:23.171362   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:28 control-plane-0 kubelet[45250]: E0319 15:05:28.172978   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:33 control-plane-0 kubelet[45250]: E0319 15:05:33.173964   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:38 control-plane-0 kubelet[45250]: E0319 15:05:38.175192   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:43 control-plane-0 kubelet[45250]: E0319 15:05:43.176297   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:48 control-plane-0 kubelet[45250]: E0319 15:05:48.177384   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:53 control-plane-0 kubelet[45250]: E0319 15:05:53.179147   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:05:58 control-plane-0 kubelet[45250]: E0319 15:05:58.180909   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:03 control-plane-0 kubelet[45250]: E0319 15:06:03.182333   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:08 control-plane-0 kubelet[45250]: E0319 15:06:08.183746   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:13 control-plane-0 kubelet[45250]: E0319 15:06:13.185410   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:18 control-plane-0 kubelet[45250]: E0319 15:06:18.186371   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:23 control-plane-0 kubelet[45250]: E0319 15:06:23.187900   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:28 control-plane-0 kubelet[45250]: E0319 15:06:28.188852   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:33 control-plane-0 kubelet[45250]: E0319 15:06:33.190026   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:38 control-plane-0 kubelet[45250]: E0319 15:06:38.190827   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:43 control-plane-0 kubelet[45250]: E0319 15:06:43.192075   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:48 control-plane-0 kubelet[45250]: E0319 15:06:48.193348   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:53 control-plane-0 kubelet[45250]: E0319 15:06:53.194394   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:06:58 control-plane-0 kubelet[45250]: E0319 15:06:58.195080   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:03 control-plane-0 kubelet[45250]: E0319 15:07:03.196747   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:08 control-plane-0 kubelet[45250]: E0319 15:07:08.197822   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:13 control-plane-0 kubelet[45250]: E0319 15:07:13.199188   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:18 control-plane-0 kubelet[45250]: E0319 15:07:18.200239   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:23 control-plane-0 kubelet[45250]: E0319 15:07:23.201439   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:28 control-plane-0 kubelet[45250]: E0319 15:07:28.202686   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:33 control-plane-0 kubelet[45250]: E0319 15:07:33.204645   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:38 control-plane-0 kubelet[45250]: E0319 15:07:38.205475   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:43 control-plane-0 kubelet[45250]: E0319 15:07:43.206227   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:48 control-plane-0 kubelet[45250]: E0319 15:07:48.207149   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:53 control-plane-0 kubelet[45250]: E0319 15:07:53.208743   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:07:55 control-plane-0 kubelet[45250]: I0319 15:07:55.831342   45250 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni\" (UniqueName: \"kubernetes.io/host-path/e3237f47-9cfd-472a-8aa6-cc3b83b21a38-cni\") pod \"kube-flannel-ds-wlms7\" (UID: \"e3237f47-9cfd-472a-8aa6-cc3b83b21a38\") " pod="kube-flannel/kube-flannel-ds-wlms7"
Mar 19 15:07:55 control-plane-0 kubelet[45250]: I0319 15:07:55.832430   45250 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-plugin\" (UniqueName: \"kubernetes.io/host-path/e3237f47-9cfd-472a-8aa6-cc3b83b21a38-cni-plugin\") pod \"kube-flannel-ds-wlms7\" (UID: \"e3237f47-9cfd-472a-8aa6-cc3b83b21a38\") " pod="kube-flannel/kube-flannel-ds-wlms7"
Mar 19 15:07:58 control-plane-0 kubelet[45250]: E0319 15:07:58.210056   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:03 control-plane-0 kubelet[45250]: E0319 15:08:03.211770   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:08 control-plane-0 kubelet[45250]: E0319 15:08:08.213171   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:13 control-plane-0 kubelet[45250]: E0319 15:08:13.214588   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:18 control-plane-0 kubelet[45250]: E0319 15:08:18.216817   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:23 control-plane-0 kubelet[45250]: E0319 15:08:23.218169   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:28 control-plane-0 kubelet[45250]: E0319 15:08:28.219215   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:33 control-plane-0 kubelet[45250]: E0319 15:08:33.220080   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:38 control-plane-0 kubelet[45250]: E0319 15:08:38.221568   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:43 control-plane-0 kubelet[45250]: E0319 15:08:43.223365   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:48 control-plane-0 kubelet[45250]: E0319 15:08:48.224262   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:53 control-plane-0 kubelet[45250]: E0319 15:08:53.225421   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:08:58 control-plane-0 kubelet[45250]: E0319 15:08:58.226473   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:03 control-plane-0 kubelet[45250]: E0319 15:09:03.227931   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:08 control-plane-0 kubelet[45250]: E0319 15:09:08.229340   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:13 control-plane-0 kubelet[45250]: E0319 15:09:13.231057   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:18 control-plane-0 kubelet[45250]: E0319 15:09:18.232178   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:23 control-plane-0 kubelet[45250]: E0319 15:09:23.233370   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:28 control-plane-0 kubelet[45250]: E0319 15:09:28.234885   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:33 control-plane-0 kubelet[45250]: E0319 15:09:33.235979   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:38 control-plane-0 kubelet[45250]: E0319 15:09:38.237978   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:43 control-plane-0 kubelet[45250]: E0319 15:09:43.239505   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:48 control-plane-0 kubelet[45250]: E0319 15:09:48.240802   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:53 control-plane-0 kubelet[45250]: E0319 15:09:53.242408   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:09:58 control-plane-0 kubelet[45250]: E0319 15:09:58.244195   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:10:03 control-plane-0 kubelet[45250]: E0319 15:10:03.245591   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:10:08 control-plane-0 kubelet[45250]: E0319 15:10:08.246715   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:10:13 control-plane-0 kubelet[45250]: E0319 15:10:13.248952   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:10:18 control-plane-0 kubelet[45250]: E0319 15:10:18.250560   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:10:23 control-plane-0 kubelet[45250]: E0319 15:10:23.251615   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:10:28 control-plane-0 kubelet[45250]: E0319 15:10:28.252683   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:10:33 control-plane-0 kubelet[45250]: E0319 15:10:33.253826   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:10:38 control-plane-0 kubelet[45250]: E0319 15:10:38.255916   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:10:43 control-plane-0 kubelet[45250]: E0319 15:10:43.257489   45250 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:10:48 control-plane-0 kubelet[46534]: I0319 15:10:48.884480   46534 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni\" (UniqueName: \"kubernetes.io/host-path/e3237f47-9cfd-472a-8aa6-cc3b83b21a38-cni\") pod \"kube-flannel-ds-wlms7\" (UID: \"e3237f47-9cfd-472a-8aa6-cc3b83b21a38\") " pod="kube-flannel/kube-flannel-ds-wlms7"
Mar 19 15:10:48 control-plane-0 kubelet[46534]: I0319 15:10:48.886434   46534 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-plugin\" (UniqueName: \"kubernetes.io/host-path/e3237f47-9cfd-472a-8aa6-cc3b83b21a38-cni-plugin\") pod \"kube-flannel-ds-wlms7\" (UID: \"e3237f47-9cfd-472a-8aa6-cc3b83b21a38\") " pod="kube-flannel/kube-flannel-ds-wlms7"
Mar 19 15:12:48 control-plane-0 kubelet[46534]: E0319 15:12:48.007625   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:12:53 control-plane-0 kubelet[46534]: E0319 15:12:53.008920   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:12:58 control-plane-0 kubelet[46534]: E0319 15:12:58.009811   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:03 control-plane-0 kubelet[46534]: E0319 15:13:03.011396   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:07 control-plane-0 kubelet[46534]: I0319 15:13:07.968278   46534 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"cni-plugin\" (UniqueName: \"kubernetes.io/host-path/e3237f47-9cfd-472a-8aa6-cc3b83b21a38-cni-plugin\") pod \"e3237f47-9cfd-472a-8aa6-cc3b83b21a38\" (UID: \"e3237f47-9cfd-472a-8aa6-cc3b83b21a38\") "
Mar 19 15:13:07 control-plane-0 kubelet[46534]: I0319 15:13:07.968367   46534 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/host-path/e3237f47-9cfd-472a-8aa6-cc3b83b21a38-cni-plugin" (OuterVolumeSpecName: "cni-plugin") pod "e3237f47-9cfd-472a-8aa6-cc3b83b21a38" (UID: "e3237f47-9cfd-472a-8aa6-cc3b83b21a38"). InnerVolumeSpecName "cni-plugin". PluginName "kubernetes.io/host-path", VolumeGIDValue ""
Mar 19 15:13:07 control-plane-0 kubelet[46534]: I0319 15:13:07.968438   46534 reconciler_common.go:162] "operationExecutor.UnmountVolume started for volume \"cni\" (UniqueName: \"kubernetes.io/host-path/e3237f47-9cfd-472a-8aa6-cc3b83b21a38-cni\") pod \"e3237f47-9cfd-472a-8aa6-cc3b83b21a38\" (UID: \"e3237f47-9cfd-472a-8aa6-cc3b83b21a38\") "
Mar 19 15:13:07 control-plane-0 kubelet[46534]: I0319 15:13:07.968483   46534 reconciler_common.go:299] "Volume detached for volume \"cni-plugin\" (UniqueName: \"kubernetes.io/host-path/e3237f47-9cfd-472a-8aa6-cc3b83b21a38-cni-plugin\") on node \"control-plane-0\" DevicePath \"\""
Mar 19 15:13:07 control-plane-0 kubelet[46534]: I0319 15:13:07.968516   46534 operation_generator.go:780] UnmountVolume.TearDown succeeded for volume "kubernetes.io/host-path/e3237f47-9cfd-472a-8aa6-cc3b83b21a38-cni" (OuterVolumeSpecName: "cni") pod "e3237f47-9cfd-472a-8aa6-cc3b83b21a38" (UID: "e3237f47-9cfd-472a-8aa6-cc3b83b21a38"). InnerVolumeSpecName "cni". PluginName "kubernetes.io/host-path", VolumeGIDValue ""
Mar 19 15:13:08 control-plane-0 kubelet[46534]: E0319 15:13:08.012835   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:08 control-plane-0 kubelet[46534]: I0319 15:13:08.069563   46534 reconciler_common.go:299] "Volume detached for volume \"cni\" (UniqueName: \"kubernetes.io/host-path/e3237f47-9cfd-472a-8aa6-cc3b83b21a38-cni\") on node \"control-plane-0\" DevicePath \"\""
Mar 19 15:13:13 control-plane-0 kubelet[46534]: E0319 15:13:13.014133   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:18 control-plane-0 kubelet[46534]: E0319 15:13:18.015171   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:22 control-plane-0 kubelet[46534]: I0319 15:13:22.690370   46534 memory_manager.go:355] "RemoveStaleState removing state" podUID="e3237f47-9cfd-472a-8aa6-cc3b83b21a38" containerName="install-cni"
Mar 19 15:13:22 control-plane-0 kubelet[46534]: I0319 15:13:22.690393   46534 memory_manager.go:355] "RemoveStaleState removing state" podUID="e3237f47-9cfd-472a-8aa6-cc3b83b21a38" containerName="install-cni-plugin"
Mar 19 15:13:22 control-plane-0 kubelet[46534]: I0319 15:13:22.766634   46534 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni\" (UniqueName: \"kubernetes.io/host-path/21b83bce-a0de-4326-90b2-147e8b63e3e4-cni\") pod \"kube-flannel-ds-pld9f\" (UID: \"21b83bce-a0de-4326-90b2-147e8b63e3e4\") " pod="kube-flannel/kube-flannel-ds-pld9f"
Mar 19 15:13:22 control-plane-0 kubelet[46534]: I0319 15:13:22.766716   46534 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-plugin\" (UniqueName: \"kubernetes.io/host-path/21b83bce-a0de-4326-90b2-147e8b63e3e4-cni-plugin\") pod \"kube-flannel-ds-pld9f\" (UID: \"21b83bce-a0de-4326-90b2-147e8b63e3e4\") " pod="kube-flannel/kube-flannel-ds-pld9f"
Mar 19 15:13:23 control-plane-0 kubelet[46534]: E0319 15:13:23.016271   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:28 control-plane-0 kubelet[46534]: E0319 15:13:28.017222   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:33 control-plane-0 kubelet[46534]: E0319 15:13:33.019173   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:38 control-plane-0 kubelet[46534]: E0319 15:13:38.021143   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:43 control-plane-0 kubelet[46534]: E0319 15:13:43.022461   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:48 control-plane-0 kubelet[46534]: E0319 15:13:48.023782   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:53 control-plane-0 kubelet[46534]: E0319 15:13:53.025681   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:13:58 control-plane-0 kubelet[46534]: E0319 15:13:58.026730   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:14:03 control-plane-0 kubelet[46534]: E0319 15:14:03.028816   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:14:08 control-plane-0 kubelet[46534]: E0319 15:14:08.030121   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:14:13 control-plane-0 kubelet[46534]: E0319 15:14:13.031090   46534 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:14:16 control-plane-0 kubelet[47920]: I0319 15:14:16.013924   47920 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-plugin\" (UniqueName: \"kubernetes.io/host-path/21b83bce-a0de-4326-90b2-147e8b63e3e4-cni-plugin\") pod \"kube-flannel-ds-pld9f\" (UID: \"21b83bce-a0de-4326-90b2-147e8b63e3e4\") " pod="kube-flannel/kube-flannel-ds-pld9f"
Mar 19 15:14:16 control-plane-0 kubelet[47920]: I0319 15:14:16.014278   47920 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni\" (UniqueName: \"kubernetes.io/host-path/21b83bce-a0de-4326-90b2-147e8b63e3e4-cni\") pod \"kube-flannel-ds-pld9f\" (UID: \"21b83bce-a0de-4326-90b2-147e8b63e3e4\") " pod="kube-flannel/kube-flannel-ds-pld9f"
Mar 19 15:16:15 control-plane-0 kubelet[47920]: E0319 15:16:15.121535   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:16:20 control-plane-0 kubelet[47920]: E0319 15:16:20.122547   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:16:25 control-plane-0 kubelet[47920]: E0319 15:16:25.122948   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:16:30 control-plane-0 kubelet[47920]: E0319 15:16:30.124320   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:16:35 control-plane-0 kubelet[47920]: E0319 15:16:35.125735   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:16:40 control-plane-0 kubelet[47920]: E0319 15:16:40.127969   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:16:45 control-plane-0 kubelet[47920]: E0319 15:16:45.129241   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:16:50 control-plane-0 kubelet[47920]: E0319 15:16:50.130463   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:16:55 control-plane-0 kubelet[47920]: E0319 15:16:55.131417   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:00 control-plane-0 kubelet[47920]: E0319 15:17:00.132917   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:05 control-plane-0 kubelet[47920]: E0319 15:17:05.134322   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:10 control-plane-0 kubelet[47920]: E0319 15:17:10.135178   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:15 control-plane-0 kubelet[47920]: E0319 15:17:15.136572   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:20 control-plane-0 kubelet[47920]: E0319 15:17:20.137727   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:25 control-plane-0 kubelet[47920]: E0319 15:17:25.138360   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:30 control-plane-0 kubelet[47920]: E0319 15:17:30.139845   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:35 control-plane-0 kubelet[47920]: E0319 15:17:35.140983   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:40 control-plane-0 kubelet[47920]: E0319 15:17:40.142407   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:45 control-plane-0 kubelet[47920]: E0319 15:17:45.143512   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:50 control-plane-0 kubelet[47920]: E0319 15:17:50.144615   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:17:55 control-plane-0 kubelet[47920]: E0319 15:17:55.145680   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:00 control-plane-0 kubelet[47920]: E0319 15:18:00.146801   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:05 control-plane-0 kubelet[47920]: E0319 15:18:05.147805   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:10 control-plane-0 kubelet[47920]: E0319 15:18:10.149378   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:15 control-plane-0 kubelet[47920]: E0319 15:18:15.149962   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:20 control-plane-0 kubelet[47920]: E0319 15:18:20.151528   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:25 control-plane-0 kubelet[47920]: E0319 15:18:25.152738   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:30 control-plane-0 kubelet[47920]: E0319 15:18:30.153889   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:35 control-plane-0 kubelet[47920]: E0319 15:18:35.155028   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:40 control-plane-0 kubelet[47920]: E0319 15:18:40.156430   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:45 control-plane-0 kubelet[47920]: E0319 15:18:45.158356   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:50 control-plane-0 kubelet[47920]: E0319 15:18:50.159248   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:18:55 control-plane-0 kubelet[47920]: E0319 15:18:55.159826   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:00 control-plane-0 kubelet[47920]: E0319 15:19:00.161104   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:05 control-plane-0 kubelet[47920]: E0319 15:19:05.162729   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:10 control-plane-0 kubelet[47920]: E0319 15:19:10.163539   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:15 control-plane-0 kubelet[47920]: E0319 15:19:15.165260   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:20 control-plane-0 kubelet[47920]: E0319 15:19:20.166173   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:25 control-plane-0 kubelet[47920]: E0319 15:19:25.167251   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:30 control-plane-0 kubelet[47920]: E0319 15:19:30.168166   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:35 control-plane-0 kubelet[47920]: E0319 15:19:35.169910   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:40 control-plane-0 kubelet[47920]: E0319 15:19:40.171389   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:45 control-plane-0 kubelet[47920]: E0319 15:19:45.172938   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:50 control-plane-0 kubelet[47920]: E0319 15:19:50.174456   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:19:55 control-plane-0 kubelet[47920]: E0319 15:19:55.175525   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:00 control-plane-0 kubelet[47920]: E0319 15:20:00.176943   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:05 control-plane-0 kubelet[47920]: E0319 15:20:05.178028   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:10 control-plane-0 kubelet[47920]: E0319 15:20:10.180102   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:15 control-plane-0 kubelet[47920]: E0319 15:20:15.181633   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:20 control-plane-0 kubelet[47920]: E0319 15:20:20.183156   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:25 control-plane-0 kubelet[47920]: E0319 15:20:25.184302   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:30 control-plane-0 kubelet[47920]: E0319 15:20:30.185864   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:35 control-plane-0 kubelet[47920]: E0319 15:20:35.187236   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:40 control-plane-0 kubelet[47920]: E0319 15:20:40.188455   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:45 control-plane-0 kubelet[47920]: E0319 15:20:45.189791   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:50 control-plane-0 kubelet[47920]: E0319 15:20:50.191466   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:20:55 control-plane-0 kubelet[47920]: E0319 15:20:55.193074   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:00 control-plane-0 kubelet[47920]: E0319 15:21:00.196146   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:05 control-plane-0 kubelet[47920]: E0319 15:21:05.196806   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:10 control-plane-0 kubelet[47920]: E0319 15:21:10.198123   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:15 control-plane-0 kubelet[47920]: E0319 15:21:15.199232   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:20 control-plane-0 kubelet[47920]: E0319 15:21:20.200604   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:25 control-plane-0 kubelet[47920]: E0319 15:21:25.201805   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:30 control-plane-0 kubelet[47920]: E0319 15:21:30.203263   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:35 control-plane-0 kubelet[47920]: E0319 15:21:35.204734   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:40 control-plane-0 kubelet[47920]: E0319 15:21:40.206441   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:45 control-plane-0 kubelet[47920]: E0319 15:21:45.207627   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:50 control-plane-0 kubelet[47920]: E0319 15:21:50.209244   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:21:55 control-plane-0 kubelet[47920]: E0319 15:21:55.209834   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:00 control-plane-0 kubelet[47920]: E0319 15:22:00.210779   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:05 control-plane-0 kubelet[47920]: E0319 15:22:05.211815   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:10 control-plane-0 kubelet[47920]: E0319 15:22:10.213584   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:15 control-plane-0 kubelet[47920]: E0319 15:22:15.215018   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:20 control-plane-0 kubelet[47920]: E0319 15:22:20.215953   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:25 control-plane-0 kubelet[47920]: E0319 15:22:25.217674   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:30 control-plane-0 kubelet[47920]: E0319 15:22:30.219143   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:35 control-plane-0 kubelet[47920]: E0319 15:22:35.220623   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:40 control-plane-0 kubelet[47920]: E0319 15:22:40.222191   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:45 control-plane-0 kubelet[47920]: E0319 15:22:45.223670   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:50 control-plane-0 kubelet[47920]: E0319 15:22:50.225119   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:22:55 control-plane-0 kubelet[47920]: E0319 15:22:55.226758   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:00 control-plane-0 kubelet[47920]: E0319 15:23:00.227799   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:05 control-plane-0 kubelet[47920]: E0319 15:23:05.229167   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:10 control-plane-0 kubelet[47920]: E0319 15:23:10.230622   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:15 control-plane-0 kubelet[47920]: E0319 15:23:15.231640   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:20 control-plane-0 kubelet[47920]: E0319 15:23:20.233064   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:25 control-plane-0 kubelet[47920]: E0319 15:23:25.234149   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:30 control-plane-0 kubelet[47920]: E0319 15:23:30.235947   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:35 control-plane-0 kubelet[47920]: E0319 15:23:35.237420   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:40 control-plane-0 kubelet[47920]: E0319 15:23:40.238616   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:45 control-plane-0 kubelet[47920]: E0319 15:23:45.240333   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:50 control-plane-0 kubelet[47920]: E0319 15:23:50.241570   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:23:55 control-plane-0 kubelet[47920]: E0319 15:23:55.243542   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:00 control-plane-0 kubelet[47920]: E0319 15:24:00.245152   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:05 control-plane-0 kubelet[47920]: E0319 15:24:05.246655   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:10 control-plane-0 kubelet[47920]: E0319 15:24:10.247449   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:15 control-plane-0 kubelet[47920]: E0319 15:24:15.249246   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:20 control-plane-0 kubelet[47920]: E0319 15:24:20.250402   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:25 control-plane-0 kubelet[47920]: E0319 15:24:25.251265   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:30 control-plane-0 kubelet[47920]: E0319 15:24:30.252192   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:35 control-plane-0 kubelet[47920]: E0319 15:24:35.253409   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:40 control-plane-0 kubelet[47920]: E0319 15:24:40.255063   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:45 control-plane-0 kubelet[47920]: E0319 15:24:45.256501   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:50 control-plane-0 kubelet[47920]: E0319 15:24:50.257977   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:24:55 control-plane-0 kubelet[47920]: E0319 15:24:55.259420   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:00 control-plane-0 kubelet[47920]: E0319 15:25:00.261293   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:05 control-plane-0 kubelet[47920]: E0319 15:25:05.262663   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:10 control-plane-0 kubelet[47920]: E0319 15:25:10.263911   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:15 control-plane-0 kubelet[47920]: E0319 15:25:15.265914   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:20 control-plane-0 kubelet[47920]: E0319 15:25:20.267021   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:25 control-plane-0 kubelet[47920]: E0319 15:25:25.268845   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:30 control-plane-0 kubelet[47920]: E0319 15:25:30.270134   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:35 control-plane-0 kubelet[47920]: E0319 15:25:35.271282   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:40 control-plane-0 kubelet[47920]: E0319 15:25:40.272623   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:45 control-plane-0 kubelet[47920]: E0319 15:25:45.274453   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:50 control-plane-0 kubelet[47920]: E0319 15:25:50.276142   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:25:55 control-plane-0 kubelet[47920]: E0319 15:25:55.277341   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:00 control-plane-0 kubelet[47920]: E0319 15:26:00.279154   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:05 control-plane-0 kubelet[47920]: E0319 15:26:05.279969   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:10 control-plane-0 kubelet[47920]: E0319 15:26:10.281805   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:15 control-plane-0 kubelet[47920]: E0319 15:26:15.283285   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:20 control-plane-0 kubelet[47920]: E0319 15:26:20.285340   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:25 control-plane-0 kubelet[47920]: E0319 15:26:25.286406   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:30 control-plane-0 kubelet[47920]: E0319 15:26:30.287330   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:35 control-plane-0 kubelet[47920]: E0319 15:26:35.288889   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:40 control-plane-0 kubelet[47920]: E0319 15:26:40.290314   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:45 control-plane-0 kubelet[47920]: E0319 15:26:45.291811   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:50 control-plane-0 kubelet[47920]: E0319 15:26:50.293531   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:26:55 control-plane-0 kubelet[47920]: E0319 15:26:55.295205   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:00 control-plane-0 kubelet[47920]: E0319 15:27:00.296919   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:05 control-plane-0 kubelet[47920]: E0319 15:27:05.298224   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:10 control-plane-0 kubelet[47920]: E0319 15:27:10.299405   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:15 control-plane-0 kubelet[47920]: E0319 15:27:15.300780   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:20 control-plane-0 kubelet[47920]: E0319 15:27:20.302263   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:25 control-plane-0 kubelet[47920]: E0319 15:27:25.303366   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:30 control-plane-0 kubelet[47920]: E0319 15:27:30.304741   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:35 control-plane-0 kubelet[47920]: E0319 15:27:35.305380   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:40 control-plane-0 kubelet[47920]: E0319 15:27:40.307162   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:45 control-plane-0 kubelet[47920]: E0319 15:27:45.308803   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:50 control-plane-0 kubelet[47920]: E0319 15:27:50.310127   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:27:55 control-plane-0 kubelet[47920]: E0319 15:27:55.311279   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:00 control-plane-0 kubelet[47920]: E0319 15:28:00.312601   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:05 control-plane-0 kubelet[47920]: E0319 15:28:05.314265   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:10 control-plane-0 kubelet[47920]: E0319 15:28:10.315573   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:15 control-plane-0 kubelet[47920]: E0319 15:28:15.317962   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:20 control-plane-0 kubelet[47920]: E0319 15:28:20.319275   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:25 control-plane-0 kubelet[47920]: E0319 15:28:25.320941   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:30 control-plane-0 kubelet[47920]: E0319 15:28:30.322278   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:35 control-plane-0 kubelet[47920]: E0319 15:28:35.323323   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:40 control-plane-0 kubelet[47920]: E0319 15:28:40.324603   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:45 control-plane-0 kubelet[47920]: E0319 15:28:45.325682   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:50 control-plane-0 kubelet[47920]: E0319 15:28:50.327250   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:28:55 control-plane-0 kubelet[47920]: E0319 15:28:55.328934   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:00 control-plane-0 kubelet[47920]: E0319 15:29:00.330343   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:05 control-plane-0 kubelet[47920]: E0319 15:29:05.332171   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:10 control-plane-0 kubelet[47920]: E0319 15:29:10.333188   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:15 control-plane-0 kubelet[47920]: E0319 15:29:15.334394   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:20 control-plane-0 kubelet[47920]: E0319 15:29:20.336084   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:25 control-plane-0 kubelet[47920]: E0319 15:29:25.337496   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:30 control-plane-0 kubelet[47920]: E0319 15:29:30.339492   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:35 control-plane-0 kubelet[47920]: E0319 15:29:35.340776   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:40 control-plane-0 kubelet[47920]: E0319 15:29:40.341473   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:45 control-plane-0 kubelet[47920]: E0319 15:29:45.342570   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:50 control-plane-0 kubelet[47920]: E0319 15:29:50.343880   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:29:55 control-plane-0 kubelet[47920]: E0319 15:29:55.345738   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:00 control-plane-0 kubelet[47920]: E0319 15:30:00.347797   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:05 control-plane-0 kubelet[47920]: E0319 15:30:05.348877   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:10 control-plane-0 kubelet[47920]: E0319 15:30:10.350941   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:15 control-plane-0 kubelet[47920]: E0319 15:30:15.352068   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:20 control-plane-0 kubelet[47920]: E0319 15:30:20.354172   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:25 control-plane-0 kubelet[47920]: E0319 15:30:25.355321   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:30 control-plane-0 kubelet[47920]: E0319 15:30:30.356613   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:35 control-plane-0 kubelet[47920]: E0319 15:30:35.358348   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:40 control-plane-0 kubelet[47920]: E0319 15:30:40.360258   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:45 control-plane-0 kubelet[47920]: E0319 15:30:45.361319   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:50 control-plane-0 kubelet[47920]: E0319 15:30:50.362907   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:30:55 control-plane-0 kubelet[47920]: E0319 15:30:55.364923   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:00 control-plane-0 kubelet[47920]: E0319 15:31:00.365908   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:05 control-plane-0 kubelet[47920]: E0319 15:31:05.367767   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:10 control-plane-0 kubelet[47920]: E0319 15:31:10.368904   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:15 control-plane-0 kubelet[47920]: E0319 15:31:15.370011   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:20 control-plane-0 kubelet[47920]: E0319 15:31:20.371077   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:25 control-plane-0 kubelet[47920]: E0319 15:31:25.372701   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:30 control-plane-0 kubelet[47920]: E0319 15:31:30.373710   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:35 control-plane-0 kubelet[47920]: E0319 15:31:35.375013   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:40 control-plane-0 kubelet[47920]: E0319 15:31:40.376338   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:45 control-plane-0 kubelet[47920]: E0319 15:31:45.378042   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:50 control-plane-0 kubelet[47920]: E0319 15:31:50.379548   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:31:55 control-plane-0 kubelet[47920]: E0319 15:31:55.381122   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:00 control-plane-0 kubelet[47920]: E0319 15:32:00.382776   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:05 control-plane-0 kubelet[47920]: E0319 15:32:05.384270   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:10 control-plane-0 kubelet[47920]: E0319 15:32:10.385739   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:15 control-plane-0 kubelet[47920]: E0319 15:32:15.387182   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:20 control-plane-0 kubelet[47920]: E0319 15:32:20.388083   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:25 control-plane-0 kubelet[47920]: E0319 15:32:25.389737   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:30 control-plane-0 kubelet[47920]: E0319 15:32:30.391356   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:35 control-plane-0 kubelet[47920]: E0319 15:32:35.392648   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:40 control-plane-0 kubelet[47920]: E0319 15:32:40.394474   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:45 control-plane-0 kubelet[47920]: E0319 15:32:45.395902   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:50 control-plane-0 kubelet[47920]: E0319 15:32:50.397043   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:32:55 control-plane-0 kubelet[47920]: E0319 15:32:55.398860   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:00 control-plane-0 kubelet[47920]: E0319 15:33:00.400361   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:05 control-plane-0 kubelet[47920]: E0319 15:33:05.401253   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:10 control-plane-0 kubelet[47920]: E0319 15:33:10.403232   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:15 control-plane-0 kubelet[47920]: E0319 15:33:15.404143   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:20 control-plane-0 kubelet[47920]: E0319 15:33:20.404925   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:25 control-plane-0 kubelet[47920]: E0319 15:33:25.406484   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:30 control-plane-0 kubelet[47920]: E0319 15:33:30.408369   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:35 control-plane-0 kubelet[47920]: E0319 15:33:35.409396   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:40 control-plane-0 kubelet[47920]: E0319 15:33:40.410261   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:45 control-plane-0 kubelet[47920]: E0319 15:33:45.411587   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:50 control-plane-0 kubelet[47920]: E0319 15:33:50.412919   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:33:55 control-plane-0 kubelet[47920]: E0319 15:33:55.415217   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:00 control-plane-0 kubelet[47920]: E0319 15:34:00.416883   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:05 control-plane-0 kubelet[47920]: E0319 15:34:05.417699   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:10 control-plane-0 kubelet[47920]: E0319 15:34:10.418959   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:15 control-plane-0 kubelet[47920]: E0319 15:34:15.420614   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:20 control-plane-0 kubelet[47920]: E0319 15:34:20.421677   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:25 control-plane-0 kubelet[47920]: E0319 15:34:25.422748   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:30 control-plane-0 kubelet[47920]: E0319 15:34:30.423607   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:35 control-plane-0 kubelet[47920]: E0319 15:34:35.424584   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:40 control-plane-0 kubelet[47920]: E0319 15:34:40.426210   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:45 control-plane-0 kubelet[47920]: E0319 15:34:45.427328   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:50 control-plane-0 kubelet[47920]: E0319 15:34:50.429428   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:34:55 control-plane-0 kubelet[47920]: E0319 15:34:55.430295   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:00 control-plane-0 kubelet[47920]: E0319 15:35:00.432317   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:05 control-plane-0 kubelet[47920]: E0319 15:35:05.434154   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:10 control-plane-0 kubelet[47920]: E0319 15:35:10.435400   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:15 control-plane-0 kubelet[47920]: E0319 15:35:15.436441   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:20 control-plane-0 kubelet[47920]: E0319 15:35:20.437927   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:25 control-plane-0 kubelet[47920]: E0319 15:35:25.438769   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:30 control-plane-0 kubelet[47920]: E0319 15:35:30.439838   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:35 control-plane-0 kubelet[47920]: E0319 15:35:35.441110   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:40 control-plane-0 kubelet[47920]: E0319 15:35:40.441870   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:45 control-plane-0 kubelet[47920]: E0319 15:35:45.442848   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:50 control-plane-0 kubelet[47920]: E0319 15:35:50.444229   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:35:55 control-plane-0 kubelet[47920]: E0319 15:35:55.445767   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:00 control-plane-0 kubelet[47920]: E0319 15:36:00.446867   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:05 control-plane-0 kubelet[47920]: E0319 15:36:05.448426   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:10 control-plane-0 kubelet[47920]: E0319 15:36:10.449334   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:15 control-plane-0 kubelet[47920]: E0319 15:36:15.450892   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:20 control-plane-0 kubelet[47920]: E0319 15:36:20.452679   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:25 control-plane-0 kubelet[47920]: E0319 15:36:25.453971   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:30 control-plane-0 kubelet[47920]: E0319 15:36:30.455539   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:35 control-plane-0 kubelet[47920]: E0319 15:36:35.457159   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:40 control-plane-0 kubelet[47920]: E0319 15:36:40.458812   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:45 control-plane-0 kubelet[47920]: E0319 15:36:45.459894   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:50 control-plane-0 kubelet[47920]: E0319 15:36:50.461744   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:36:55 control-plane-0 kubelet[47920]: E0319 15:36:55.463996   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:00 control-plane-0 kubelet[47920]: E0319 15:37:00.464947   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:05 control-plane-0 kubelet[47920]: E0319 15:37:05.466535   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:10 control-plane-0 kubelet[47920]: E0319 15:37:10.467726   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:15 control-plane-0 kubelet[47920]: E0319 15:37:15.469232   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:20 control-plane-0 kubelet[47920]: E0319 15:37:20.470431   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:25 control-plane-0 kubelet[47920]: E0319 15:37:25.471138   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:30 control-plane-0 kubelet[47920]: E0319 15:37:30.472456   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:35 control-plane-0 kubelet[47920]: E0319 15:37:35.473724   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:40 control-plane-0 kubelet[47920]: E0319 15:37:40.475761   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:45 control-plane-0 kubelet[47920]: E0319 15:37:45.478132   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:50 control-plane-0 kubelet[47920]: E0319 15:37:50.479576   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:37:55 control-plane-0 kubelet[47920]: E0319 15:37:55.480971   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:00 control-plane-0 kubelet[47920]: E0319 15:38:00.482657   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:05 control-plane-0 kubelet[47920]: E0319 15:38:05.483915   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:10 control-plane-0 kubelet[47920]: E0319 15:38:10.485518   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:15 control-plane-0 kubelet[47920]: E0319 15:38:15.487189   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:20 control-plane-0 kubelet[47920]: E0319 15:38:20.488053   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:25 control-plane-0 kubelet[47920]: E0319 15:38:25.489739   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:30 control-plane-0 kubelet[47920]: E0319 15:38:30.490927   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:35 control-plane-0 kubelet[47920]: E0319 15:38:35.491663   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:40 control-plane-0 kubelet[47920]: E0319 15:38:40.493143   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:45 control-plane-0 kubelet[47920]: E0319 15:38:45.494192   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:50 control-plane-0 kubelet[47920]: E0319 15:38:50.495501   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:38:55 control-plane-0 kubelet[47920]: E0319 15:38:55.496902   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:00 control-plane-0 kubelet[47920]: E0319 15:39:00.498703   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:05 control-plane-0 kubelet[47920]: E0319 15:39:05.499882   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:10 control-plane-0 kubelet[47920]: E0319 15:39:10.500918   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:15 control-plane-0 kubelet[47920]: E0319 15:39:15.502255   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:20 control-plane-0 kubelet[47920]: E0319 15:39:20.503480   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:25 control-plane-0 kubelet[47920]: E0319 15:39:25.505312   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:30 control-plane-0 kubelet[47920]: E0319 15:39:30.506790   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:35 control-plane-0 kubelet[47920]: E0319 15:39:35.507717   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:40 control-plane-0 kubelet[47920]: E0319 15:39:40.508952   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:45 control-plane-0 kubelet[47920]: E0319 15:39:45.510280   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:50 control-plane-0 kubelet[47920]: E0319 15:39:50.511165   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:39:55 control-plane-0 kubelet[47920]: E0319 15:39:55.511869   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:00 control-plane-0 kubelet[47920]: E0319 15:40:00.513585   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:05 control-plane-0 kubelet[47920]: E0319 15:40:05.514997   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:10 control-plane-0 kubelet[47920]: E0319 15:40:10.517971   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:15 control-plane-0 kubelet[47920]: E0319 15:40:15.519728   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:20 control-plane-0 kubelet[47920]: E0319 15:40:20.521594   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:25 control-plane-0 kubelet[47920]: E0319 15:40:25.522798   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:30 control-plane-0 kubelet[47920]: E0319 15:40:30.524609   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:35 control-plane-0 kubelet[47920]: E0319 15:40:35.525680   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:40 control-plane-0 kubelet[47920]: E0319 15:40:40.526879   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:45 control-plane-0 kubelet[47920]: E0319 15:40:45.527594   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:50 control-plane-0 kubelet[47920]: E0319 15:40:50.529211   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:40:55 control-plane-0 kubelet[47920]: E0319 15:40:55.530380   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:00 control-plane-0 kubelet[47920]: E0319 15:41:00.531787   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:05 control-plane-0 kubelet[47920]: E0319 15:41:05.533382   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:10 control-plane-0 kubelet[47920]: E0319 15:41:10.535012   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:15 control-plane-0 kubelet[47920]: E0319 15:41:15.535812   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:20 control-plane-0 kubelet[47920]: E0319 15:41:20.537212   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:25 control-plane-0 kubelet[47920]: E0319 15:41:25.538753   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:30 control-plane-0 kubelet[47920]: E0319 15:41:30.540471   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:35 control-plane-0 kubelet[47920]: E0319 15:41:35.541916   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:40 control-plane-0 kubelet[47920]: E0319 15:41:40.543393   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:45 control-plane-0 kubelet[47920]: E0319 15:41:45.545396   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:50 control-plane-0 kubelet[47920]: E0319 15:41:50.547194   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:41:55 control-plane-0 kubelet[47920]: E0319 15:41:55.548245   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:00 control-plane-0 kubelet[47920]: E0319 15:42:00.549733   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:05 control-plane-0 kubelet[47920]: E0319 15:42:05.551087   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:10 control-plane-0 kubelet[47920]: E0319 15:42:10.552957   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:15 control-plane-0 kubelet[47920]: E0319 15:42:15.554585   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:20 control-plane-0 kubelet[47920]: E0319 15:42:20.555682   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:25 control-plane-0 kubelet[47920]: E0319 15:42:25.556839   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:30 control-plane-0 kubelet[47920]: E0319 15:42:30.557619   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:35 control-plane-0 kubelet[47920]: E0319 15:42:35.559136   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:40 control-plane-0 kubelet[47920]: E0319 15:42:40.560670   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:45 control-plane-0 kubelet[47920]: E0319 15:42:45.562242   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:50 control-plane-0 kubelet[47920]: E0319 15:42:50.564023   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:42:55 control-plane-0 kubelet[47920]: E0319 15:42:55.565794   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:00 control-plane-0 kubelet[47920]: E0319 15:43:00.566787   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:05 control-plane-0 kubelet[47920]: E0319 15:43:05.568019   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:10 control-plane-0 kubelet[47920]: E0319 15:43:10.569582   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:15 control-plane-0 kubelet[47920]: E0319 15:43:15.570728   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:20 control-plane-0 kubelet[47920]: E0319 15:43:20.571430   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:25 control-plane-0 kubelet[47920]: E0319 15:43:25.572808   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:30 control-plane-0 kubelet[47920]: E0319 15:43:30.573657   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:35 control-plane-0 kubelet[47920]: E0319 15:43:35.575200   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:40 control-plane-0 kubelet[47920]: E0319 15:43:40.576824   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:45 control-plane-0 kubelet[47920]: E0319 15:43:45.578069   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:50 control-plane-0 kubelet[47920]: E0319 15:43:50.579241   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:43:55 control-plane-0 kubelet[47920]: E0319 15:43:55.580681   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:00 control-plane-0 kubelet[47920]: E0319 15:44:00.581927   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:05 control-plane-0 kubelet[47920]: E0319 15:44:05.582895   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:10 control-plane-0 kubelet[47920]: E0319 15:44:10.584739   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:15 control-plane-0 kubelet[47920]: E0319 15:44:15.586411   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:20 control-plane-0 kubelet[47920]: E0319 15:44:20.587245   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:25 control-plane-0 kubelet[47920]: E0319 15:44:25.588592   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:30 control-plane-0 kubelet[47920]: E0319 15:44:30.590035   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:35 control-plane-0 kubelet[47920]: E0319 15:44:35.591284   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:40 control-plane-0 kubelet[47920]: E0319 15:44:40.592354   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:45 control-plane-0 kubelet[47920]: E0319 15:44:45.594121   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:50 control-plane-0 kubelet[47920]: E0319 15:44:50.595200   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:44:55 control-plane-0 kubelet[47920]: E0319 15:44:55.596503   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:00 control-plane-0 kubelet[47920]: E0319 15:45:00.597930   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:05 control-plane-0 kubelet[47920]: E0319 15:45:05.601388   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:10 control-plane-0 kubelet[47920]: E0319 15:45:10.603289   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:15 control-plane-0 kubelet[47920]: E0319 15:45:15.604601   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:20 control-plane-0 kubelet[47920]: E0319 15:45:20.606346   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:25 control-plane-0 kubelet[47920]: E0319 15:45:25.607797   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:30 control-plane-0 kubelet[47920]: E0319 15:45:30.609002   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:35 control-plane-0 kubelet[47920]: E0319 15:45:35.610494   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:40 control-plane-0 kubelet[47920]: E0319 15:45:40.612159   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:45 control-plane-0 kubelet[47920]: E0319 15:45:45.613103   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:50 control-plane-0 kubelet[47920]: E0319 15:45:50.614512   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:45:55 control-plane-0 kubelet[47920]: E0319 15:45:55.616165   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:46:00 control-plane-0 kubelet[47920]: E0319 15:46:00.617301   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:46:05 control-plane-0 kubelet[47920]: E0319 15:46:05.618957   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:46:10 control-plane-0 kubelet[47920]: E0319 15:46:10.619837   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:46:15 control-plane-0 kubelet[47920]: E0319 15:46:15.621369   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:46:20 control-plane-0 kubelet[47920]: E0319 15:46:20.622027   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:46:25 control-plane-0 kubelet[47920]: E0319 15:46:25.623444   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:46:30 control-plane-0 kubelet[47920]: E0319 15:46:30.624773   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:46:35 control-plane-0 kubelet[47920]: E0319 15:46:35.625324   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:46:40 control-plane-0 kubelet[47920]: E0319 15:46:40.626477   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 15:46:45 control-plane-0 kubelet[47920]: E0319 15:46:45.628262   47920 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
ubuntu@ip-172-31-31-202:~$ kubectl get pods -n kube-flannel -o wide
NAME                    READY   STATUS    RESTARTS   AGE   IP              NODE              NOMINATED NODE   READINESS GATES
kube-flannel-ds-pld9f   1/1     Running   0          34m   172.31.31.202   control-plane-0   <none>           <none>
ubuntu@ip-172-31-31-202:~$ kubectl delete pod -n kube-flannel --all
pod "kube-flannel-ds-pld9f" deleted
ubuntu@ip-172-31-31-202:~$ sudo systemctl restart kubelet; sudo systemctl restart containerd
ubuntu@ip-172-31-31-202:~$ ls -al
total 36
drwxr-x--- 5 ubuntu ubuntu 4096 Mar 19 15:02 .
drwxr-xr-x 3 root   root   4096 Mar 19 13:04 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 19 13:05 .cache
drwxr-xr-x 2 root   root   4096 Mar 19 13:07 .kube
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 19 13:04 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 19 13:05 .sudo_as_admin_successful
-rw------- 1 ubuntu ubuntu 1532 Mar 19 14:38 .viminfo
ubuntu@ip-172-31-31-202:~$ rm -rf .kube/
rm: cannot remove '.kube/config': Permission denied
ubuntu@ip-172-31-31-202:~$ sudo rm -rf .kube/
ubuntu@ip-172-31-31-202:~$ mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
ubuntu@ip-172-31-31-202:~$ kubectl get nodes
NAME              STATUS   ROLES           AGE   VERSION
control-plane-0   Ready    control-plane   48m   v1.32.3
ubuntu@ip-172-31-31-202:~$ kubectl get po -A
NAMESPACE      NAME                                      READY   STATUS    RESTARTS      AGE
kube-flannel   kube-flannel-ds-9wr82                     1/1     Running   0             4m1s
kube-system    coredns-668d6bf9bc-2k2tw                  1/1     Running   0             40m
kube-system    coredns-668d6bf9bc-qssn8                  1/1     Running   0             40m
kube-system    etcd-control-plane-0                      1/1     Running   1 (49m ago)   40m
kube-system    kube-apiserver-control-plane-0            1/1     Running   1 (49m ago)   40m
kube-system    kube-controller-manager-control-plane-0   1/1     Running   0             40m
kube-system    kube-proxy-zhlh2                          1/1     Running   0             40m
kube-system    kube-scheduler-control-plane-0            1/1     Running   1 (49m ago)   40m
ubuntu@ip-172-31-31-202:~$ ip link show cni0
9: cni0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UP mode DEFAULT group default qlen 1000
    link/ether 6a:86:37:ba:66:14 brd ff:ff:ff:ff:ff:ff
ubuntu@ip-172-31-31-202:~$ ifconfig
cni0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.1  netmask 255.255.255.0  broadcast 10.244.0.255
        inet6 fe80::6886:37ff:feba:6614  prefixlen 64  scopeid 0x20<link>
        ether 6a:86:37:ba:66:14  txqueuelen 1000  (Ethernet)
        RX packets 636  bytes 54527 (54.5 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 645  bytes 91477 (91.4 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

enX0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001
        inet 172.31.31.202  netmask 255.255.240.0  broadcast 172.31.31.255
        inet6 fe80::8ff:f9ff:fe6a:dd0f  prefixlen 64  scopeid 0x20<link>
        ether 0a:ff:f9:6a:dd:0f  txqueuelen 1000  (Ethernet)
        RX packets 505043  bytes 814922010 (814.9 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 94597  bytes 9039831 (9.0 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

flannel.1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.0  netmask 255.255.255.255  broadcast 0.0.0.0
        inet6 fe80::1c41:3bff:fe8a:d8b6  prefixlen 64  scopeid 0x20<link>
        ether 1e:41:3b:8a:d8:b6  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 15 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 1937518  bytes 406038312 (406.0 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 1937518  bytes 406038312 (406.0 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

tunl0: flags=193<UP,RUNNING,NOARP>  mtu 8939
        inet 192.168.95.0  netmask 255.255.255.255
        tunnel   txqueuelen 1000  (IPIP Tunnel)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

vethbcdf3592: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet6 fe80::8c74:26ff:fe0d:1f61  prefixlen 64  scopeid 0x20<link>
        ether 1a:34:93:cc:4c:a2  txqueuelen 1000  (Ethernet)
        RX packets 327  bytes 32347 (32.3 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 352  bytes 47204 (47.2 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

vethc6423463: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet6 fe80::605c:baff:fe2b:658e  prefixlen 64  scopeid 0x20<link>
        ether aa:05:e5:09:d2:f3  txqueuelen 1000  (Ethernet)
        RX packets 311  bytes 31168 (31.1 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 351  bytes 48789 (48.7 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ubuntu@ip-172-31-31-202:~$ 
Broadcast message from root@ip-172-31-31-202 (Wed 2025-03-19 16:02:12 UTC):

The system will power off now!

Connection to ec2-52-203-237-18.compute-1.amazonaws.com closed by remote host.
Connection to ec2-52-203-237-18.compute-1.amazonaws.com closed.
ibtisam@ibtisam-iq:~$ rm -rf silverinit.pem 
ibtisam@ibtisam-iq:~$ chmod 400 "silverinit.pem"
ibtisam@ibtisam-iq:~$ ssh -i "silverinit.pem" ubuntu@ec2-54-90-128-249.compute-1.amazonaws.com
The authenticity of host 'ec2-54-90-128-249.compute-1.amazonaws.com (54.90.128.249)' can't be established.
ED25519 key fingerprint is SHA256:24sNlJyiqx/VRt9oYW/0DhLWHVngPK2qV0x4aZ1ZoiE.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'ec2-54-90-128-249.compute-1.amazonaws.com' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04.1 LTS (GNU/Linux 6.8.0-1021-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Wed Mar 19 16:17:52 UTC 2025

  System load:  0.49              Processes:             120
  Usage of /:   9.1% of 18.33GB   Users logged in:       0
  Memory usage: 5%                IPv4 address for enX0: 172.31.31.153
  Swap usage:   0%

Expanded Security Maintenance for Applications is not enabled.

0 updates can be applied immediately.

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


The list of available updates is more than a week old.
To check for new updates run: sudo apt update


The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

ubuntu@ip-172-31-31-153:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
144 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: ip-172-31-31-153


🔄 Change hostname? Enter new name (or press Enter to keep current): control-plane-123

🖥️ Updating hostname to 'control-plane-123'...

✅ Hostname updated successfully.
========================================
📌 System Information
========================================
🔹 Hostname       : control-plane-123
🔹 Private IP     : 172.31.31.153
🔹 Public IP      : 54.90.128.249
🔹 MAC Address    : 0a:ff:c2:0c:b6:5f
🔹 Network        : 127.0.0.1/8,172.31.31.153/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.4G/23G
🔹 CPU Load       :  0.54, 0.25, 0.10
🔹 UUID           : ec24ae40f0e290b83e2de0f4685ff707
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet set on hold.
kubeadm set on hold.
kubectl set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: downloading    |--------------------------------------|    0.0 B/9.0 KiB 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: downloading    |--------------------------------------|    0.0 B/1022.0 B 
elapsed: 0.2 s                                                                    total:  9.0 Ki (44.8 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    downloading    |--------------------------------------|    0.0 B/3.5 MiB 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.3 s                                                                    total:  10.6 K (35.0 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.4 s                                                                    total:  10.6 K (26.4 KiB/s)                                      
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 168.062899ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
✅ No conflicting resources found. Proceeding...

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

 ✨ k8s-cleanup.sh script is completed!

✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🚀 Running kubeadm-init.sh script...

🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0319 16:20:37.689640    5981 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [control-plane-123 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.31.153]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [control-plane-123 localhost] and IPs [172.31.31.153 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [control-plane-123 localhost] and IPs [172.31.31.153 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 1.001204053s
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.501418232s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
24b06bfb301a5066cc93b91534d49f5674b586c9b6ab0190d197eb3821245d36
[mark-control-plane] Marking the node control-plane-123 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node control-plane-123 as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: 5c13u7.saud3hpmrbdw0dwx
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.31.153:6443 --token 5c13u7.saud3hpmrbdw0dwx \
	--discovery-token-ca-cert-hash sha256:8e1b341a332ed005994483de1ef7d6b1b239ad159523661a50bd8caf83c24b30 \
	--control-plane --certificate-key 24b06bfb301a5066cc93b91534d49f5674b586c9b6ab0190d197eb3821245d36

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.31.153:6443 --token 5c13u7.saud3hpmrbdw0dwx \
	--discovery-token-ca-cert-hash sha256:8e1b341a332ed005994483de1ef7d6b1b239ad159523661a50bd8caf83c24b30 

🎉 kubeadm-init.sh script is completed!

📌 Please wait, the cluster is stabilizing... Good things take time! ⏳✨

🌱 **Growth takes time, but oh, the view from the top is worth it!** 🚀

🕰️ **Good things come to those who wait…** and to those who run ‘kubectl get pods’! 😆

🕰️ **Good things come to those who wait…** and to those who run ‘kubectl get pods’! 😆

😎 **Be like Kubernetes—always self-healing, always scaling!** 🔄

🏗️ **Every strong system starts with a stable foundation. Kubernetes is no different!** 🏛️

🌱 **Growth takes time, but oh, the view from the top is worth it!** 🚀

😎 **Be like Kubernetes—always self-healing, always scaling!** 🔄

🚀 **Your cluster is like a rocket—fueling up for launch!** Hold tight! 🛸

💡 **Patience is not just waiting, but keeping a great attitude while waiting!** 😃

😎 **Be like Kubernetes—always self-healing, always scaling!** 🔄

✅ The cluster should now be stable! 🎯 Time to deploy greatness! 🚀💪
✅ Successfully executed kubeadm-init.sh.


🚀 Running kube-config-setup.sh script...

🔍 ~/.kube/config not found. Setting it up...

✅ ~/.kube/config is set.
-rw------- 1 ubuntu ubuntu 5657 Mar 19 16:25 /home/ubuntu/.kube/config

📌 KUBECONFIG set to /home/ubuntu/.kube/config

🔍 Verifying kubectl access...

Kubernetes control plane is running at https://172.31.31.153:6443
CoreDNS is running at https://172.31.31.153:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.

✅ kubectl configured successfully.

🎉 kube-config-setup.sh script is completed!
✅ Successfully executed kube-config-setup.sh.


🚀 Running network-plugin-setup.sh script...

🚀 Deploying Calico network plugin...
error: error validating "https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml": error validating data: failed to download openapi: Get "http://localhost:8080/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false

❌ Failed to apply Calico CNI. Exiting...

❌ Failed to execute network-plugin-setup.sh. Exiting...

ubuntu@ip-172-31-31-153:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.31.153:6443
CoreDNS is running at https://172.31.31.153:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-31-153:~$ kubectl get nodes
NAME                STATUS     ROLES           AGE    VERSION
control-plane-123   NotReady   control-plane   7m7s   v1.32.3
ubuntu@ip-172-31-31-153:~$ kubectl get pods -A
NAMESPACE     NAME                                        READY   STATUS    RESTARTS   AGE
kube-system   coredns-668d6bf9bc-2ctgv                    0/1     Pending   0          7m14s
kube-system   coredns-668d6bf9bc-gbqfs                    0/1     Pending   0          7m14s
kube-system   etcd-control-plane-123                      1/1     Running   0          7m20s
kube-system   kube-apiserver-control-plane-123            1/1     Running   0          7m20s
kube-system   kube-controller-manager-control-plane-123   1/1     Running   0          7m20s
kube-system   kube-proxy-bt7pw                            1/1     Running   0          7m14s
kube-system   kube-scheduler-control-plane-123            1/1     Running   0          7m20s
ubuntu@ip-172-31-31-153:~$ kubectl get componentstatuses
Warning: v1 ComponentStatus is deprecated in v1.19+
NAME                 STATUS    MESSAGE   ERROR
controller-manager   Healthy   ok        
scheduler            Healthy   ok        
etcd-0               Healthy   ok        
ubuntu@ip-172-31-31-153:~$ kubectl config view --minify
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://172.31.31.153:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: DATA+OMITTED
    client-key-data: DATA+OMITTED
ubuntu@ip-172-31-31-153:~$ kubectl get nodes
NAME                STATUS     ROLES           AGE   VERSION
control-plane-123   NotReady   control-plane   12m   v1.32.3
ubuntu@ip-172-31-31-153:~$ kubectl describe node control-plane-123
Name:               control-plane-123
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=control-plane-123
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 16:20:45 +0000
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
                    node.kubernetes.io/not-ready:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  control-plane-123
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 16:34:15 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Wed, 19 Mar 2025 16:31:01 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Wed, 19 Mar 2025 16:31:01 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Wed, 19 Mar 2025 16:31:01 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            False   Wed, 19 Mar 2025 16:31:01 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.31.153
  Hostname:    control-plane-123
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006100Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903700Ki
  pods:               110
System Info:
  Machine ID:                 ec24ae40f0e290b83e2de0f4685ff707
  System UUID:                ec24ae40-f0e2-90b8-3e2d-e0f4685ff707
  Boot ID:                    316702be-76ed-4608-8a59-61199e58ce54
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (5 in total)
  Namespace                   Name                                         CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                         ------------  ----------  ---------------  -------------  ---
  kube-system                 etcd-control-plane-123                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         13m
  kube-system                 kube-apiserver-control-plane-123             250m (12%)    0 (0%)      0 (0%)           0 (0%)         13m
  kube-system                 kube-controller-manager-control-plane-123    200m (10%)    0 (0%)      0 (0%)           0 (0%)         13m
  kube-system                 kube-proxy-bt7pw                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         13m
  kube-system                 kube-scheduler-control-plane-123             100m (5%)     0 (0%)      0 (0%)           0 (0%)         13m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                650m (32%)  0 (0%)
  memory             100Mi (2%)  0 (0%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type    Reason                   Age   From             Message
  ----    ------                   ----  ----             -------
  Normal  Starting                 13m   kube-proxy       
  Normal  Starting                 13m   kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  13m   kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  13m   kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    13m   kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     13m   kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
  Normal  RegisteredNode           13m   node-controller  Node control-plane-123 event: Registered Node control-plane-123 in Controller
ubuntu@ip-172-31-31-153:~$ echo $KUBECONFIG

ubuntu@ip-172-31-31-153:~$ cat ~/.kube/config
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJVnBZNmh1TnkwN2t3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1Ua3hOakUxTXpkYUZ3MHpOVEF6TVRjeE5qSXdNemRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUROaXZqSHdYMS9pR2VkRFBqWGdFd01ScisvSVFUTzVjeDJMUE9zTUpzUjBEL1dWOS9tWGloc25DYTIKVW1CMXZUQVJndmZxYU1QOFlHY2t3Sk11YVY1SXlnYU00b0c0ajZhb08wMlV3Nkk0L0ErZFpSMnpLWjd0dVd2MgpxUFpxUUgrYVBITVpGN2dZQzZaK0E4QldtMnFld0FkeFJNODFZZzBzbzBVeFJjTlFWWm5YM0RuaVNYd3R1RFBNCi9NdW1xZnFGakNmY3Y4ZVZpcmdjbVhiSC9vby9ob1RuaDJnMTB4aHBac0RncUQ2RXA3STJqZzVwWHdvNHFZbTkKOEdxZm0yWjdRQVQxSU1vTCtsMko0MzRLa3FyS3pjTlhBZWVKWmtZRHIyMTFuVXU1aFFxbmUvL3Mrb2tWdXhudgpBb2x6U1BJQ0VReGdOWVZFRWlhZXJXbTJnTDcvQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTN1pESFZMQTI5YW0rYlZxdHFoVWozYS8ySjVqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2VsYkNwTVVZMwpDT1YvM0owMUptVUxjaE0vREhaTk5URWlXMG5UQ2RZa0MybHZvS09tdld0YzhLdWhtbmJyN2UyWnNpTlZ1K2FYCklyTE1sU0J0a3hZT2JSVzVEZ3U4N1F0eU5pM1BlMmwyMkIybm5IZGMwODF1Q3ZoSXA5N2JkMUtKS0VEdHhYcSsKL2JvbCtiWkZySGhYZ2RBMTFvU2JoR21rSHJ1c291ek8rMENHZGsrVVBQSHFLS3VTamlCdGp6T25yMGt0Z1ExeQpNSWYydFFyM2huSE4vd2lOeTlkU0xiVm1yZGkwekErcjRaUWpaL0xrV0VzZkI2ZjhRUGp4QWVNSzU1WHRNdlpJCncybGN2eTNjTXNGQnlSbXFhVXpJeERHS1RSYmFEVnNWY2dzNXdGNnZjS1pRRjZoZWhnRlNDajRtMlQ1M1MrTlAKcUtKYlFPMm80SDNmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://172.31.31.153:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJRW9OU0Zhb0VWMmd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1Ua3hOakUxTXpkYUZ3MHlOakF6TVRreE5qSXdNemRhTUR3eApIekFkQmdOVkJBb1RGbXQxWW1WaFpHMDZZMngxYzNSbGNpMWhaRzFwYm5NeEdUQVhCZ05WQkFNVEVHdDFZbVZ5CmJtVjBaWE10WVdSdGFXNHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDVi95a1UKY001MmxXWmdvNXlyUWlQZjdOSDJsVXVSNTVQYWN3cTVYM3FVSVlGV2c3TTBOb1plUlJVNVJvTkhaMVp1MmkyVgpTQVdMTGJkZHlFMjVpZEgrclBqZ2FxVHY5NG1sbHIzZUIzRkxjQnZxYnpiTWxjT2tJTkpGZHl4SFUzK0NzYUVFCmZqQVVzbFFUN3hYeERYMkxyMlhtcFJPNDR1bWd1WFRwTy9yTEZlTm9rYUZ4TTYvdG0rMTFVSlpUSHI2UHcwcy8Kc05DaGlQTlppNnRnTUZuZFZITmRHVllveU5GbWFPaUVoaWFETG8xdXFMMWtXWDgrbGVGbmFFL2xtaS9OOWFNSwpWVHpDQ0NMSkgxejhLTjdyRG1sY0JDY2lUMFpPUktEWXdwcTY3RzZIN1hwRzNlUkdhWnVlN2Z1dXZIaUd5aDhVCjlIbjZxb3VKMzhoTnVMZ2hBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUsKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkx0a01kVXNEYjFxYjV0VwpxMnFGU1Bkci9Zbm1NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJzQ3gzSzQwclZzcnBVMzdaL3EwK0VTdDNVCmdCd2IwRUtlNjRnZHdUVXhNdWVaMUIyeFlqRVl1UXZYZ1FnL0hKTkpyU2dwdXlNMUVWOEw4NW9VVTMxb3JIOTIKNVFKRHlocHZ2SDdCWVlwdzVHc3hvaWpDN3pUeXVGZ3g5OHdCSnljbkRVQkhkbk9oWWxoMDhxWW53OFFoLzdhRgpzYTV6NDhDNk9Ucnh3WmVLMkZsOTAxbERlcHF3Rk9mNytKVGZTdVRWaXhRRjdtNE90QlJ2czl1NjRYTzVJdlFGCmhNM3ZTeWErRGVLamp1R0tzVkF1aWQrNXlDdHlMMXVUN2VPbjlQOHJvWFJ4ZlBuaktoQ1hZeE5mOU5jbVlmbWMKOTB6OEROQytrZ2t6QisyaXdDeVNRNExZdXRFbHEwWUMvTy9seExUQ3ZnOENEM2pSbUZjcHN4NzliQXBwCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbGY4cEZIRE9kcFZtWUtPY3EwSWozK3pSOXBWTGtlZVQybk1LdVY5NmxDR0JWb096Ck5EYUdYa1VWT1VhRFIyZFdidG90bFVnRml5MjNYY2hOdVluUi9xejQ0R3FrNy9lSnBaYTkzZ2R4UzNBYjZtODIKekpYRHBDRFNSWGNzUjFOL2dyR2hCSDR3RkxKVUUrOFY4UTE5aTY5bDVxVVR1T0xwb0xsMDZUdjZ5eFhqYUpHaApjVE92N1p2dGRWQ1dVeDYrajhOTFA3RFFvWWp6V1l1cllEQlozVlJ6WFJsV0tNalJabWpvaElZbWd5Nk5icWk5ClpGbC9QcFhoWjJoUDVab3Z6ZldqQ2xVOHdnZ2l5UjljL0NqZTZ3NXBYQVFuSWs5R1RrU2cyTUthdXV4dWgrMTYKUnQza1JtbWJudTM3cnJ4NGhzb2ZGUFI1K3FxTGlkL0lUYmk0SVFJREFRQUJBb0lCQVFDRHJxbWkzMUh5ZTBDUQpzTEozQ3k2eGhKZmowYmV4Vk12UnFOT09ZRXNkeHJoa2VtU1YveFJCcUlaMGJQb05jcVJIMTFUVFRKSkpXSTQxClVBY2tUdUZEb3hrdTg1RHZkcktwNDhlMkozU0lGTmo5SER2UXFkNUN0ZW5Ed0Zib0cxN0RIeXhMNUhoVGd5Y2IKQlBlUFV4ZVh6Ums1dmt5dE1OQ0lJS2lKcGZXTDJjaFlyTVRJVWxuaHFBRWhWZG85UXlsNHdrdVJTMGtGbFJWVwpuRmh5YUJha05oRHJLNjQzcmhwUnpNSjdTREZQNjd3N3VrMFJTbUxNbDBETEI2MEdsQUgwam9iUFN4Z0xxRVFuCnZ2Z2J2VUJ6U3dkK1F1WFhwR2NUTEZqMDk3bTJ1MWVyQlZMR2pibHo5bHAzQVFQcStRUnFweGNGQ3FId2FOVHMKN2xKQU5xdHRBb0dCQU1kTEN0djNqZmFpdStycXdFNUh2b1FiaVVvNHk1S1k4NHRZZjlQRkY3R2hxc2tRLzlMNApGUVMzUHo5c3QxSnphaGNPS1lkb1l5N3cxNDI5RGJ4Mkd4MXExM1c3ZU9wNFlzaG54Z1lsVFYwN1dvV1MvZTZjCkNGemVCMFJ5NExiNHdrdWdUNVFUT2dOUkVSVDFpUWROZ2JWRytJTEFXSXg0UUxhSVBiUSt4SEliQW9HQkFNQ3QKUWN4Vit0ZFc5ZFhqclhWZHZodloxdzRyQkZNclNOY1lZcGEzU0FNNlRYSHRDZUpidHNJcFk2TEVBemorSmJmWQpKU1p3aW1RNVd4UnNoc0pFL0d5YlFsUEhaKzVKZS8zY3kxM0cvVEowN0ZHZ3Z2bTZFREJzTXB4RjZoVWk5NGZpClBldXpxWkx6cFovY3BDTXFmaFRVNndweklrd1p0YWlLR3lTZkU4SnpBb0dBVXh5Tmk4eUNqTCt6QkxZZnVzV2EKd3pkRW13cHlnMUY4QjduQm5VeE5wRXVha0wyaElwZEpGSzFqR0EwN3FvdnRTMjRoalpIUUF5eDNpR20yUjhrdApaNmc5OEtCZFBkTTB4d1RZQllvYTZHMnZRNU5ZaU9EVGIvODhJcVNSNkZ4M2t0aHBONFNKSmdieHk3N1dCWkNpCkxqcEp1eVdDQ0JyQ1NoMHBObmtTcmM4Q2dZRUFsSzRkdEJ3MDhLNitEVXNmc3cyZmdjWmIyU2NBczEwWFhFUUkKNzl5R3lWYllKQzJTRHdaT3hRMURRWHFZTWdhTC9JM2lQUU5qQjJ2ckNKdW1jWXJpYnJ4d05rNE51U2NqY3daSwpPQmN4a3huK3NnNmt6L2Z3UGkxLzhHOVM3dlNJcG1iQytYc3VRNk9ZRHdBbitLcjFtQVdsU2U4R2JFcjZqdy9qCldpTVhFRmtDZ1lFQXArWkRvRm1ZSjYwRGtXUURxcllDOWdqcVlsNjZ4Nk5nZm5PbjBQMXpvV3p1S29MZHZ6UkUKd0ZRTnl2UFJtMkFEd1JFWVd6RUFmRHF5alNHVWkvMTJjR1VDVnROditMQmpOU3U4bFRxczJvaUJ2NzcraGluUwpWb2RNNHdBL0ZuQVE3bFFud0ZUb21lb2NKL1FwR2hZK3FZb3lhQmpDWHlsVnpITlNoRnRTdVRJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
ubuntu@ip-172-31-31-153:~$ kubectl config use-context kubernetes-admin@kubernetes
error: open /home/ubuntu/.kube/config.lock: permission denied
ubuntu@ip-172-31-31-153:~$ sudo kubectl config use-context kubernetes-admin@kubernetes
error: no context exists with the name: "kubernetes-admin@kubernetes"
ubuntu@ip-172-31-31-153:~$ kubectl get po -A
NAMESPACE     NAME                                        READY   STATUS    RESTARTS   AGE
kube-system   coredns-668d6bf9bc-2ctgv                    0/1     Pending   0          22m
kube-system   coredns-668d6bf9bc-gbqfs                    0/1     Pending   0          22m
kube-system   etcd-control-plane-123                      1/1     Running   0          22m
kube-system   kube-apiserver-control-plane-123            1/1     Running   0          22m
kube-system   kube-controller-manager-control-plane-123   1/1     Running   0          22m
kube-system   kube-proxy-bt7pw                            1/1     Running   0          22m
kube-system   kube-scheduler-control-plane-123            1/1     Running   0          22m
ubuntu@ip-172-31-31-153:~$ kubectl get nodes -o wide
NAME                STATUS     ROLES           AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
control-plane-123   NotReady   control-plane   23m   v1.32.3   172.31.31.153   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@ip-172-31-31-153:~$ kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-31-153:~$ kubectl get po -A
NAMESPACE      NAME                                        READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-59x4c                       1/1     Running   0          12s
kube-system    coredns-668d6bf9bc-2ctgv                    0/1     Pending   0          23m
kube-system    coredns-668d6bf9bc-gbqfs                    0/1     Pending   0          23m
kube-system    etcd-control-plane-123                      1/1     Running   0          23m
kube-system    kube-apiserver-control-plane-123            1/1     Running   0          23m
kube-system    kube-controller-manager-control-plane-123   1/1     Running   0          23m
kube-system    kube-proxy-bt7pw                            1/1     Running   0          23m
kube-system    kube-scheduler-control-plane-123            1/1     Running   0          23m
ubuntu@ip-172-31-31-153:~$ kubectl get po -A
NAMESPACE      NAME                                        READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-59x4c                       1/1     Running   0          55s
kube-system    coredns-668d6bf9bc-2ctgv                    0/1     Pending   0          24m
kube-system    coredns-668d6bf9bc-gbqfs                    0/1     Pending   0          24m
kube-system    etcd-control-plane-123                      1/1     Running   0          24m
kube-system    kube-apiserver-control-plane-123            1/1     Running   0          24m
kube-system    kube-controller-manager-control-plane-123   1/1     Running   0          24m
kube-system    kube-proxy-bt7pw                            1/1     Running   0          24m
kube-system    kube-scheduler-control-plane-123            1/1     Running   0          24m
ubuntu@ip-172-31-31-153:~$ kubectl get nodes
NAME                STATUS     ROLES           AGE   VERSION
control-plane-123   NotReady   control-plane   24m   v1.32.3
ubuntu@ip-172-31-31-153:~$ kubectl describe po coredns-668d6bf9bc-2ctgv
Error from server (NotFound): pods "coredns-668d6bf9bc-2ctgv" not found
ubuntu@ip-172-31-31-153:~$ kubectl describe po coredns-668d6bf9bc-2ctgv -n kube-system
Name:                 coredns-668d6bf9bc-2ctgv
Namespace:            kube-system
Priority:             2000000000
Priority Class Name:  system-cluster-critical
Service Account:      coredns
Node:                 <none>
Labels:               k8s-app=kube-dns
                      pod-template-hash=668d6bf9bc
Annotations:          <none>
Status:               Pending
IP:                   
IPs:                  <none>
Controlled By:        ReplicaSet/coredns-668d6bf9bc
Containers:
  coredns:
    Image:       registry.k8s.io/coredns/coredns:v1.11.3
    Ports:       53/UDP, 53/TCP, 9153/TCP
    Host Ports:  0/UDP, 0/TCP, 0/TCP
    Args:
      -conf
      /etc/coredns/Corefile
    Limits:
      memory:  170Mi
    Requests:
      cpu:        100m
      memory:     70Mi
    Liveness:     http-get http://:8080/health delay=60s timeout=5s period=10s #success=1 #failure=5
    Readiness:    http-get http://:8181/ready delay=0s timeout=1s period=10s #success=1 #failure=3
    Environment:  <none>
    Mounts:
      /etc/coredns from config-volume (ro)
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-xzmkh (ro)
Conditions:
  Type           Status
  PodScheduled   False 
Volumes:
  config-volume:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      coredns
    Optional:  false
  kube-api-access-xzmkh:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   Burstable
Node-Selectors:              kubernetes.io/os=linux
Tolerations:                 CriticalAddonsOnly op=Exists
                             node-role.kubernetes.io/control-plane:NoSchedule
                             node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason            Age                  From               Message
  ----     ------            ----                 ----               -------
  Warning  FailedScheduling  4m54s (x5 over 25m)  default-scheduler  0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.
ubuntu@ip-172-31-31-153:~$ kubectl describe node control-plane-123
Name:               control-plane-123
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=control-plane-123
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        flannel.alpha.coreos.com/backend-data: {"VNI":1,"VtepMAC":"f6:cd:0d:de:86:1a"}
                    flannel.alpha.coreos.com/backend-type: vxlan
                    flannel.alpha.coreos.com/kube-subnet-manager: true
                    flannel.alpha.coreos.com/public-ip: 172.31.31.153
                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 16:20:45 +0000
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
                    node.kubernetes.io/not-ready:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  control-plane-123
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 16:47:31 +0000
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 16:44:10 +0000   Wed, 19 Mar 2025 16:44:10 +0000   FlannelIsUp                  Flannel is running on this node
  MemoryPressure       False   Wed, 19 Mar 2025 16:44:28 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 16:44:28 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 16:44:28 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                False   Wed, 19 Mar 2025 16:44:28 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.31.153
  Hostname:    control-plane-123
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006100Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903700Ki
  pods:               110
System Info:
  Machine ID:                 ec24ae40f0e290b83e2de0f4685ff707
  System UUID:                ec24ae40-f0e2-90b8-3e2d-e0f4685ff707
  Boot ID:                    316702be-76ed-4608-8a59-61199e58ce54
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (6 in total)
  Namespace                   Name                                         CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                         ------------  ----------  ---------------  -------------  ---
  kube-flannel                kube-flannel-ds-59x4c                        100m (5%)     0 (0%)      50Mi (1%)        0 (0%)         3m29s
  kube-system                 etcd-control-plane-123                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         26m
  kube-system                 kube-apiserver-control-plane-123             250m (12%)    0 (0%)      0 (0%)           0 (0%)         26m
  kube-system                 kube-controller-manager-control-plane-123    200m (10%)    0 (0%)      0 (0%)           0 (0%)         26m
  kube-system                 kube-proxy-bt7pw                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         26m
  kube-system                 kube-scheduler-control-plane-123             100m (5%)     0 (0%)      0 (0%)           0 (0%)         26m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (37%)  0 (0%)
  memory             150Mi (3%)  0 (0%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type    Reason                   Age   From             Message
  ----    ------                   ----  ----             -------
  Normal  Starting                 26m   kube-proxy       
  Normal  Starting                 26m   kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  26m   kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  26m   kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    26m   kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     26m   kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
  Normal  RegisteredNode           26m   node-controller  Node control-plane-123 event: Registered Node control-plane-123 in Controller
ubuntu@ip-172-31-31-153:~$ ls -l /etc/cni/net.d/
total 4
-rw-r--r-- 1 root root 292 Mar 19 16:44 10-flannel.conflist
ubuntu@ip-172-31-31-153:~$ kubectl get pods -n kube-flannel
NAME                    READY   STATUS    RESTARTS   AGE
kube-flannel-ds-59x4c   1/1     Running   0          4m39s
ubuntu@ip-172-31-31-153:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
W0319 16:44:10.308119       1 main.go:557] no subnet found for key: FLANNEL_IPV6_SUBNET in file: /run/flannel/subnet.env
I0319 16:44:10.308126       1 iptables.go:115] Current network or subnet (10.244.0.0/16, 10.244.0.0/24) is not equal to previous one (0.0.0.0/0, 0.0.0.0/0), trying to recycle old iptables rules
I0319 16:44:10.324650       1 iptables.go:125] Setting up masking rules
I0319 16:44:10.328175       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 16:44:10.329796       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 16:44:10.329811       1 main.go:416] Running backend.
I0319 16:44:10.346500       1 vxlan_network.go:65] watching for new subnet leases
I0319 16:44:10.347331       1 main.go:437] Waiting for all goroutines to exit
I0319 16:44:10.349694       1 iptables.go:372] bootstrap done
I0319 16:44:10.359867       1 iptables.go:372] bootstrap done
ubuntu@ip-172-31-31-153:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-153:~$ ifconfig
enX0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001
        inet 172.31.31.153  netmask 255.255.240.0  broadcast 172.31.31.255
        inet6 fe80::8ff:c2ff:fe0c:b65f  prefixlen 64  scopeid 0x20<link>
        ether 0a:ff:c2:0c:b6:5f  txqueuelen 1000  (Ethernet)
        RX packets 384790  bytes 552728477 (552.7 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 51474  bytes 4056541 (4.0 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

flannel.1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.0  netmask 255.255.255.255  broadcast 0.0.0.0
        inet6 fe80::f4cd:dff:fede:861a  prefixlen 64  scopeid 0x20<link>
        ether f6:cd:0d:de:86:1a  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 12 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 317147  bytes 62928714 (62.9 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 317147  bytes 62928714 (62.9 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ubuntu@ip-172-31-31-153:~$ kubectl rollout restart daemonset/kube-flannel-ds -n kube-flannel
daemonset.apps/kube-flannel-ds restarted
ubuntu@ip-172-31-31-153:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-153:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-153:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@ip-172-31-31-153:~$ sudo systemctl restart containerd
sudo systemctl restart kubelet
\
> 
ubuntu@ip-172-31-31-153:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-31-153:~$ sudo systemctl restart containerd
ubuntu@ip-172-31-31-153:~$ ip link show cni0
4: cni0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UP mode DEFAULT group default qlen 1000
    link/ether 06:5e:37:40:9e:53 brd ff:ff:ff:ff:ff:ff
ubuntu@ip-172-31-31-153:~$ ifconfig
cni0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.1  netmask 255.255.255.0  broadcast 10.244.0.255
        inet6 fe80::45e:37ff:fe40:9e53  prefixlen 64  scopeid 0x20<link>
        ether 06:5e:37:40:9e:53  txqueuelen 1000  (Ethernet)
        RX packets 555  bytes 47809 (47.8 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 554  bytes 91454 (91.4 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

enX0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001
        inet 172.31.31.153  netmask 255.255.240.0  broadcast 172.31.31.255
        inet6 fe80::8ff:c2ff:fe0c:b65f  prefixlen 64  scopeid 0x20<link>
        ether 0a:ff:c2:0c:b6:5f  txqueuelen 1000  (Ethernet)
        RX packets 387827  bytes 552997061 (552.9 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 54356  bytes 4356123 (4.3 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

flannel.1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.0  netmask 255.255.255.255  broadcast 0.0.0.0
        inet6 fe80::f4cd:dff:fede:861a  prefixlen 64  scopeid 0x20<link>
        ether f6:cd:0d:de:86:1a  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 13 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 373420  bytes 77398582 (77.3 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 373420  bytes 77398582 (77.3 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

veth094a925e: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet6 fe80::8407:b4ff:fe28:63a7  prefixlen 64  scopeid 0x20<link>
        ether 32:64:29:22:a3:4b  txqueuelen 1000  (Ethernet)
        RX packets 279  bytes 27907 (27.9 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 301  bytes 47636 (47.6 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

vethbf05c8c7: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet6 fe80::84bd:2eff:fe1f:21a6  prefixlen 64  scopeid 0x20<link>
        ether 9e:e3:8d:e5:26:80  txqueuelen 1000  (Ethernet)
        RX packets 278  bytes 27756 (27.7 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 307  bytes 48054 (48.0 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ubuntu@ip-172-31-31-153:~$ kubectl get nodes
NAME                STATUS   ROLES           AGE   VERSION
control-plane-123   Ready    control-plane   37m   v1.32.3
ubuntu@ip-172-31-31-153:~$ kubectl describe node control-plane-123
Name:               control-plane-123
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=control-plane-123
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        flannel.alpha.coreos.com/backend-data: {"VNI":1,"VtepMAC":"f6:cd:0d:de:86:1a"}
                    flannel.alpha.coreos.com/backend-type: vxlan
                    flannel.alpha.coreos.com/kube-subnet-manager: true
                    flannel.alpha.coreos.com/public-ip: 172.31.31.153
                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 16:20:45 +0000
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  control-plane-123
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 16:58:55 +0000
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 16:50:15 +0000   Wed, 19 Mar 2025 16:50:15 +0000   FlannelIsUp                  Flannel is running on this node
  MemoryPressure       False   Wed, 19 Mar 2025 16:56:23 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 16:56:23 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 16:56:23 +0000   Wed, 19 Mar 2025 16:20:43 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                True    Wed, 19 Mar 2025 16:56:23 +0000   Wed, 19 Mar 2025 16:51:03 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  172.31.31.153
  Hostname:    control-plane-123
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006100Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903700Ki
  pods:               110
System Info:
  Machine ID:                 ec24ae40f0e290b83e2de0f4685ff707
  System UUID:                ec24ae40-f0e2-90b8-3e2d-e0f4685ff707
  Boot ID:                    316702be-76ed-4608-8a59-61199e58ce54
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (8 in total)
  Namespace                   Name                                         CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                         ------------  ----------  ---------------  -------------  ---
  kube-flannel                kube-flannel-ds-mqp7j                        100m (5%)     0 (0%)      50Mi (1%)        0 (0%)         8m47s
  kube-system                 coredns-668d6bf9bc-2ctgv                     100m (5%)     0 (0%)      70Mi (1%)        170Mi (4%)     38m
  kube-system                 coredns-668d6bf9bc-gbqfs                     100m (5%)     0 (0%)      70Mi (1%)        170Mi (4%)     38m
  kube-system                 etcd-control-plane-123                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         38m
  kube-system                 kube-apiserver-control-plane-123             250m (12%)    0 (0%)      0 (0%)           0 (0%)         38m
  kube-system                 kube-controller-manager-control-plane-123    200m (10%)    0 (0%)      0 (0%)           0 (0%)         38m
  kube-system                 kube-proxy-bt7pw                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         38m
  kube-system                 kube-scheduler-control-plane-123             100m (5%)     0 (0%)      0 (0%)           0 (0%)         38m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                950m (47%)  0 (0%)
  memory             290Mi (7%)  340Mi (8%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type     Reason                   Age    From             Message
  ----     ------                   ----   ----             -------
  Normal   Starting                 38m    kube-proxy       
  Normal   Starting                 38m    kubelet          Starting kubelet.
  Normal   NodeAllocatableEnforced  38m    kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  38m    kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    38m    kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     38m    kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
  Normal   RegisteredNode           38m    node-controller  Node control-plane-123 event: Registered Node control-plane-123 in Controller
  Normal   NodeReady                7m56s  kubelet          Node control-plane-123 status is now: NodeReady
  Warning  InvalidDiskCapacity      7m56s  kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  7m56s  kubelet          Updated Node Allocatable limit across pods
  Normal   Starting                 7m56s  kubelet          Starting kubelet.
  Normal   NodeHasSufficientMemory  7m56s  kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    7m56s  kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     7m56s  kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
  Normal   Starting                 7m43s  kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      7m43s  kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  7m42s  kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  7m42s  kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    7m42s  kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     7m42s  kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
ubuntu@ip-172-31-31-153:~$ kubectl get pods -n A
No resources found in A namespace.
ubuntu@ip-172-31-31-153:~$ kubectl get pods -A
NAMESPACE      NAME                                        READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-mqp7j                       1/1     Running   0          10m
kube-system    coredns-668d6bf9bc-2ctgv                    1/1     Running   0          40m
kube-system    coredns-668d6bf9bc-gbqfs                    1/1     Running   0          40m
kube-system    etcd-control-plane-123                      1/1     Running   0          40m
kube-system    kube-apiserver-control-plane-123            1/1     Running   0          40m
kube-system    kube-controller-manager-control-plane-123   1/1     Running   0          40m
kube-system    kube-proxy-bt7pw                            1/1     Running   0          40m
kube-system    kube-scheduler-control-plane-123            1/1     Running   0          40m
ubuntu@ip-172-31-31-153:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: control-plane-123


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: control-plane-123
========================================
📌 System Information
========================================
🔹 Hostname       : control-plane-123
🔹 Private IP     : 172.31.31.153
🔹 Public IP      : 54.90.128.249
🔹 MAC Address    : 0a:ff:c2:0c:b6:5f,f6:cd:0d:de:86:1a 06:5e:37:40:9e:53,9e:e3:8d:e5:26:80 32:64:29:22:a3:4b
🔹 Network        : 127.0.0.1/8,172.31.31.153/20 10.244.0.0/32,10.244.0.1/24
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 64G/324G
🔹 CPU Load       :  0.27, 0.35, 0.20
🔹 UUID           : ec24ae40f0e290b83e2de0f4685ff707
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  flannel  host-device  host-local	ipvlan	loopback  macvlan  portmap  ptp  sbr  static  tap  tuning  vlan  vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: exists         |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 12.3271ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Found existing Kubernetes file: /etc/kubernetes/admin.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/super-admin.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/controller-manager.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/kubelet.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/scheduler.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-apiserver.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-controller-manager.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-scheduler.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/etcd.yaml
⚠️  Found existing Kubernetes directory: /etc/kubernetes/pki/
⚠️  Found existing Kubernetes directory: /var/lib/etcd
⚠️  Found existing Kubernetes directory: /etc/cni/net.d
⚠️  Found existing Kubernetes directory: /var/lib/kubelet
⚠️  Found existing Kubernetes directory: /root/.kube/
⚠️  Port 6443 is already in use
⚠️  Port 10259 is already in use
⚠️  Port 10257 is already in use
⚠️  Port 10250 is already in use
⚠️  Port 2379 is already in use
⚠️  Port 2380 is already in use
⚠️  Conflicting resources found! Do you want to delete them? (y/n): y

🧹 Removing existing Kubernetes configuration...
rm: cannot remove '/var/lib/kubelet/pods/a0c01e20-2589-48ba-8538-37bfe767b9a3/volumes/kubernetes.io~projected/kube-api-access-266tb': Device or resource busy
rm: cannot remove '/var/lib/kubelet/pods/fea85dd1-9bc8-4f50-8b83-7fdcfdc06efc/volumes/kubernetes.io~projected/kube-api-access-sm77l': Device or resource busy
rm: cannot remove '/var/lib/kubelet/pods/4e5c9cd0-816e-498e-a6f2-7edd98b6ed8a/volumes/kubernetes.io~projected/kube-api-access-bvdg4': Device or resource busy
rm: cannot remove '/var/lib/kubelet/pods/1161a6a6-ca18-49f5-9d23-9637f6245ec2/volumes/kubernetes.io~projected/kube-api-access-xzmkh': Device or resource busy
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
6443/tcp:             6358
10250/tcp:            9779
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

 ✨ k8s-cleanup.sh script is completed!

✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🚀 Running kubeadm-init.sh script...

🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0319 17:02:43.463382   15253 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [control-plane-123 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.31.153]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [control-plane-123 localhost] and IPs [172.31.31.153 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [control-plane-123 localhost] and IPs [172.31.31.153 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 508.761699ms
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.001104179s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
32d431ff8d944a447b74449b195316d6bd2d3c976d6f298e75a8bc406510ad2f
[mark-control-plane] Marking the node control-plane-123 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node control-plane-123 as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: jazclx.pkz4gz11n53rg214
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.31.153:6443 --token jazclx.pkz4gz11n53rg214 \
	--discovery-token-ca-cert-hash sha256:764503da17580c9b8d7793b8f447ef77e134c5b00846fa486b838a686f8169af \
	--control-plane --certificate-key 32d431ff8d944a447b74449b195316d6bd2d3c976d6f298e75a8bc406510ad2f

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.31.153:6443 --token jazclx.pkz4gz11n53rg214 \
	--discovery-token-ca-cert-hash sha256:764503da17580c9b8d7793b8f447ef77e134c5b00846fa486b838a686f8169af 

🎉 kubeadm-init.sh script is completed!

📌 Please wait, the cluster is stabilizing... Good things take time! ⏳✨

😎 **Be like Kubernetes—always self-healing, always scaling!** 🔄

💡 **Patience is not just waiting, but keeping a great attitude while waiting!** 😃

🕰️ **Good things come to those who wait…** and to those who run ‘kubectl get pods’! 😆

🎯 **Mastery takes time, but every great engineer started here! Keep going!** 💙

🚀 **Your cluster is like a rocket—fueling up for launch!** Hold tight! 🛸

🌱 **Growth takes time, but oh, the view from the top is worth it!** 🚀

🕰️ **Good things come to those who wait…** and to those who run ‘kubectl get pods’! 😆

💡 **Patience is not just waiting, but keeping a great attitude while waiting!** 😃

✅ The cluster should now be stable! 🎯 Time to deploy greatness! 🚀💪
✅ Successfully executed kubeadm-init.sh.


🚀 Running kube-config-setup.sh script...

✅ ~/.kube/config is set.
-rw------- 1 ubuntu ubuntu 5657 Mar 19 16:25 /home/ubuntu/.kube/config

📌 KUBECONFIG set to /home/ubuntu/.kube/config

🔍 Verifying kubectl access...

E0319 17:05:55.379658   16335 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:05:55.384903   16335 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:05:55.391123   16335 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:05:55.395570   16335 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:05:55.402166   16335 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")
⚠️ Failed to connect to Kubernetes cluster

❌ Failed to execute kube-config-setup.sh. Exiting...

ubuntu@ip-172-31-31-153:~$ kubectl cluster-info
E0319 17:06:27.694578   16342 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:06:27.700834   16342 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:06:27.705946   16342 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:06:27.712079   16342 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:06:27.716204   16342 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")
ubuntu@ip-172-31-31-153:~$ kubectl cluster-info
E0319 17:07:08.513156   16354 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:07:08.518344   16354 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:07:08.523352   16354 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:07:08.528636   16354 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:07:08.534460   16354 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")
ubuntu@ip-172-31-31-153:~$ kubectl config view --minify
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://172.31.31.153:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: DATA+OMITTED
    client-key-data: DATA+OMITTED
ubuntu@ip-172-31-31-153:~$ openssl x509 -in /etc/kubernetes/pki/ca.crt -noout -text
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 8950222149831624537 (0x7c35939ffd8c0759)
        Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN = kubernetes
        Validity
            Not Before: Mar 19 16:57:43 2025 GMT
            Not After : Mar 17 17:02:43 2035 GMT
        Subject: CN = kubernetes
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:c1:66:15:bd:19:9e:fe:76:5f:2c:c9:97:e1:71:
                    e7:1a:61:2f:fa:8a:cf:3b:8b:d5:3b:1b:a1:44:5e:
                    27:8f:0a:c2:6c:2d:9f:c9:1a:f4:c8:27:bf:30:27:
                    df:b7:a3:88:96:40:de:84:c9:e4:20:55:6d:85:67:
                    87:3e:e4:18:52:bf:c0:d7:57:23:db:80:28:5c:bb:
                    14:6b:58:35:63:80:6f:6e:0d:b9:2e:01:37:11:f4:
                    05:b1:7e:ca:19:10:7f:bf:10:a2:93:bf:f3:de:91:
                    73:63:df:ff:81:91:e3:23:06:fb:4d:83:b9:68:77:
                    a2:4f:9c:e4:04:0d:a9:0a:c4:59:a6:2a:71:ba:6c:
                    98:4e:81:aa:8e:b9:f6:70:25:9d:ea:2f:05:be:25:
                    d6:e9:b9:8e:57:79:29:13:90:81:d4:4b:b5:fa:4f:
                    60:00:43:e6:2b:cf:60:e3:15:8d:55:05:38:20:fc:
                    1f:8b:82:6d:4a:44:cb:bd:6a:62:3a:42:d7:11:af:
                    f2:c2:26:f5:0d:6c:7d:0b:4e:4d:d8:92:ae:1f:f0:
                    d8:c6:96:07:3c:7b:4f:06:78:67:bf:56:77:1d:3a:
                    20:2a:14:ae:9b:fe:9a:fd:61:4b:31:a6:85:8e:8f:
                    28:42:2a:7e:f2:b7:01:64:14:ea:35:c9:07:99:f9:
                    40:7b
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Key Usage: critical
                Digital Signature, Key Encipherment, Certificate Sign
            X509v3 Basic Constraints: critical
                CA:TRUE
            X509v3 Subject Key Identifier: 
                7E:D5:39:62:09:47:C4:9D:AC:D7:CB:D9:C8:25:70:F1:0B:2A:E5:CF
            X509v3 Subject Alternative Name: 
                DNS:kubernetes
    Signature Algorithm: sha256WithRSAEncryption
    Signature Value:
        58:82:bb:fd:3f:32:d1:0f:46:09:c0:38:58:5a:ca:9f:a7:93:
        74:af:81:be:13:8c:19:d2:1b:de:df:e2:b9:d2:39:03:9e:ae:
        5c:95:6c:a1:cb:9b:a5:47:f8:a8:c1:60:a7:67:a0:37:ff:5f:
        46:ad:d8:46:96:2a:87:9f:60:fe:e3:c9:d6:ba:93:91:d5:d4:
        52:7c:ff:e0:79:0d:0a:2c:d4:d5:99:61:2f:86:d6:37:c3:4b:
        df:54:a6:e8:2c:b0:a4:06:4d:c4:e9:97:27:b0:c5:64:55:5c:
        42:a4:59:7f:3b:8d:21:83:fd:eb:ea:19:c4:c1:0e:eb:d8:32:
        e5:bf:4c:7f:74:63:f4:77:7a:c4:3d:18:b5:be:36:9c:75:7b:
        b1:0d:11:35:ec:c4:71:8f:a9:00:7d:0f:79:ba:e3:e9:e0:35:
        d8:86:14:d7:b1:2f:32:54:1a:d1:df:d8:14:fe:17:15:41:56:
        3b:2d:47:38:3f:93:0e:fb:db:9a:04:72:20:8f:0c:a0:9d:13:
        02:b3:99:c7:4c:86:74:95:c6:13:d0:3d:c9:8d:90:9c:5b:5f:
        b0:3f:65:34:de:fa:05:cb:2d:3e:47:b0:7e:40:bc:e2:2c:87:
        80:33:44:d0:ed:81:61:56:58:44:43:cb:38:1a:4b:b6:d2:64:
        ce:eb:d8:b1
ubuntu@ip-172-31-31-153:~$ sudo systemctl restart kube-apiserver
Failed to restart kube-apiserver.service: Unit kube-apiserver.service not found.
ubuntu@ip-172-31-31-153:~$ kubectl get pods -n kube-system
E0319 17:10:22.007636   16394 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:10:22.012485   16394 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:10:22.018015   16394 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:10:22.024580   16394 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:10:22.029886   16394 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")
ubuntu@ip-172-31-31-153:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-31-153:~$ kubectl get pods -n kube-system
E0319 17:11:17.817480   16438 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:11:17.824849   16438 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:11:17.830256   16438 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:11:17.834740   16438 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:11:17.840402   16438 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")
ubuntu@ip-172-31-31-153:~$ ls -al
total 32
drwxr-x--- 5 ubuntu ubuntu 4096 Mar 19 17:02 .
drwxr-xr-x 3 root   root   4096 Mar 19 16:17 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 19 16:17 .cache
drwxr-xr-x 2 root   root   4096 Mar 19 16:25 .kube
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 19 16:17 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 19 16:18 .sudo_as_admin_successful
ubuntu@ip-172-31-31-153:~$ mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
cp: overwrite '/home/ubuntu/.kube/config'? n
ubuntu@ip-172-31-31-153:~$ cat .kube/config 
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJVnBZNmh1TnkwN2t3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1Ua3hOakUxTXpkYUZ3MHpOVEF6TVRjeE5qSXdNemRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUROaXZqSHdYMS9pR2VkRFBqWGdFd01ScisvSVFUTzVjeDJMUE9zTUpzUjBEL1dWOS9tWGloc25DYTIKVW1CMXZUQVJndmZxYU1QOFlHY2t3Sk11YVY1SXlnYU00b0c0ajZhb08wMlV3Nkk0L0ErZFpSMnpLWjd0dVd2MgpxUFpxUUgrYVBITVpGN2dZQzZaK0E4QldtMnFld0FkeFJNODFZZzBzbzBVeFJjTlFWWm5YM0RuaVNYd3R1RFBNCi9NdW1xZnFGakNmY3Y4ZVZpcmdjbVhiSC9vby9ob1RuaDJnMTB4aHBac0RncUQ2RXA3STJqZzVwWHdvNHFZbTkKOEdxZm0yWjdRQVQxSU1vTCtsMko0MzRLa3FyS3pjTlhBZWVKWmtZRHIyMTFuVXU1aFFxbmUvL3Mrb2tWdXhudgpBb2x6U1BJQ0VReGdOWVZFRWlhZXJXbTJnTDcvQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTN1pESFZMQTI5YW0rYlZxdHFoVWozYS8ySjVqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2VsYkNwTVVZMwpDT1YvM0owMUptVUxjaE0vREhaTk5URWlXMG5UQ2RZa0MybHZvS09tdld0YzhLdWhtbmJyN2UyWnNpTlZ1K2FYCklyTE1sU0J0a3hZT2JSVzVEZ3U4N1F0eU5pM1BlMmwyMkIybm5IZGMwODF1Q3ZoSXA5N2JkMUtKS0VEdHhYcSsKL2JvbCtiWkZySGhYZ2RBMTFvU2JoR21rSHJ1c291ek8rMENHZGsrVVBQSHFLS3VTamlCdGp6T25yMGt0Z1ExeQpNSWYydFFyM2huSE4vd2lOeTlkU0xiVm1yZGkwekErcjRaUWpaL0xrV0VzZkI2ZjhRUGp4QWVNSzU1WHRNdlpJCncybGN2eTNjTXNGQnlSbXFhVXpJeERHS1RSYmFEVnNWY2dzNXdGNnZjS1pRRjZoZWhnRlNDajRtMlQ1M1MrTlAKcUtKYlFPMm80SDNmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://172.31.31.153:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJRW9OU0Zhb0VWMmd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1Ua3hOakUxTXpkYUZ3MHlOakF6TVRreE5qSXdNemRhTUR3eApIekFkQmdOVkJBb1RGbXQxWW1WaFpHMDZZMngxYzNSbGNpMWhaRzFwYm5NeEdUQVhCZ05WQkFNVEVHdDFZbVZ5CmJtVjBaWE10WVdSdGFXNHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDVi95a1UKY001MmxXWmdvNXlyUWlQZjdOSDJsVXVSNTVQYWN3cTVYM3FVSVlGV2c3TTBOb1plUlJVNVJvTkhaMVp1MmkyVgpTQVdMTGJkZHlFMjVpZEgrclBqZ2FxVHY5NG1sbHIzZUIzRkxjQnZxYnpiTWxjT2tJTkpGZHl4SFUzK0NzYUVFCmZqQVVzbFFUN3hYeERYMkxyMlhtcFJPNDR1bWd1WFRwTy9yTEZlTm9rYUZ4TTYvdG0rMTFVSlpUSHI2UHcwcy8Kc05DaGlQTlppNnRnTUZuZFZITmRHVllveU5GbWFPaUVoaWFETG8xdXFMMWtXWDgrbGVGbmFFL2xtaS9OOWFNSwpWVHpDQ0NMSkgxejhLTjdyRG1sY0JDY2lUMFpPUktEWXdwcTY3RzZIN1hwRzNlUkdhWnVlN2Z1dXZIaUd5aDhVCjlIbjZxb3VKMzhoTnVMZ2hBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUsKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkx0a01kVXNEYjFxYjV0VwpxMnFGU1Bkci9Zbm1NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJzQ3gzSzQwclZzcnBVMzdaL3EwK0VTdDNVCmdCd2IwRUtlNjRnZHdUVXhNdWVaMUIyeFlqRVl1UXZYZ1FnL0hKTkpyU2dwdXlNMUVWOEw4NW9VVTMxb3JIOTIKNVFKRHlocHZ2SDdCWVlwdzVHc3hvaWpDN3pUeXVGZ3g5OHdCSnljbkRVQkhkbk9oWWxoMDhxWW53OFFoLzdhRgpzYTV6NDhDNk9Ucnh3WmVLMkZsOTAxbERlcHF3Rk9mNytKVGZTdVRWaXhRRjdtNE90QlJ2czl1NjRYTzVJdlFGCmhNM3ZTeWErRGVLamp1R0tzVkF1aWQrNXlDdHlMMXVUN2VPbjlQOHJvWFJ4ZlBuaktoQ1hZeE5mOU5jbVlmbWMKOTB6OEROQytrZ2t6QisyaXdDeVNRNExZdXRFbHEwWUMvTy9seExUQ3ZnOENEM2pSbUZjcHN4NzliQXBwCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbGY4cEZIRE9kcFZtWUtPY3EwSWozK3pSOXBWTGtlZVQybk1LdVY5NmxDR0JWb096Ck5EYUdYa1VWT1VhRFIyZFdidG90bFVnRml5MjNYY2hOdVluUi9xejQ0R3FrNy9lSnBaYTkzZ2R4UzNBYjZtODIKekpYRHBDRFNSWGNzUjFOL2dyR2hCSDR3RkxKVUUrOFY4UTE5aTY5bDVxVVR1T0xwb0xsMDZUdjZ5eFhqYUpHaApjVE92N1p2dGRWQ1dVeDYrajhOTFA3RFFvWWp6V1l1cllEQlozVlJ6WFJsV0tNalJabWpvaElZbWd5Nk5icWk5ClpGbC9QcFhoWjJoUDVab3Z6ZldqQ2xVOHdnZ2l5UjljL0NqZTZ3NXBYQVFuSWs5R1RrU2cyTUthdXV4dWgrMTYKUnQza1JtbWJudTM3cnJ4NGhzb2ZGUFI1K3FxTGlkL0lUYmk0SVFJREFRQUJBb0lCQVFDRHJxbWkzMUh5ZTBDUQpzTEozQ3k2eGhKZmowYmV4Vk12UnFOT09ZRXNkeHJoa2VtU1YveFJCcUlaMGJQb05jcVJIMTFUVFRKSkpXSTQxClVBY2tUdUZEb3hrdTg1RHZkcktwNDhlMkozU0lGTmo5SER2UXFkNUN0ZW5Ed0Zib0cxN0RIeXhMNUhoVGd5Y2IKQlBlUFV4ZVh6Ums1dmt5dE1OQ0lJS2lKcGZXTDJjaFlyTVRJVWxuaHFBRWhWZG85UXlsNHdrdVJTMGtGbFJWVwpuRmh5YUJha05oRHJLNjQzcmhwUnpNSjdTREZQNjd3N3VrMFJTbUxNbDBETEI2MEdsQUgwam9iUFN4Z0xxRVFuCnZ2Z2J2VUJ6U3dkK1F1WFhwR2NUTEZqMDk3bTJ1MWVyQlZMR2pibHo5bHAzQVFQcStRUnFweGNGQ3FId2FOVHMKN2xKQU5xdHRBb0dCQU1kTEN0djNqZmFpdStycXdFNUh2b1FiaVVvNHk1S1k4NHRZZjlQRkY3R2hxc2tRLzlMNApGUVMzUHo5c3QxSnphaGNPS1lkb1l5N3cxNDI5RGJ4Mkd4MXExM1c3ZU9wNFlzaG54Z1lsVFYwN1dvV1MvZTZjCkNGemVCMFJ5NExiNHdrdWdUNVFUT2dOUkVSVDFpUWROZ2JWRytJTEFXSXg0UUxhSVBiUSt4SEliQW9HQkFNQ3QKUWN4Vit0ZFc5ZFhqclhWZHZodloxdzRyQkZNclNOY1lZcGEzU0FNNlRYSHRDZUpidHNJcFk2TEVBemorSmJmWQpKU1p3aW1RNVd4UnNoc0pFL0d5YlFsUEhaKzVKZS8zY3kxM0cvVEowN0ZHZ3Z2bTZFREJzTXB4RjZoVWk5NGZpClBldXpxWkx6cFovY3BDTXFmaFRVNndweklrd1p0YWlLR3lTZkU4SnpBb0dBVXh5Tmk4eUNqTCt6QkxZZnVzV2EKd3pkRW13cHlnMUY4QjduQm5VeE5wRXVha0wyaElwZEpGSzFqR0EwN3FvdnRTMjRoalpIUUF5eDNpR20yUjhrdApaNmc5OEtCZFBkTTB4d1RZQllvYTZHMnZRNU5ZaU9EVGIvODhJcVNSNkZ4M2t0aHBONFNKSmdieHk3N1dCWkNpCkxqcEp1eVdDQ0JyQ1NoMHBObmtTcmM4Q2dZRUFsSzRkdEJ3MDhLNitEVXNmc3cyZmdjWmIyU2NBczEwWFhFUUkKNzl5R3lWYllKQzJTRHdaT3hRMURRWHFZTWdhTC9JM2lQUU5qQjJ2ckNKdW1jWXJpYnJ4d05rNE51U2NqY3daSwpPQmN4a3huK3NnNmt6L2Z3UGkxLzhHOVM3dlNJcG1iQytYc3VRNk9ZRHdBbitLcjFtQVdsU2U4R2JFcjZqdy9qCldpTVhFRmtDZ1lFQXArWkRvRm1ZSjYwRGtXUURxcllDOWdqcVlsNjZ4Nk5nZm5PbjBQMXpvV3p1S29MZHZ6UkUKd0ZRTnl2UFJtMkFEd1JFWVd6RUFmRHF5alNHVWkvMTJjR1VDVnROditMQmpOU3U4bFRxczJvaUJ2NzcraGluUwpWb2RNNHdBL0ZuQVE3bFFud0ZUb21lb2NKL1FwR2hZK3FZb3lhQmpDWHlsVnpITlNoRnRTdVRJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
ubuntu@ip-172-31-31-153:~$ ip link show cni0
4: cni0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UP mode DEFAULT group default qlen 1000
    link/ether 06:5e:37:40:9e:53 brd ff:ff:ff:ff:ff:ff
ubuntu@ip-172-31-31-153:~$ kubectl get pods -A
E0319 17:16:01.756750   16491 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:16:01.761911   16491 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:16:01.766546   16491 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:16:01.771312   16491 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:16:01.775685   16491 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")
ubuntu@ip-172-31-31-153:~$ sudo kubeadm certs renew all
[renew] Reading configuration from the "kubeadm-config" ConfigMap in namespace "kube-system"...
[renew] Use 'kubeadm init phase upload-config --config your-config.yaml' to re-upload it.

certificate embedded in the kubeconfig file for the admin to use and for kubeadm itself renewed
certificate for serving the Kubernetes API renewed
certificate the apiserver uses to access etcd renewed
certificate for the API server to connect to kubelet renewed
certificate embedded in the kubeconfig file for the controller manager to use renewed
certificate for liveness probes to healthcheck etcd renewed
certificate for etcd nodes to communicate with each other renewed
certificate for serving etcd renewed
certificate for the front proxy client renewed
certificate embedded in the kubeconfig file for the scheduler manager to use renewed
certificate embedded in the kubeconfig file for the super-admin renewed

Done renewing certificates. You must restart the kube-apiserver, kube-controller-manager, kube-scheduler and etcd, so that they can use the new certificates.
ubuntu@ip-172-31-31-153:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-31-153:~$ kubectl get pods -A
E0319 17:17:22.925927   16549 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:17:22.930457   16549 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:17:22.937247   16549 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:17:22.941954   16549 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:17:22.946743   16549 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")
ubuntu@ip-172-31-31-153:~$ kubectl get pods -A
E0319 17:17:54.288826   16557 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:17:54.292970   16557 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:17:54.297103   16557 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:17:54.302149   16557 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
E0319 17:17:54.307043   16557 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"https://172.31.31.153:6443/api?timeout=32s\": tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")"
Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "kubernetes")
ubuntu@ip-172-31-31-153:~$ cat .kube/config 
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJVnBZNmh1TnkwN2t3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1Ua3hOakUxTXpkYUZ3MHpOVEF6TVRjeE5qSXdNemRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUROaXZqSHdYMS9pR2VkRFBqWGdFd01ScisvSVFUTzVjeDJMUE9zTUpzUjBEL1dWOS9tWGloc25DYTIKVW1CMXZUQVJndmZxYU1QOFlHY2t3Sk11YVY1SXlnYU00b0c0ajZhb08wMlV3Nkk0L0ErZFpSMnpLWjd0dVd2MgpxUFpxUUgrYVBITVpGN2dZQzZaK0E4QldtMnFld0FkeFJNODFZZzBzbzBVeFJjTlFWWm5YM0RuaVNYd3R1RFBNCi9NdW1xZnFGakNmY3Y4ZVZpcmdjbVhiSC9vby9ob1RuaDJnMTB4aHBac0RncUQ2RXA3STJqZzVwWHdvNHFZbTkKOEdxZm0yWjdRQVQxSU1vTCtsMko0MzRLa3FyS3pjTlhBZWVKWmtZRHIyMTFuVXU1aFFxbmUvL3Mrb2tWdXhudgpBb2x6U1BJQ0VReGdOWVZFRWlhZXJXbTJnTDcvQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTN1pESFZMQTI5YW0rYlZxdHFoVWozYS8ySjVqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2VsYkNwTVVZMwpDT1YvM0owMUptVUxjaE0vREhaTk5URWlXMG5UQ2RZa0MybHZvS09tdld0YzhLdWhtbmJyN2UyWnNpTlZ1K2FYCklyTE1sU0J0a3hZT2JSVzVEZ3U4N1F0eU5pM1BlMmwyMkIybm5IZGMwODF1Q3ZoSXA5N2JkMUtKS0VEdHhYcSsKL2JvbCtiWkZySGhYZ2RBMTFvU2JoR21rSHJ1c291ek8rMENHZGsrVVBQSHFLS3VTamlCdGp6T25yMGt0Z1ExeQpNSWYydFFyM2huSE4vd2lOeTlkU0xiVm1yZGkwekErcjRaUWpaL0xrV0VzZkI2ZjhRUGp4QWVNSzU1WHRNdlpJCncybGN2eTNjTXNGQnlSbXFhVXpJeERHS1RSYmFEVnNWY2dzNXdGNnZjS1pRRjZoZWhnRlNDajRtMlQ1M1MrTlAKcUtKYlFPMm80SDNmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://172.31.31.153:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJRW9OU0Zhb0VWMmd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1Ua3hOakUxTXpkYUZ3MHlOakF6TVRreE5qSXdNemRhTUR3eApIekFkQmdOVkJBb1RGbXQxWW1WaFpHMDZZMngxYzNSbGNpMWhaRzFwYm5NeEdUQVhCZ05WQkFNVEVHdDFZbVZ5CmJtVjBaWE10WVdSdGFXNHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDVi95a1UKY001MmxXWmdvNXlyUWlQZjdOSDJsVXVSNTVQYWN3cTVYM3FVSVlGV2c3TTBOb1plUlJVNVJvTkhaMVp1MmkyVgpTQVdMTGJkZHlFMjVpZEgrclBqZ2FxVHY5NG1sbHIzZUIzRkxjQnZxYnpiTWxjT2tJTkpGZHl4SFUzK0NzYUVFCmZqQVVzbFFUN3hYeERYMkxyMlhtcFJPNDR1bWd1WFRwTy9yTEZlTm9rYUZ4TTYvdG0rMTFVSlpUSHI2UHcwcy8Kc05DaGlQTlppNnRnTUZuZFZITmRHVllveU5GbWFPaUVoaWFETG8xdXFMMWtXWDgrbGVGbmFFL2xtaS9OOWFNSwpWVHpDQ0NMSkgxejhLTjdyRG1sY0JDY2lUMFpPUktEWXdwcTY3RzZIN1hwRzNlUkdhWnVlN2Z1dXZIaUd5aDhVCjlIbjZxb3VKMzhoTnVMZ2hBZ01CQUFHalZqQlVNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUsKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkx0a01kVXNEYjFxYjV0VwpxMnFGU1Bkci9Zbm1NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJzQ3gzSzQwclZzcnBVMzdaL3EwK0VTdDNVCmdCd2IwRUtlNjRnZHdUVXhNdWVaMUIyeFlqRVl1UXZYZ1FnL0hKTkpyU2dwdXlNMUVWOEw4NW9VVTMxb3JIOTIKNVFKRHlocHZ2SDdCWVlwdzVHc3hvaWpDN3pUeXVGZ3g5OHdCSnljbkRVQkhkbk9oWWxoMDhxWW53OFFoLzdhRgpzYTV6NDhDNk9Ucnh3WmVLMkZsOTAxbERlcHF3Rk9mNytKVGZTdVRWaXhRRjdtNE90QlJ2czl1NjRYTzVJdlFGCmhNM3ZTeWErRGVLamp1R0tzVkF1aWQrNXlDdHlMMXVUN2VPbjlQOHJvWFJ4ZlBuaktoQ1hZeE5mOU5jbVlmbWMKOTB6OEROQytrZ2t6QisyaXdDeVNRNExZdXRFbHEwWUMvTy9seExUQ3ZnOENEM2pSbUZjcHN4NzliQXBwCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbGY4cEZIRE9kcFZtWUtPY3EwSWozK3pSOXBWTGtlZVQybk1LdVY5NmxDR0JWb096Ck5EYUdYa1VWT1VhRFIyZFdidG90bFVnRml5MjNYY2hOdVluUi9xejQ0R3FrNy9lSnBaYTkzZ2R4UzNBYjZtODIKekpYRHBDRFNSWGNzUjFOL2dyR2hCSDR3RkxKVUUrOFY4UTE5aTY5bDVxVVR1T0xwb0xsMDZUdjZ5eFhqYUpHaApjVE92N1p2dGRWQ1dVeDYrajhOTFA3RFFvWWp6V1l1cllEQlozVlJ6WFJsV0tNalJabWpvaElZbWd5Nk5icWk5ClpGbC9QcFhoWjJoUDVab3Z6ZldqQ2xVOHdnZ2l5UjljL0NqZTZ3NXBYQVFuSWs5R1RrU2cyTUthdXV4dWgrMTYKUnQza1JtbWJudTM3cnJ4NGhzb2ZGUFI1K3FxTGlkL0lUYmk0SVFJREFRQUJBb0lCQVFDRHJxbWkzMUh5ZTBDUQpzTEozQ3k2eGhKZmowYmV4Vk12UnFOT09ZRXNkeHJoa2VtU1YveFJCcUlaMGJQb05jcVJIMTFUVFRKSkpXSTQxClVBY2tUdUZEb3hrdTg1RHZkcktwNDhlMkozU0lGTmo5SER2UXFkNUN0ZW5Ed0Zib0cxN0RIeXhMNUhoVGd5Y2IKQlBlUFV4ZVh6Ums1dmt5dE1OQ0lJS2lKcGZXTDJjaFlyTVRJVWxuaHFBRWhWZG85UXlsNHdrdVJTMGtGbFJWVwpuRmh5YUJha05oRHJLNjQzcmhwUnpNSjdTREZQNjd3N3VrMFJTbUxNbDBETEI2MEdsQUgwam9iUFN4Z0xxRVFuCnZ2Z2J2VUJ6U3dkK1F1WFhwR2NUTEZqMDk3bTJ1MWVyQlZMR2pibHo5bHAzQVFQcStRUnFweGNGQ3FId2FOVHMKN2xKQU5xdHRBb0dCQU1kTEN0djNqZmFpdStycXdFNUh2b1FiaVVvNHk1S1k4NHRZZjlQRkY3R2hxc2tRLzlMNApGUVMzUHo5c3QxSnphaGNPS1lkb1l5N3cxNDI5RGJ4Mkd4MXExM1c3ZU9wNFlzaG54Z1lsVFYwN1dvV1MvZTZjCkNGemVCMFJ5NExiNHdrdWdUNVFUT2dOUkVSVDFpUWROZ2JWRytJTEFXSXg0UUxhSVBiUSt4SEliQW9HQkFNQ3QKUWN4Vit0ZFc5ZFhqclhWZHZodloxdzRyQkZNclNOY1lZcGEzU0FNNlRYSHRDZUpidHNJcFk2TEVBemorSmJmWQpKU1p3aW1RNVd4UnNoc0pFL0d5YlFsUEhaKzVKZS8zY3kxM0cvVEowN0ZHZ3Z2bTZFREJzTXB4RjZoVWk5NGZpClBldXpxWkx6cFovY3BDTXFmaFRVNndweklrd1p0YWlLR3lTZkU4SnpBb0dBVXh5Tmk4eUNqTCt6QkxZZnVzV2EKd3pkRW13cHlnMUY4QjduQm5VeE5wRXVha0wyaElwZEpGSzFqR0EwN3FvdnRTMjRoalpIUUF5eDNpR20yUjhrdApaNmc5OEtCZFBkTTB4d1RZQllvYTZHMnZRNU5ZaU9EVGIvODhJcVNSNkZ4M2t0aHBONFNKSmdieHk3N1dCWkNpCkxqcEp1eVdDQ0JyQ1NoMHBObmtTcmM4Q2dZRUFsSzRkdEJ3MDhLNitEVXNmc3cyZmdjWmIyU2NBczEwWFhFUUkKNzl5R3lWYllKQzJTRHdaT3hRMURRWHFZTWdhTC9JM2lQUU5qQjJ2ckNKdW1jWXJpYnJ4d05rNE51U2NqY3daSwpPQmN4a3huK3NnNmt6L2Z3UGkxLzhHOVM3dlNJcG1iQytYc3VRNk9ZRHdBbitLcjFtQVdsU2U4R2JFcjZqdy9qCldpTVhFRmtDZ1lFQXArWkRvRm1ZSjYwRGtXUURxcllDOWdqcVlsNjZ4Nk5nZm5PbjBQMXpvV3p1S29MZHZ6UkUKd0ZRTnl2UFJtMkFEd1JFWVd6RUFmRHF5alNHVWkvMTJjR1VDVnROditMQmpOU3U4bFRxczJvaUJ2NzcraGluUwpWb2RNNHdBL0ZuQVE3bFFud0ZUb21lb2NKL1FwR2hZK3FZb3lhQmpDWHlsVnpITlNoRnRTdVRJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
ubuntu@ip-172-31-31-153:~$ rm -rf .kube/config 
rm: cannot remove '.kube/config': Permission denied
ubuntu@ip-172-31-31-153:~$ sudo rm -rf .kube/config 
ubuntu@ip-172-31-31-153:~$ mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
ubuntu@ip-172-31-31-153:~$ kubectl get pods -A
NAMESPACE     NAME                                        READY   STATUS    RESTARTS      AGE
kube-system   coredns-668d6bf9bc-nv7bk                    0/1     Pending   0             16m
kube-system   coredns-668d6bf9bc-slv4x                    0/1     Pending   0             16m
kube-system   etcd-control-plane-123                      1/1     Running   1 (17m ago)   16m
kube-system   kube-apiserver-control-plane-123            1/1     Running   1 (17m ago)   16m
kube-system   kube-controller-manager-control-plane-123   1/1     Running   1 (17m ago)   16m
kube-system   kube-proxy-6bwcv                            1/1     Running   0             16m
kube-system   kube-scheduler-control-plane-123            1/1     Running   1 (17m ago)   16m
ubuntu@ip-172-31-31-153:~$ kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-31-153:~$ kubectl get pods -A
NAMESPACE      NAME                                        READY   STATUS    RESTARTS      AGE
kube-flannel   kube-flannel-ds-z2bvs                       1/1     Running   0             18s
kube-system    coredns-668d6bf9bc-nv7bk                    0/1     Pending   0             18m
kube-system    coredns-668d6bf9bc-slv4x                    0/1     Pending   0             18m
kube-system    etcd-control-plane-123                      1/1     Running   1 (19m ago)   18m
kube-system    kube-apiserver-control-plane-123            1/1     Running   1 (19m ago)   18m
kube-system    kube-controller-manager-control-plane-123   1/1     Running   1 (19m ago)   18m
kube-system    kube-proxy-6bwcv                            1/1     Running   0             18m
kube-system    kube-scheduler-control-plane-123            1/1     Running   1 (19m ago)   18m
ubuntu@ip-172-31-31-153:~$ kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace/kube-flannel unchanged
serviceaccount/flannel unchanged
clusterrole.rbac.authorization.k8s.io/flannel unchanged
clusterrolebinding.rbac.authorization.k8s.io/flannel unchanged
configmap/kube-flannel-cfg unchanged
daemonset.apps/kube-flannel-ds unchanged
ubuntu@ip-172-31-31-153:~$ kubectl get pods -A
NAMESPACE      NAME                                        READY   STATUS    RESTARTS      AGE
kube-flannel   kube-flannel-ds-z2bvs                       1/1     Running   0             41s
kube-system    coredns-668d6bf9bc-nv7bk                    0/1     Pending   0             19m
kube-system    coredns-668d6bf9bc-slv4x                    0/1     Pending   0             19m
kube-system    etcd-control-plane-123                      1/1     Running   1 (19m ago)   19m
kube-system    kube-apiserver-control-plane-123            1/1     Running   1 (19m ago)   19m
kube-system    kube-controller-manager-control-plane-123   1/1     Running   1 (19m ago)   19m
kube-system    kube-proxy-6bwcv                            1/1     Running   0             19m
kube-system    kube-scheduler-control-plane-123            1/1     Running   1 (19m ago)   19m
ubuntu@ip-172-31-31-153:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-31-153:~$ kubectl get pods -A
NAMESPACE      NAME                                        READY   STATUS    RESTARTS      AGE
kube-flannel   kube-flannel-ds-z2bvs                       1/1     Running   0             67s
kube-system    coredns-668d6bf9bc-nv7bk                    0/1     Pending   0             19m
kube-system    coredns-668d6bf9bc-slv4x                    0/1     Pending   0             19m
kube-system    etcd-control-plane-123                      1/1     Running   1 (20m ago)   19m
kube-system    kube-apiserver-control-plane-123            1/1     Running   1 (20m ago)   19m
kube-system    kube-controller-manager-control-plane-123   1/1     Running   1 (20m ago)   19m
kube-system    kube-proxy-6bwcv                            1/1     Running   0             19m
kube-system    kube-scheduler-control-plane-123            1/1     Running   1 (20m ago)   19m
ubuntu@ip-172-31-31-153:~$ kubectl get pods -A
NAMESPACE      NAME                                        READY   STATUS    RESTARTS      AGE
kube-flannel   kube-flannel-ds-z2bvs                       1/1     Running   0             76s
kube-system    coredns-668d6bf9bc-nv7bk                    0/1     Pending   0             19m
kube-system    coredns-668d6bf9bc-slv4x                    0/1     Pending   0             19m
kube-system    etcd-control-plane-123                      1/1     Running   1 (20m ago)   19m
kube-system    kube-apiserver-control-plane-123            1/1     Running   1 (20m ago)   19m
kube-system    kube-controller-manager-control-plane-123   1/1     Running   1 (20m ago)   19m
kube-system    kube-proxy-6bwcv                            1/1     Running   0             19m
kube-system    kube-scheduler-control-plane-123            1/1     Running   1 (20m ago)   19m
ubuntu@ip-172-31-31-153:~$ kubectl describe po coredns-668d6bf9bc-nv7bk -n kube-system
Name:                 coredns-668d6bf9bc-nv7bk
Namespace:            kube-system
Priority:             2000000000
Priority Class Name:  system-cluster-critical
Service Account:      coredns
Node:                 <none>
Labels:               k8s-app=kube-dns
                      pod-template-hash=668d6bf9bc
Annotations:          <none>
Status:               Pending
IP:                   
IPs:                  <none>
Controlled By:        ReplicaSet/coredns-668d6bf9bc
Containers:
  coredns:
    Image:       registry.k8s.io/coredns/coredns:v1.11.3
    Ports:       53/UDP, 53/TCP, 9153/TCP
    Host Ports:  0/UDP, 0/TCP, 0/TCP
    Args:
      -conf
      /etc/coredns/Corefile
    Limits:
      memory:  170Mi
    Requests:
      cpu:        100m
      memory:     70Mi
    Liveness:     http-get http://:8080/health delay=60s timeout=5s period=10s #success=1 #failure=5
    Readiness:    http-get http://:8181/ready delay=0s timeout=1s period=10s #success=1 #failure=3
    Environment:  <none>
    Mounts:
      /etc/coredns from config-volume (ro)
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-l52wz (ro)
Conditions:
  Type           Status
  PodScheduled   False 
Volumes:
  config-volume:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      coredns
    Optional:  false
  kube-api-access-l52wz:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   Burstable
Node-Selectors:              kubernetes.io/os=linux
Tolerations:                 CriticalAddonsOnly op=Exists
                             node-role.kubernetes.io/control-plane:NoSchedule
                             node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason            Age                  From               Message
  ----     ------            ----                 ----               -------
  Warning  FailedScheduling  4m51s (x4 over 20m)  default-scheduler  0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.
ubuntu@ip-172-31-31-153:~$ ifconfig
cni0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.1  netmask 255.255.255.0  broadcast 10.244.0.255
        inet6 fe80::45e:37ff:fe40:9e53  prefixlen 64  scopeid 0x20<link>
        ether 06:5e:37:40:9e:53  txqueuelen 1000  (Ethernet)
        RX packets 1543  bytes 128413 (128.4 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 1598  bytes 189860 (189.8 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

enX0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001
        inet 172.31.31.153  netmask 255.255.240.0  broadcast 172.31.31.255
        inet6 fe80::8ff:c2ff:fe0c:b65f  prefixlen 64  scopeid 0x20<link>
        ether 0a:ff:c2:0c:b6:5f  txqueuelen 1000  (Ethernet)
        RX packets 453993  bytes 614979164 (614.9 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 87377  bytes 7582718 (7.5 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

flannel.1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.0  netmask 255.255.255.255  broadcast 0.0.0.0
        inet6 fe80::f4cd:dff:fede:861a  prefixlen 64  scopeid 0x20<link>
        ether f6:cd:0d:de:86:1a  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 15 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 710097  bytes 148508688 (148.5 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 710097  bytes 148508688 (148.5 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

veth094a925e: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet6 fe80::8407:b4ff:fe28:63a7  prefixlen 64  scopeid 0x20<link>
        ether 32:64:29:22:a3:4b  txqueuelen 1000  (Ethernet)
        RX packets 774  bytes 75178 (75.1 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 832  bytes 97521 (97.5 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

vethbf05c8c7: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet6 fe80::84bd:2eff:fe1f:21a6  prefixlen 64  scopeid 0x20<link>
        ether 9e:e3:8d:e5:26:80  txqueuelen 1000  (Ethernet)
        RX packets 771  bytes 74921 (74.9 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 834  bytes 97555 (97.5 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ubuntu@ip-172-31-31-153:~$ kubectl get nodes
NAME                STATUS     ROLES           AGE   VERSION
control-plane-123   NotReady   control-plane   21m   v1.32.3
ubuntu@ip-172-31-31-153:~$ kubectl describe node control-plane-123
Name:               control-plane-123
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=control-plane-123
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        flannel.alpha.coreos.com/backend-data: {"VNI":1,"VtepMAC":"f6:cd:0d:de:86:1a"}
                    flannel.alpha.coreos.com/backend-type: vxlan
                    flannel.alpha.coreos.com/kube-subnet-manager: true
                    flannel.alpha.coreos.com/public-ip: 172.31.31.153
                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 17:02:51 +0000
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
                    node.kubernetes.io/not-ready:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  control-plane-123
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 17:24:14 +0000
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 17:21:28 +0000   Wed, 19 Mar 2025 17:21:28 +0000   FlannelIsUp                  Flannel is running on this node
  MemoryPressure       False   Wed, 19 Mar 2025 17:22:22 +0000   Wed, 19 Mar 2025 17:02:49 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 17:22:22 +0000   Wed, 19 Mar 2025 17:02:49 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 17:22:22 +0000   Wed, 19 Mar 2025 17:02:49 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                False   Wed, 19 Mar 2025 17:22:22 +0000   Wed, 19 Mar 2025 17:02:49 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.31.153
  Hostname:    control-plane-123
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006100Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903700Ki
  pods:               110
System Info:
  Machine ID:                 ec24ae40f0e290b83e2de0f4685ff707
  System UUID:                ec24ae40-f0e2-90b8-3e2d-e0f4685ff707
  Boot ID:                    316702be-76ed-4608-8a59-61199e58ce54
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (6 in total)
  Namespace                   Name                                         CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                         ------------  ----------  ---------------  -------------  ---
  kube-flannel                kube-flannel-ds-z2bvs                        100m (5%)     0 (0%)      50Mi (1%)        0 (0%)         2m57s
  kube-system                 etcd-control-plane-123                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         21m
  kube-system                 kube-apiserver-control-plane-123             250m (12%)    0 (0%)      0 (0%)           0 (0%)         21m
  kube-system                 kube-controller-manager-control-plane-123    200m (10%)    0 (0%)      0 (0%)           0 (0%)         21m
  kube-system                 kube-proxy-6bwcv                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         21m
  kube-system                 kube-scheduler-control-plane-123             100m (5%)     0 (0%)      0 (0%)           0 (0%)         21m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (37%)  0 (0%)
  memory             150Mi (3%)  0 (0%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type     Reason                   Age    From             Message
  ----     ------                   ----   ----             -------
  Normal   Starting                 21m    kube-proxy       
  Normal   Starting                 21m    kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      21m    kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  21m    kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  21m    kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    21m    kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     21m    kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
  Normal   RegisteredNode           21m    node-controller  Node control-plane-123 event: Registered Node control-plane-123 in Controller
  Normal   NodeHasSufficientPID     13m    kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
  Normal   NodeAllocatableEnforced  13m    kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  13m    kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    13m    kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   Starting                 13m    kubelet          Starting kubelet.
  Normal   Starting                 7m13s  kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      7m13s  kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  7m13s  kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasNoDiskPressure    7m12s  kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientMemory  7m12s  kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasSufficientPID     7m12s  kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
  Normal   Starting                 2m1s   kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      2m1s   kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  2m     kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  2m     kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    2m     kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     2m     kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
ubuntu@ip-172-31-31-153:~$ kubectl delete -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace "kube-flannel" deleted
serviceaccount "flannel" deleted
clusterrole.rbac.authorization.k8s.io "flannel" deleted
clusterrolebinding.rbac.authorization.k8s.io "flannel" deleted
configmap "kube-flannel-cfg" deleted
daemonset.apps "kube-flannel-ds" deleted
ubuntu@ip-172-31-31-153:~$ kubectl get po -A
NAMESPACE     NAME                                        READY   STATUS    RESTARTS      AGE
kube-system   coredns-668d6bf9bc-nv7bk                    0/1     Pending   0             23m
kube-system   coredns-668d6bf9bc-slv4x                    0/1     Pending   0             23m
kube-system   etcd-control-plane-123                      1/1     Running   1 (23m ago)   23m
kube-system   kube-apiserver-control-plane-123            1/1     Running   1 (23m ago)   23m
kube-system   kube-controller-manager-control-plane-123   1/1     Running   1 (23m ago)   23m
kube-system   kube-proxy-6bwcv                            1/1     Running   0             23m
kube-system   kube-scheduler-control-plane-123            1/1     Running   1 (23m ago)   23m
ubuntu@ip-172-31-31-153:~$ kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-31-153:~$ ifconfig
cni0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.1  netmask 255.255.255.0  broadcast 10.244.0.255
        inet6 fe80::45e:37ff:fe40:9e53  prefixlen 64  scopeid 0x20<link>
        ether 06:5e:37:40:9e:53  txqueuelen 1000  (Ethernet)
        RX packets 1543  bytes 128413 (128.4 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 1598  bytes 189860 (189.8 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

enX0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001
        inet 172.31.31.153  netmask 255.255.240.0  broadcast 172.31.31.255
        inet6 fe80::8ff:c2ff:fe0c:b65f  prefixlen 64  scopeid 0x20<link>
        ether 0a:ff:c2:0c:b6:5f  txqueuelen 1000  (Ethernet)
        RX packets 458543  bytes 615500502 (615.5 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 91718  bytes 8045596 (8.0 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

flannel.1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.0  netmask 255.255.255.255  broadcast 0.0.0.0
        inet6 fe80::f4cd:dff:fede:861a  prefixlen 64  scopeid 0x20<link>
        ether f6:cd:0d:de:86:1a  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 15 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 750220  bytes 159197165 (159.1 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 750220  bytes 159197165 (159.1 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

veth094a925e: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet6 fe80::8407:b4ff:fe28:63a7  prefixlen 64  scopeid 0x20<link>
        ether 32:64:29:22:a3:4b  txqueuelen 1000  (Ethernet)
        RX packets 774  bytes 75178 (75.1 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 832  bytes 97521 (97.5 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

vethbf05c8c7: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet6 fe80::84bd:2eff:fe1f:21a6  prefixlen 64  scopeid 0x20<link>
        ether 9e:e3:8d:e5:26:80  txqueuelen 1000  (Ethernet)
        RX packets 771  bytes 74921 (74.9 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 834  bytes 97555 (97.5 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ubuntu@ip-172-31-31-153:~$ kubectl get po -A
NAMESPACE      NAME                                        READY   STATUS    RESTARTS      AGE
kube-flannel   kube-flannel-ds-j9pgn                       1/1     Running   0             22s
kube-system    coredns-668d6bf9bc-nv7bk                    0/1     Pending   0             23m
kube-system    coredns-668d6bf9bc-slv4x                    0/1     Pending   0             23m
kube-system    etcd-control-plane-123                      1/1     Running   1 (24m ago)   24m
kube-system    kube-apiserver-control-plane-123            1/1     Running   1 (24m ago)   24m
kube-system    kube-controller-manager-control-plane-123   1/1     Running   1 (24m ago)   24m
kube-system    kube-proxy-6bwcv                            1/1     Running   0             23m
kube-system    kube-scheduler-control-plane-123            1/1     Running   1 (24m ago)   24m
ubuntu@ip-172-31-31-153:~$ kubectl describe node control-plane-123
Name:               control-plane-123
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=control-plane-123
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        flannel.alpha.coreos.com/backend-data: {"VNI":1,"VtepMAC":"f6:cd:0d:de:86:1a"}
                    flannel.alpha.coreos.com/backend-type: vxlan
                    flannel.alpha.coreos.com/kube-subnet-manager: true
                    flannel.alpha.coreos.com/public-ip: 172.31.31.153
                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 17:02:51 +0000
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
                    node.kubernetes.io/not-ready:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  control-plane-123
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 17:27:08 +0000
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 17:26:37 +0000   Wed, 19 Mar 2025 17:26:37 +0000   FlannelIsUp                  Flannel is running on this node
  MemoryPressure       False   Wed, 19 Mar 2025 17:22:22 +0000   Wed, 19 Mar 2025 17:02:49 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 17:22:22 +0000   Wed, 19 Mar 2025 17:02:49 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 17:22:22 +0000   Wed, 19 Mar 2025 17:02:49 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                False   Wed, 19 Mar 2025 17:22:22 +0000   Wed, 19 Mar 2025 17:02:49 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.31.153
  Hostname:    control-plane-123
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006100Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903700Ki
  pods:               110
System Info:
  Machine ID:                 ec24ae40f0e290b83e2de0f4685ff707
  System UUID:                ec24ae40-f0e2-90b8-3e2d-e0f4685ff707
  Boot ID:                    316702be-76ed-4608-8a59-61199e58ce54
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (6 in total)
  Namespace                   Name                                         CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                         ------------  ----------  ---------------  -------------  ---
  kube-flannel                kube-flannel-ds-j9pgn                        100m (5%)     0 (0%)      50Mi (1%)        0 (0%)         35s
  kube-system                 etcd-control-plane-123                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         24m
  kube-system                 kube-apiserver-control-plane-123             250m (12%)    0 (0%)      0 (0%)           0 (0%)         24m
  kube-system                 kube-controller-manager-control-plane-123    200m (10%)    0 (0%)      0 (0%)           0 (0%)         24m
  kube-system                 kube-proxy-6bwcv                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         24m
  kube-system                 kube-scheduler-control-plane-123             100m (5%)     0 (0%)      0 (0%)           0 (0%)         24m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (37%)  0 (0%)
  memory             150Mi (3%)  0 (0%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type     Reason                   Age    From             Message
  ----     ------                   ----   ----             -------
  Normal   Starting                 24m    kube-proxy       
  Normal   Starting                 24m    kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      24m    kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  24m    kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  24m    kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    24m    kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     24m    kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
  Normal   RegisteredNode           24m    node-controller  Node control-plane-123 event: Registered Node control-plane-123 in Controller
  Normal   NodeHasSufficientPID     16m    kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
  Normal   NodeAllocatableEnforced  16m    kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  16m    kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    16m    kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   Starting                 16m    kubelet          Starting kubelet.
  Normal   Starting                 10m    kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      10m    kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  10m    kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasNoDiskPressure    9m59s  kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientMemory  9m59s  kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasSufficientPID     9m59s  kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
  Normal   Starting                 4m48s  kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      4m48s  kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  4m47s  kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  4m47s  kubelet          Node control-plane-123 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    4m47s  kubelet          Node control-plane-123 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     4m47s  kubelet          Node control-plane-123 status is now: NodeHasSufficientPID
ubuntu@ip-172-31-31-153:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
W0319 17:26:37.621766       1 main.go:557] no subnet found for key: FLANNEL_IPV6_NETWORK in file: /run/flannel/subnet.env
W0319 17:26:37.621960       1 main.go:557] no subnet found for key: FLANNEL_IPV6_SUBNET in file: /run/flannel/subnet.env
I0319 17:26:37.621972       1 iptables.go:125] Setting up masking rules
I0319 17:26:37.631614       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 17:26:37.635150       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 17:26:37.635166       1 main.go:416] Running backend.
I0319 17:26:37.636503       1 vxlan_network.go:65] watching for new subnet leases
I0319 17:26:37.652563       1 main.go:437] Waiting for all goroutines to exit
I0319 17:26:37.660458       1 iptables.go:372] bootstrap done
I0319 17:26:37.664136       1 iptables.go:372] bootstrap done
ubuntu@ip-172-31-31-153:~$ kubectl logs -n kube-flannel kube-flannel-ds-59x4c
error: error from server (NotFound): pods "kube-flannel-ds-59x4c" not found in namespace "kube-flannel"
ubuntu@ip-172-31-31-153:~$ ls -l /etc/cni/net.d/
cat /etc/cni/net.d/10-flannel.conflist
total 4
-rw-r--r-- 1 root root 292 Mar 19 17:26 10-flannel.conflist
{
  "name": "cbr0",
  "cniVersion": "0.3.1",
  "plugins": [
    {
      "type": "flannel",
      "delegate": {
        "hairpinMode": true,
        "isDefaultGateway": true
      }
    },
    {
      "type": "portmap",
      "capabilities": {
        "portMappings": true
      }
    }
  ]
}
ubuntu@ip-172-31-31-153:~$ cat /etc/cni/net.d/10-flannel.conflist
{
  "name": "cbr0",
  "cniVersion": "0.3.1",
  "plugins": [
    {
      "type": "flannel",
      "delegate": {
        "hairpinMode": true,
        "isDefaultGateway": true
      }
    },
    {
      "type": "portmap",
      "capabilities": {
        "portMappings": true
      }
    }
  ]
}
ubuntu@ip-172-31-31-153:~$ ls -l /etc/cni/net.d/
total 4
-rw-r--r-- 1 root root 292 Mar 19 17:26 10-flannel.conflist
ubuntu@ip-172-31-31-153:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:c2:0c:b6:5f brd ff:ff:ff:ff:ff:ff
    inet 172.31.31.153/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 2989sec preferred_lft 2989sec
    inet6 fe80::8ff:c2ff:fe0c:b65f/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether f6:cd:0d:de:86:1a brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::f4cd:dff:fede:861a/64 scope link 
       valid_lft forever preferred_lft forever
4: cni0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UP group default qlen 1000
    link/ether 06:5e:37:40:9e:53 brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.1/24 brd 10.244.0.255 scope global cni0
       valid_lft forever preferred_lft forever
    inet6 fe80::45e:37ff:fe40:9e53/64 scope link 
       valid_lft forever preferred_lft forever
5: vethbf05c8c7@if2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue master cni0 state UP group default qlen 1000
    link/ether 9e:e3:8d:e5:26:80 brd ff:ff:ff:ff:ff:ff link-netns cni-2f15fa5d-6f3e-0275-c1ea-34379980de04
    inet6 fe80::84bd:2eff:fe1f:21a6/64 scope link 
       valid_lft forever preferred_lft forever
6: veth094a925e@if2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue master cni0 state UP group default qlen 1000
    link/ether 32:64:29:22:a3:4b brd ff:ff:ff:ff:ff:ff link-netns cni-cab53b62-b98b-eff0-deca-c35b02ae4f82
    inet6 fe80::8407:b4ff:fe28:63a7/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-31-153:~$ kubectl delete pod -n kube-flannel --all
pod "kube-flannel-ds-j9pgn" deleted
ubuntu@ip-172-31-31-153:~$ kubectl delete daemonset -n kube-flannel kube-flannel-ds
kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
daemonset.apps "kube-flannel-ds" deleted
namespace/kube-flannel unchanged
clusterrole.rbac.authorization.k8s.io/flannel unchanged
clusterrolebinding.rbac.authorization.k8s.io/flannel unchanged
serviceaccount/flannel unchanged
configmap/kube-flannel-cfg unchanged
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-31-153:~$ kubectl get po -A
NAMESPACE      NAME                                        READY   STATUS    RESTARTS      AGE
kube-flannel   kube-flannel-ds-tfjkv                       1/1     Running   0             12s
kube-system    coredns-668d6bf9bc-nv7bk                    0/1     Pending   0             28m
kube-system    coredns-668d6bf9bc-slv4x                    0/1     Pending   0             28m
kube-system    etcd-control-plane-123                      1/1     Running   1 (28m ago)   28m
kube-system    kube-apiserver-control-plane-123            1/1     Running   1 (28m ago)   28m
kube-system    kube-controller-manager-control-plane-123   1/1     Running   1 (28m ago)   28m
kube-system    kube-proxy-6bwcv                            1/1     Running   0             28m
kube-system    kube-scheduler-control-plane-123            1/1     Running   1 (28m ago)   28m
ubuntu@ip-172-31-31-153:~$ rm -rf /etc/cni/net.d/*
kubectl delete -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
sudo systemctl restart kubelet
rm: cannot remove '/etc/cni/net.d/10-flannel.conflist': Permission denied
namespace "kube-flannel" deleted
clusterrole.rbac.authorization.k8s.io "flannel" deleted
clusterrolebinding.rbac.authorization.k8s.io "flannel" deleted
serviceaccount "flannel" deleted
configmap "kube-flannel-cfg" deleted
daemonset.apps "kube-flannel-ds" deleted
namespace/kube-flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
serviceaccount/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-31-153:~$ sudo rm -rf /etc/cni/net.d/*
ubuntu@ip-172-31-31-153:~$ kubectl delete -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
namespace "kube-flannel" deleted
clusterrole.rbac.authorization.k8s.io "flannel" deleted
clusterrolebinding.rbac.authorization.k8s.io "flannel" deleted
serviceaccount "flannel" deleted
configmap "kube-flannel-cfg" deleted
daemonset.apps "kube-flannel-ds" deleted
namespace/kube-flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
serviceaccount/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-31-153:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-31-153:~$ kubectl get nodes
kubectl get pods -n kube-system
NAME                STATUS     ROLES           AGE   VERSION
control-plane-123   NotReady   control-plane   30m   v1.32.3
NAME                                        READY   STATUS    RESTARTS      AGE
coredns-668d6bf9bc-nv7bk                    0/1     Pending   0             30m
coredns-668d6bf9bc-slv4x                    0/1     Pending   0             30m
etcd-control-plane-123                      1/1     Running   1 (30m ago)   30m
kube-apiserver-control-plane-123            1/1     Running   1 (30m ago)   30m
kube-controller-manager-control-plane-123   1/1     Running   1 (30m ago)   30m
kube-proxy-6bwcv                            1/1     Running   0             30m
kube-scheduler-control-plane-123            1/1     Running   1 (30m ago)   30m
ubuntu@ip-172-31-31-153:~$ client_loop: send disconnect: Broken pipe
ibtisam@ibtisam-iq:~$ 

------------------------------------------------------------------------------------------------------------------------------------------------------

ubuntu@ip-172-31-19-56:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
144 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: ip-172-31-19-56


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: ip-172-31-19-56
========================================
📌 System Information
========================================
🔹 Hostname       : ip-172-31-19-56
🔹 Private IP     : 172.31.19.56
🔹 Public IP      : 54.161.6.151
🔹 MAC Address    : 0a:ff:cd:b8:31:d3
🔹 Network        : 127.0.0.1/8,172.31.19.56/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.4G/23G
🔹 CPU Load       :  0.80, 0.32, 0.12
🔹 UUID           : ec2cf17f97c772c6f5d9b965fbb989a9
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet set on hold.
kubeadm set on hold.
kubectl set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: downloading    |--------------------------------------|    0.0 B/9.0 KiB 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: downloading    |--------------------------------------|    0.0 B/1022.0 B 
elapsed: 0.2 s                                                                    total:  9.0 Ki (44.7 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    downloading    |--------------------------------------|    0.0 B/3.5 MiB 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.3 s                                                                    total:  10.6 K (35.1 KiB/s)                                      
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.4 s                                                                    total:  10.6 K (26.4 KiB/s)                                      
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 169.272913ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
✅ No conflicting resources found. Proceeding...

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

 ✨ k8s-cleanup.sh script is completed!

✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🚀 Running kubeadm-init.sh script...

🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0319 17:38:12.185652    5984 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [ip-172-31-19-56 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.19.56]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [ip-172-31-19-56 localhost] and IPs [172.31.19.56 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [ip-172-31-19-56 localhost] and IPs [172.31.19.56 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 1.000629426s
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.002767824s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
9acf8184c12ab683bd6f19f6317bb9c918fc07c064be421ec735461c0e0a138a
[mark-control-plane] Marking the node ip-172-31-19-56 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node ip-172-31-19-56 as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: emlijx.w8pdiny074xsz796
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.19.56:6443 --token emlijx.w8pdiny074xsz796 \
	--discovery-token-ca-cert-hash sha256:9c58e55199fc52187cd4e5ba059fe94dba0f6b03cc7a86be6276371b6db2be58 \
	--control-plane --certificate-key 9acf8184c12ab683bd6f19f6317bb9c918fc07c064be421ec735461c0e0a138a

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.19.56:6443 --token emlijx.w8pdiny074xsz796 \
	--discovery-token-ca-cert-hash sha256:9c58e55199fc52187cd4e5ba059fe94dba0f6b03cc7a86be6276371b6db2be58 

🎉 kubeadm-init.sh script is completed!

📌 Please wait, the cluster is stabilizing... Good things take time! ⏳✨

✨ **Your cluster is doing yoga—finding its inner peace before greatness!** 🧘

🎯 **Mastery takes time, but every great engineer started here! Keep going!** 💙

🌱 **Growth takes time, but oh, the view from the top is worth it!** 🚀

🌱 **Growth takes time, but oh, the view from the top is worth it!** 🚀

✨ **Your cluster is doing yoga—finding its inner peace before greatness!** 🧘

🕰️ **Good things come to those who wait…** and to those who run ‘kubectl get pods’! 😆

🚀 **Your cluster is like a rocket—fueling up for launch!** Hold tight! 🛸

🕰️ **Good things come to those who wait…** and to those who run ‘kubectl get pods’! 😆

✅ The cluster should now be stable! 🎯 Time to deploy greatness! 🚀💪
✅ Successfully executed kubeadm-init.sh.


🚀 Running kube-config-setup.sh script...

🔍 ~/.kube/config not found. Setting it up...

✅ ~/.kube/config is set.
-rw------- 1 ubuntu ubuntu 5656 Mar 19 17:40 /home/ubuntu/.kube/config

📌 KUBECONFIG set to /home/ubuntu/.kube/config

🔍 Verifying kubectl access...

Kubernetes control plane is running at https://172.31.19.56:6443
CoreDNS is running at https://172.31.19.56:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.

✅ kubectl configured successfully.

🎉 kube-config-setup.sh script is completed!
✅ Successfully executed kube-config-setup.sh.


🚀 Running network-plugin-setup.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..



🚀 Deploying Calico network plugin...
error: error validating "https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml": error validating data: failed to download openapi: Get "http://localhost:8080/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false

❌ Failed to apply Calico CNI. Exiting...

❌ Failed to execute network-plugin-setup.sh. Exiting...

ubuntu@ip-172-31-19-56:~$ ls -al
total 32
drwxr-x--- 5 ubuntu ubuntu 4096 Mar 19 17:40 .
drwxr-xr-x 3 root   root   4096 Mar 19 17:35 ..
-rw-r--r-- 1 ubuntu ubuntu  220 Mar 31  2024 .bash_logout
-rw-r--r-- 1 ubuntu ubuntu 3771 Mar 31  2024 .bashrc
drwx------ 2 ubuntu ubuntu 4096 Mar 19 17:36 .cache
drwxr-xr-x 2 root   root   4096 Mar 19 17:40 .kube
-rw-r--r-- 1 ubuntu ubuntu  807 Mar 31  2024 .profile
drwx------ 2 ubuntu ubuntu 4096 Mar 19 17:35 .ssh
-rw-r--r-- 1 ubuntu ubuntu    0 Mar 19 17:36 .sudo_as_admin_successful
ubuntu@ip-172-31-19-56:~$ ls -al .kube/config 
-rw------- 1 ubuntu ubuntu 5656 Mar 19 17:40 .kube/config
ubuntu@ip-172-31-19-56:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.19.56:6443
CoreDNS is running at https://172.31.19.56:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-19-56:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:cd:b8:31:d3 brd ff:ff:ff:ff:ff:ff
    inet 172.31.19.56/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 3200sec preferred_lft 3200sec
    inet6 fe80::8ff:cdff:feb8:31d3/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-19-56:~$ kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-19-56:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE     VERSION
ip-172-31-19-56   NotReady   control-plane   6m33s   v1.32.3
ubuntu@ip-172-31-19-56:~$ systemctl restart kubelet
==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ====
Authentication is required to restart 'kubelet.service'.
Authenticating as: Ubuntu (ubuntu)
Password: 
polkit-agent-helper-1: pam_authenticate failed: Authentication failure
==== AUTHENTICATION FAILED ====
Failed to restart kubelet.service: Access denied
See system logs and 'systemctl status kubelet.service' for details.
ubuntu@ip-172-31-19-56:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-19-56:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE     VERSION
ip-172-31-19-56   NotReady   control-plane   7m26s   v1.32.3
ubuntu@ip-172-31-19-56:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE     VERSION
ip-172-31-19-56   NotReady   control-plane   7m30s   v1.32.3
ubuntu@ip-172-31-19-56:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:cd:b8:31:d3 brd ff:ff:ff:ff:ff:ff
    inet 172.31.19.56/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 3067sec preferred_lft 3067sec
    inet6 fe80::8ff:cdff:feb8:31d3/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether c6:fe:5e:6d:8b:2a brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::c4fe:5eff:fe6d:8b2a/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-19-56:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:cd:b8:31:d3 brd ff:ff:ff:ff:ff:ff
    inet 172.31.19.56/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 3004sec preferred_lft 3004sec
    inet6 fe80::8ff:cdff:feb8:31d3/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether c6:fe:5e:6d:8b:2a brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::c4fe:5eff:fe6d:8b2a/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-19-56:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-19-56:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-19-56:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:cd:b8:31:d3 brd ff:ff:ff:ff:ff:ff
    inet 172.31.19.56/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 2974sec preferred_lft 2974sec
    inet6 fe80::8ff:cdff:feb8:31d3/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether c6:fe:5e:6d:8b:2a brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::c4fe:5eff:fe6d:8b2a/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-19-56:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:cd:b8:31:d3 brd ff:ff:ff:ff:ff:ff
    inet 172.31.19.56/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 2970sec preferred_lft 2970sec
    inet6 fe80::8ff:cdff:feb8:31d3/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether c6:fe:5e:6d:8b:2a brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::c4fe:5eff:fe6d:8b2a/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-19-56:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:cd:b8:31:d3 brd ff:ff:ff:ff:ff:ff
    inet 172.31.19.56/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 2967sec preferred_lft 2967sec
    inet6 fe80::8ff:cdff:feb8:31d3/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether c6:fe:5e:6d:8b:2a brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::c4fe:5eff:fe6d:8b2a/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-19-56:~$ sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config
ubuntu@ip-172-31-19-56:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.19.56:6443
CoreDNS is running at https://172.31.19.56:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-19-56:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE   VERSION
ip-172-31-19-56   NotReady   control-plane   10m   v1.32.3
ubuntu@ip-172-31-19-56:~$ sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
ubuntu@ip-172-31-19-56:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-19-56:~$ kubectl get nodes
kubectl cluster-info
NAME              STATUS     ROLES           AGE   VERSION
ip-172-31-19-56   NotReady   control-plane   11m   v1.32.3
Kubernetes control plane is running at https://172.31.19.56:6443
CoreDNS is running at https://172.31.19.56:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-19-56:~$ kubectl describe node ip-172-31-19-56
Name:               ip-172-31-19-56
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=ip-172-31-19-56
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        flannel.alpha.coreos.com/backend-data: {"VNI":1,"VtepMAC":"c6:fe:5e:6d:8b:2a"}
                    flannel.alpha.coreos.com/backend-type: vxlan
                    flannel.alpha.coreos.com/kube-subnet-manager: true
                    flannel.alpha.coreos.com/public-ip: 172.31.19.56
                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 17:38:20 +0000
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
                    node.kubernetes.io/not-ready:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  ip-172-31-19-56
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 17:50:29 +0000
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 17:44:38 +0000   Wed, 19 Mar 2025 17:44:38 +0000   FlannelIsUp                  Flannel is running on this node
  MemoryPressure       False   Wed, 19 Mar 2025 17:49:38 +0000   Wed, 19 Mar 2025 17:38:18 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 17:49:38 +0000   Wed, 19 Mar 2025 17:38:18 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 17:49:38 +0000   Wed, 19 Mar 2025 17:38:18 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                False   Wed, 19 Mar 2025 17:49:38 +0000   Wed, 19 Mar 2025 17:38:18 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.19.56
  Hostname:    ip-172-31-19-56
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006092Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903692Ki
  pods:               110
System Info:
  Machine ID:                 ec2cf17f97c772c6f5d9b965fbb989a9
  System UUID:                ec2cf17f-97c7-72c6-f5d9-b965fbb989a9
  Boot ID:                    9902fc71-2437-4035-98f1-faeda8784602
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (6 in total)
  Namespace                   Name                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                       ------------  ----------  ---------------  -------------  ---
  kube-flannel                kube-flannel-ds-bptrm                      100m (5%)     0 (0%)      50Mi (1%)        0 (0%)         6m
  kube-system                 etcd-ip-172-31-19-56                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         12m
  kube-system                 kube-apiserver-ip-172-31-19-56             250m (12%)    0 (0%)      0 (0%)           0 (0%)         12m
  kube-system                 kube-controller-manager-ip-172-31-19-56    200m (10%)    0 (0%)      0 (0%)           0 (0%)         12m
  kube-system                 kube-proxy-pfrxf                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         12m
  kube-system                 kube-scheduler-ip-172-31-19-56             100m (5%)     0 (0%)      0 (0%)           0 (0%)         12m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (37%)  0 (0%)
  memory             150Mi (3%)  0 (0%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type     Reason                   Age                From             Message
  ----     ------                   ----               ----             -------
  Normal   Starting                 12m                kube-proxy       
  Warning  InvalidDiskCapacity      12m                kubelet          invalid capacity 0 on image filesystem
  Normal   NodeHasSufficientMemory  12m (x8 over 12m)  kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    12m (x8 over 12m)  kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     12m (x7 over 12m)  kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   NodeAllocatableEnforced  12m                kubelet          Updated Node Allocatable limit across pods
  Normal   Starting                 12m                kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      12m                kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  12m                kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  12m                kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    12m                kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     12m                kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   RegisteredNode           12m                node-controller  Node ip-172-31-19-56 event: Registered Node ip-172-31-19-56 in Controller
  Normal   NodeHasSufficientPID     4m54s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Warning  InvalidDiskCapacity      4m54s              kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  4m54s              kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  4m54s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    4m54s              kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   Starting                 4m54s              kubelet          Starting kubelet.
  Normal   Starting                 3m5s               kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      3m5s               kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  3m5s               kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientPID     3m4s               kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   NodeHasNoDiskPressure    3m4s               kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientMemory  3m4s               kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    3m2s               kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Warning  InvalidDiskCapacity      3m2s               kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  3m2s               kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  3m2s               kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   Starting                 3m2s               kubelet          Starting kubelet.
  Normal   NodeHasSufficientPID     3m2s               kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   Starting                 54s                kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      54s                kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  54s                kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  54s                kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    54s                kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     54s                kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
ubuntu@ip-172-31-19-56:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
W0319 17:44:38.130080       1 main.go:557] no subnet found for key: FLANNEL_IPV6_SUBNET in file: /run/flannel/subnet.env
I0319 17:44:38.130105       1 iptables.go:115] Current network or subnet (10.244.0.0/16, 10.244.0.0/24) is not equal to previous one (0.0.0.0/0, 0.0.0.0/0), trying to recycle old iptables rules
I0319 17:44:38.152567       1 iptables.go:125] Setting up masking rules
I0319 17:44:38.155120       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 17:44:38.157029       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 17:44:38.157042       1 main.go:416] Running backend.
I0319 17:44:38.158766       1 vxlan_network.go:65] watching for new subnet leases
I0319 17:44:38.168188       1 main.go:437] Waiting for all goroutines to exit
I0319 17:44:38.176155       1 iptables.go:372] bootstrap done
I0319 17:44:38.184414       1 iptables.go:372] bootstrap done
ubuntu@ip-172-31-19-56:~$ ls -l /etc/cni/net.d/
cat /etc/cni/net.d/10-flannel.conflist
total 4
-rw-r--r-- 1 root root 292 Mar 19 17:44 10-flannel.conflist
{
  "name": "cbr0",
  "cniVersion": "0.3.1",
  "plugins": [
    {
      "type": "flannel",
      "delegate": {
        "hairpinMode": true,
        "isDefaultGateway": true
      }
    },
    {
      "type": "portmap",
      "capabilities": {
        "portMappings": true
      }
    }
  ]
}
ubuntu@ip-172-31-19-56:~$ kubectl delete pod -n kube-flannel --all
pod "kube-flannel-ds-bptrm" deleted
ubuntu@ip-172-31-19-56:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:cd:b8:31:d3 brd ff:ff:ff:ff:ff:ff
    inet 172.31.19.56/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 2707sec preferred_lft 2707sec
    inet6 fe80::8ff:cdff:feb8:31d3/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether c6:fe:5e:6d:8b:2a brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::c4fe:5eff:fe6d:8b2a/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-19-56:~$ kubectl delete daemonset -n kube-flannel kube-flannel-ds
kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
daemonset.apps "kube-flannel-ds" deleted
namespace/kube-flannel unchanged
clusterrole.rbac.authorization.k8s.io/flannel unchanged
clusterrolebinding.rbac.authorization.k8s.io/flannel unchanged
serviceaccount/flannel unchanged
configmap/kube-flannel-cfg unchanged
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-19-56:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-19-56:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE   VERSION
ip-172-31-19-56   NotReady   control-plane   14m   v1.32.3
ubuntu@ip-172-31-19-56:~$ sudo rm -rf /etc/cni/net.d/*
ubuntu@ip-172-31-19-56:~$ kubectl delete -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
sudo systemctl restart kubelet
namespace "kube-flannel" deleted
clusterrole.rbac.authorization.k8s.io "flannel" deleted
clusterrolebinding.rbac.authorization.k8s.io "flannel" deleted
serviceaccount "flannel" deleted
configmap "kube-flannel-cfg" deleted
daemonset.apps "kube-flannel-ds" deleted
namespace/kube-flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
serviceaccount/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-19-56:~$ kubectl get nodes
kubectl get pods -n kube-system
NAME              STATUS     ROLES           AGE   VERSION
ip-172-31-19-56   NotReady   control-plane   15m   v1.32.3
NAME                                      READY   STATUS    RESTARTS   AGE
coredns-668d6bf9bc-r2lxk                  0/1     Pending   0          15m
coredns-668d6bf9bc-sfdll                  0/1     Pending   0          15m
etcd-ip-172-31-19-56                      1/1     Running   0          15m
kube-apiserver-ip-172-31-19-56            1/1     Running   0          15m
kube-controller-manager-ip-172-31-19-56   1/1     Running   0          15m
kube-proxy-pfrxf                          1/1     Running   0          15m
kube-scheduler-ip-172-31-19-56            1/1     Running   0          15m
ubuntu@ip-172-31-19-56:~$ kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
namespace/kube-flannel unchanged
clusterrole.rbac.authorization.k8s.io/flannel unchanged
clusterrolebinding.rbac.authorization.k8s.io/flannel unchanged
serviceaccount/flannel unchanged
configmap/kube-flannel-cfg unchanged
daemonset.apps/kube-flannel-ds unchanged
ubuntu@ip-172-31-19-56:~$ kubectl get nodes
kubectl get pods -n kube-system
NAME              STATUS     ROLES           AGE   VERSION
ip-172-31-19-56   NotReady   control-plane   16m   v1.32.3
NAME                                      READY   STATUS    RESTARTS   AGE
coredns-668d6bf9bc-r2lxk                  0/1     Pending   0          16m
coredns-668d6bf9bc-sfdll                  0/1     Pending   0          16m
etcd-ip-172-31-19-56                      1/1     Running   0          16m
kube-apiserver-ip-172-31-19-56            1/1     Running   0          16m
kube-controller-manager-ip-172-31-19-56   1/1     Running   0          16m
kube-proxy-pfrxf                          1/1     Running   0          16m
kube-scheduler-ip-172-31-19-56            1/1     Running   0          16m
ubuntu@ip-172-31-19-56:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:cd:b8:31:d3 brd ff:ff:ff:ff:ff:ff
    inet 172.31.19.56/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 2501sec preferred_lft 2501sec
    inet6 fe80::8ff:cdff:feb8:31d3/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether c6:fe:5e:6d:8b:2a brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::c4fe:5eff:fe6d:8b2a/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-19-56:~$ kubectl describe node ip-172-31-19-56 | condition --10
condition: command not found
ubuntu@ip-172-31-19-56:~$ kubectl describe node ip-172-31-19-56 | grep "condition" --10
grep: unrecognized option '--10'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
ubuntu@ip-172-31-19-56:~$ kubectl describe node ip-172-31-19-56 | grep "condition" -n 10
grep: 10: No such file or directory
ubuntu@ip-172-31-19-56:~$ kubectl describe node ip-172-31-19-56 | grep -r "condition" -n 10
grep: 10: No such file or directory
ubuntu@ip-172-31-19-56:~$ kubectl describe node ip-172-31-19-56
Name:               ip-172-31-19-56
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=ip-172-31-19-56
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        flannel.alpha.coreos.com/backend-data: {"VNI":1,"VtepMAC":"c6:fe:5e:6d:8b:2a"}
                    flannel.alpha.coreos.com/backend-type: vxlan
                    flannel.alpha.coreos.com/kube-subnet-manager: true
                    flannel.alpha.coreos.com/public-ip: 172.31.19.56
                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 17:38:20 +0000
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
                    node.kubernetes.io/not-ready:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  ip-172-31-19-56
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 17:57:23 +0000
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 17:53:42 +0000   Wed, 19 Mar 2025 17:53:42 +0000   FlannelIsUp                  Flannel is running on this node
  MemoryPressure       False   Wed, 19 Mar 2025 17:53:38 +0000   Wed, 19 Mar 2025 17:38:18 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 17:53:38 +0000   Wed, 19 Mar 2025 17:38:18 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 17:53:38 +0000   Wed, 19 Mar 2025 17:38:18 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                False   Wed, 19 Mar 2025 17:53:38 +0000   Wed, 19 Mar 2025 17:38:18 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.19.56
  Hostname:    ip-172-31-19-56
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006092Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903692Ki
  pods:               110
System Info:
  Machine ID:                 ec2cf17f97c772c6f5d9b965fbb989a9
  System UUID:                ec2cf17f-97c7-72c6-f5d9-b965fbb989a9
  Boot ID:                    9902fc71-2437-4035-98f1-faeda8784602
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (6 in total)
  Namespace                   Name                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                       ------------  ----------  ---------------  -------------  ---
  kube-flannel                kube-flannel-ds-sl6f5                      100m (5%)     0 (0%)      50Mi (1%)        0 (0%)         3m49s
  kube-system                 etcd-ip-172-31-19-56                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         19m
  kube-system                 kube-apiserver-ip-172-31-19-56             250m (12%)    0 (0%)      0 (0%)           0 (0%)         19m
  kube-system                 kube-controller-manager-ip-172-31-19-56    200m (10%)    0 (0%)      0 (0%)           0 (0%)         19m
  kube-system                 kube-proxy-pfrxf                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         19m
  kube-system                 kube-scheduler-ip-172-31-19-56             100m (5%)     0 (0%)      0 (0%)           0 (0%)         19m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (37%)  0 (0%)
  memory             150Mi (3%)  0 (0%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type     Reason                   Age                From             Message
  ----     ------                   ----               ----             -------
  Normal   Starting                 18m                kube-proxy       
  Warning  InvalidDiskCapacity      19m                kubelet          invalid capacity 0 on image filesystem
  Normal   NodeHasSufficientMemory  19m (x8 over 19m)  kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    19m (x8 over 19m)  kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     19m (x7 over 19m)  kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   NodeAllocatableEnforced  19m                kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasNoDiskPressure    19m                kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Warning  InvalidDiskCapacity      19m                kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  19m                kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  19m                kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   NodeHasSufficientPID     19m                kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   Starting                 19m                kubelet          Starting kubelet.
  Normal   RegisteredNode           19m                node-controller  Node ip-172-31-19-56 event: Registered Node ip-172-31-19-56 in Controller
  Normal   Starting                 11m                kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      11m                kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  11m                kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  11m                kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    11m                kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     11m                kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   Starting                 10m                kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      10m                kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  10m                kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientPID     9m59s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   NodeHasNoDiskPressure    9m59s              kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientMemory  9m59s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   Starting                 9m57s              kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      9m57s              kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  9m57s              kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  9m57s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    9m57s              kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     9m57s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   NodeHasNoDiskPressure    7m49s              kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Warning  InvalidDiskCapacity      7m49s              kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  7m49s              kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  7m49s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   Starting                 7m49s              kubelet          Starting kubelet.
  Normal   NodeHasSufficientPID     7m49s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   NodeHasSufficientMemory  4m49s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Warning  InvalidDiskCapacity      4m49s              kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  4m49s              kubelet          Updated Node Allocatable limit across pods
  Normal   Starting                 4m49s              kubelet          Starting kubelet.
  Normal   NodeHasNoDiskPressure    4m49s              kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     4m49s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
  Normal   Starting                 3m49s              kubelet          Starting kubelet.
  Normal   NodeAllocatableEnforced  3m49s              kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  3m49s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    3m49s              kubelet          Node ip-172-31-19-56 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     3m49s              kubelet          Node ip-172-31-19-56 status is now: NodeHasSufficientPID
ubuntu@ip-172-31-19-56:~$ ls -l /etc/cni/net.d/
cat /etc/cni/net.d/10-flannel.conflist
total 4
-rw-r--r-- 1 root root 292 Mar 19 17:53 10-flannel.conflist
{
  "name": "cbr0",
  "cniVersion": "0.3.1",
  "plugins": [
    {
      "type": "flannel",
      "delegate": {
        "hairpinMode": true,
        "isDefaultGateway": true
      }
    },
    {
      "type": "portmap",
      "capabilities": {
        "portMappings": true
      }
    }
  ]
}
ubuntu@ip-172-31-19-56:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-19-56:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
W0319 17:53:42.975588       1 main.go:557] no subnet found for key: FLANNEL_IPV6_NETWORK in file: /run/flannel/subnet.env
W0319 17:53:42.975615       1 main.go:557] no subnet found for key: FLANNEL_IPV6_SUBNET in file: /run/flannel/subnet.env
I0319 17:53:42.975621       1 iptables.go:125] Setting up masking rules
I0319 17:53:42.984854       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 17:53:42.987316       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 17:53:42.987417       1 main.go:416] Running backend.
I0319 17:53:42.989649       1 vxlan_network.go:65] watching for new subnet leases
I0319 17:53:43.001981       1 main.go:437] Waiting for all goroutines to exit
I0319 17:53:43.013931       1 iptables.go:372] bootstrap done
I0319 17:53:43.018252       1 iptables.go:372] bootstrap done
ubuntu@ip-172-31-19-56:~$ sudo rm -rf /opt/cni/bin
ubuntu@ip-172-31-19-56:~$ sudo curl -L -o /opt/cni/bin/flannel https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
sudo tar -xvf /opt/cni/bin/flannel -C /opt/cni/bin/
sudo chmod +x /opt/cni/bin/*
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
Warning: Failed to open the file /opt/cni/bin/flannel: No such file or 
Warning: directory
  0 43.2M    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
curl: (23) Failure writing output to destination
tar: /opt/cni/bin/flannel: Cannot open: No such file or directory
tar: Error is not recoverable: exiting now
chmod: cannot access '/opt/cni/bin/*': No such file or directory
ubuntu@ip-172-31-19-56:~$ sudo mkdir -p /opt/cni/bin
sudo curl -L -o /opt/cni/bin/flannel https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
sudo tar -xvf /opt/cni/bin/flannel -C /opt/cni/bin/
sudo chmod +x /opt/cni/bin/*
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 43.2M  100 43.2M    0     0  91.4M      0 --:--:-- --:--:-- --:--:-- 91.4M
./
./loopback
./bandwidth
./ptp
./vlan
./host-device
./tuning
./vrf
./sbr
./tap
./dhcp
./static
./firewall
./macvlan
./dummy
./bridge
./ipvlan
./portmap
./host-local
ubuntu@ip-172-31-19-56:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-19-56:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE   VERSION
ip-172-31-19-56   NotReady   control-plane   24m   v1.32.3
ubuntu@ip-172-31-19-56:~$ sudo mkdir -p /etc/cni/net.d
sudo cp /run/flannel/subnet.env /etc/cni/net.d/
sudo systemctl restart kubelet
ubuntu@ip-172-31-19-56:~$ kubectl get pods -n kube-flannel -o wide
NAME                    READY   STATUS    RESTARTS   AGE     IP             NODE              NOMINATED NODE   READINESS GATES
kube-flannel-ds-sl6f5   1/1     Running   0          9m27s   172.31.19.56   ip-172-31-19-56   <none>           <none>
ubuntu@ip-172-31-19-56:~$ kubectl get nodes -o wide
NAME              STATUS     ROLES           AGE   VERSION   INTERNAL-IP    EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
ip-172-31-19-56   NotReady   control-plane   25m   v1.32.3   172.31.19.56   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@ip-172-31-19-56:~$ kubectl delete -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
sudo systemctl restart kubelet
namespace "kube-flannel" deleted
clusterrole.rbac.authorization.k8s.io "flannel" deleted
clusterrolebinding.rbac.authorization.k8s.io "flannel" deleted
serviceaccount "flannel" deleted
configmap "kube-flannel-cfg" deleted
daemonset.apps "kube-flannel-ds" deleted

namespace/kube-flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
serviceaccount/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created

ubuntu@ip-172-31-19-56:~$ kubectl get nodes
NAME              STATUS     ROLES           AGE   VERSION
ip-172-31-19-56   NotReady   control-plane   25m   v1.32.3
ubuntu@ip-172-31-19-56:~$ ls -l /opt/cni/bin/
total 79408
-rwxr-xr-x 1 root root  4016001 May  9  2023 bandwidth
-rwxr-xr-x 1 root root  4531309 May  9  2023 bridge
-rwxr-xr-x 1 root root 10816051 May  9  2023 dhcp
-rwxr-xr-x 1 root root  4171248 May  9  2023 dummy
-rwxr-xr-x 1 root root  4649749 May  9  2023 firewall
-rwxr-xr-x 1 root root  2835118 Mar 19 18:03 flannel
-rwxr-xr-x 1 root root  4059321 May  9  2023 host-device
-rwxr-xr-x 1 root root  3444776 May  9  2023 host-local
-rwxr-xr-x 1 root root  4193323 May  9  2023 ipvlan
-rwxr-xr-x 1 root root  3514598 May  9  2023 loopback
-rwxr-xr-x 1 root root  4227193 May  9  2023 macvlan
-rwxr-xr-x 1 root root  3955775 May  9  2023 portmap
-rwxr-xr-x 1 root root  4348835 May  9  2023 ptp
-rwxr-xr-x 1 root root  3716095 May  9  2023 sbr
-rwxr-xr-x 1 root root  2984504 May  9  2023 static
-rwxr-xr-x 1 root root  4258344 May  9  2023 tap
-rwxr-xr-x 1 root root  3603365 May  9  2023 tuning
-rwxr-xr-x 1 root root  4187498 May  9  2023 vlan
-rwxr-xr-x 1 root root  3754911 May  9  2023 vrf
ubuntu@ip-172-31-19-56:~$ cat /etc/cni/net.d/10-flannel.conflist
{
  "name": "cbr0",
  "cniVersion": "0.3.1",
  "plugins": [
    {
      "type": "flannel",
      "delegate": {
        "hairpinMode": true,
        "isDefaultGateway": true
      }
    },
    {
      "type": "portmap",
      "capabilities": {
        "portMappings": true
      }
    }
  ]
}
ubuntu@ip-172-31-19-56:~$ ip a | grep flannel
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    inet 10.244.0.0/32 scope global flannel.1
ubuntu@ip-172-31-19-56:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:cd:b8:31:d3 brd ff:ff:ff:ff:ff:ff
    inet 172.31.19.56/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 1871sec preferred_lft 1871sec
    inet6 fe80::8ff:cdff:feb8:31d3/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether c6:fe:5e:6d:8b:2a brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::c4fe:5eff:fe6d:8b2a/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-19-56:~$ sudo journalctl -u kubelet -f --no-pager
Mar 19 18:05:56 ip-172-31-19-56 kubelet[13325]: E0319 18:05:56.322267   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:01 ip-172-31-19-56 kubelet[13325]: E0319 18:06:01.323442   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:06 ip-172-31-19-56 kubelet[13325]: E0319 18:06:06.324811   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:11 ip-172-31-19-56 kubelet[13325]: E0319 18:06:11.326123   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:16 ip-172-31-19-56 kubelet[13325]: E0319 18:06:16.327099   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:21 ip-172-31-19-56 kubelet[13325]: E0319 18:06:21.328866   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:26 ip-172-31-19-56 kubelet[13325]: E0319 18:06:26.329743   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:31 ip-172-31-19-56 kubelet[13325]: E0319 18:06:31.330661   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:36 ip-172-31-19-56 kubelet[13325]: E0319 18:06:36.331967   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:41 ip-172-31-19-56 kubelet[13325]: E0319 18:06:41.333732   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:46 ip-172-31-19-56 kubelet[13325]: E0319 18:06:46.334561   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:51 ip-172-31-19-56 kubelet[13325]: E0319 18:06:51.336515   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:06:56 ip-172-31-19-56 kubelet[13325]: E0319 18:06:56.337165   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:07:01 ip-172-31-19-56 kubelet[13325]: E0319 18:07:01.338596   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:07:06 ip-172-31-19-56 kubelet[13325]: E0319 18:07:06.339717   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:07:11 ip-172-31-19-56 kubelet[13325]: E0319 18:07:11.341167   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:07:16 ip-172-31-19-56 kubelet[13325]: E0319 18:07:16.341906   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:07:21 ip-172-31-19-56 kubelet[13325]: E0319 18:07:21.343313   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:07:26 ip-172-31-19-56 kubelet[13325]: E0319 18:07:26.344526   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:07:31 ip-172-31-19-56 kubelet[13325]: E0319 18:07:31.345231   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:07:36 ip-172-31-19-56 kubelet[13325]: E0319 18:07:36.346294   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
^C
ubuntu@ip-172-31-19-56:~$ kubectl get pods -n kube-flannel -o wide
NAME                    READY   STATUS    RESTARTS   AGE    IP             NODE              NOMINATED NODE   READINESS GATES
kube-flannel-ds-9fvc2   1/1     Running   0          4m1s   172.31.19.56   ip-172-31-19-56   <none>           <none>
ubuntu@ip-172-31-19-56:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
W0319 18:03:50.375014       1 main.go:557] no subnet found for key: FLANNEL_IPV6_NETWORK in file: /run/flannel/subnet.env
W0319 18:03:50.375043       1 main.go:557] no subnet found for key: FLANNEL_IPV6_SUBNET in file: /run/flannel/subnet.env
I0319 18:03:50.375049       1 iptables.go:125] Setting up masking rules
I0319 18:03:50.382743       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 18:03:50.387086       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 18:03:50.387104       1 main.go:416] Running backend.
I0319 18:03:50.389607       1 vxlan_network.go:65] watching for new subnet leases
I0319 18:03:50.397676       1 main.go:437] Waiting for all goroutines to exit
I0319 18:03:50.409034       1 iptables.go:372] bootstrap done
I0319 18:03:50.412293       1 iptables.go:372] bootstrap done
ubuntu@ip-172-31-19-56:~$ ls -l /etc/cni/net.d/
cat /etc/cni/net.d/10-flannel.conflist
total 8
-rw-r--r-- 1 root root 292 Mar 19 18:03 10-flannel.conflist
-rw-r--r-- 1 root root  96 Mar 19 18:02 subnet.env
{
  "name": "cbr0",
  "cniVersion": "0.3.1",
  "plugins": [
    {
      "type": "flannel",
      "delegate": {
        "hairpinMode": true,
        "isDefaultGateway": true
      }
    },
    {
      "type": "portmap",
      "capabilities": {
        "portMappings": true
      }
    }
  ]
}
ubuntu@ip-172-31-19-56:~$ ls -l /opt/cni/bin/
total 79408
-rwxr-xr-x 1 root root  4016001 May  9  2023 bandwidth
-rwxr-xr-x 1 root root  4531309 May  9  2023 bridge
-rwxr-xr-x 1 root root 10816051 May  9  2023 dhcp
-rwxr-xr-x 1 root root  4171248 May  9  2023 dummy
-rwxr-xr-x 1 root root  4649749 May  9  2023 firewall
-rwxr-xr-x 1 root root  2835118 Mar 19 18:03 flannel
-rwxr-xr-x 1 root root  4059321 May  9  2023 host-device
-rwxr-xr-x 1 root root  3444776 May  9  2023 host-local
-rwxr-xr-x 1 root root  4193323 May  9  2023 ipvlan
-rwxr-xr-x 1 root root  3514598 May  9  2023 loopback
-rwxr-xr-x 1 root root  4227193 May  9  2023 macvlan
-rwxr-xr-x 1 root root  3955775 May  9  2023 portmap
-rwxr-xr-x 1 root root  4348835 May  9  2023 ptp
-rwxr-xr-x 1 root root  3716095 May  9  2023 sbr
-rwxr-xr-x 1 root root  2984504 May  9  2023 static
-rwxr-xr-x 1 root root  4258344 May  9  2023 tap
-rwxr-xr-x 1 root root  3603365 May  9  2023 tuning
-rwxr-xr-x 1 root root  4187498 May  9  2023 vlan
-rwxr-xr-x 1 root root  3754911 May  9  2023 vrf
ubuntu@ip-172-31-19-56:~$ ps aux | grep kubelet
root        6364  2.6  7.0 1521840 282540 ?      Ssl  17:38   0:49 kube-apiserver --advertise-address=172.31.19.56 --allow-privileged=true --authorization-mode=Node,RBAC --client-ca-file=/etc/kubernetes/pki/ca.crt --enable-admission-plugins=NodeRestriction --enable-bootstrap-token-auth=true --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key --etcd-servers=https://127.0.0.1:2379 --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key --requestheader-allowed-names=front-proxy-client --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --secure-port=6443 --service-account-issuer=https://kubernetes.default.svc.cluster.local --service-account-key-file=/etc/kubernetes/pki/sa.pub --service-account-signing-key-file=/etc/kubernetes/pki/sa.key --service-cluster-ip-range=10.96.0.0/12 --tls-cert-file=/etc/kubernetes/pki/apiserver.crt --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
root       13325  2.0  2.3 1970336 94208 ?       Ssl  18:03   0:07 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/containerd/containerd.sock --pod-infra-container-image=registry.k8s.io/pause:3.10
ubuntu     15025  0.0  0.0   7076  2048 pts/0    S+   18:09   0:00 grep --color=auto kubelet
ubuntu@ip-172-31-19-56:~$ sudo /opt/cni/bin/flannel
CNI Plugin flannel version v1.0.0-dev+.dirty (linux/amd64) commit .dirty built on 2025-01-31T08:53:49Z
CNI protocol versions supported: 0.1.0, 0.2.0, 0.3.0, 0.3.1, 0.4.0, 1.0.0, 1.1.0
ubuntu@ip-172-31-19-56:~$ sudo journalctl -u kubelet -f --no-pager | grep -i "cni"
Mar 19 18:10:21 ip-172-31-19-56 kubelet[13325]: E0319 18:10:21.392844   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:10:26 ip-172-31-19-56 kubelet[13325]: E0319 18:10:26.394082   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:10:31 ip-172-31-19-56 kubelet[13325]: E0319 18:10:31.395607   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:10:36 ip-172-31-19-56 kubelet[13325]: E0319 18:10:36.397176   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:10:41 ip-172-31-19-56 kubelet[13325]: E0319 18:10:41.399112   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:10:46 ip-172-31-19-56 kubelet[13325]: E0319 18:10:46.400120   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:10:51 ip-172-31-19-56 kubelet[13325]: E0319 18:10:51.401741   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:10:56 ip-172-31-19-56 kubelet[13325]: E0319 18:10:56.403287   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:11:01 ip-172-31-19-56 kubelet[13325]: E0319 18:11:01.404657   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:11:06 ip-172-31-19-56 kubelet[13325]: E0319 18:11:06.406306   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 18:11:11 ip-172-31-19-56 kubelet[13325]: E0319 18:11:11.407398   13325 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
^C
ubuntu@ip-172-31-19-56:~$ 
Broadcast message from root@ip-172-31-19-56 (Wed 2025-03-19 18:12:15 UTC):

The system will power off now!

Connection to ec2-54-161-6-151.compute-1.amazonaws.com closed by remote host.
Connection to ec2-54-161-6-151.compute-1.amazonaws.com closed.
ibtisam@ibtisam-iq:~$ ssh -i "silverinit.pem" ubuntu@ec2-52-23-238-129.compute-1.amazonaws.com
The authenticity of host 'ec2-52-23-238-129.compute-1.amazonaws.com (52.23.238.129)' can't be established.
ED25519 key fingerprint is SHA256:RIWpZsvGxK1r9c4zQmtml1v8fO8I9GF6ZwzFtpAr7bQ.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'ec2-52-23-238-129.compute-1.amazonaws.com' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04.1 LTS (GNU/Linux 6.8.0-1021-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Wed Mar 19 18:14:23 UTC 2025

  System load:  0.49              Processes:             131
  Usage of /:   9.1% of 18.33GB   Users logged in:       0
  Memory usage: 5%                IPv4 address for enX0: 172.31.22.219
  Swap usage:   0%

Expanded Security Maintenance for Applications is not enabled.

0 updates can be applied immediately.

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


The list of available updates is more than a week old.
To check for new updates run: sudo apt update


The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

ubuntu@ip-172-31-22-219:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
144 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: ip-172-31-22-219


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: ip-172-31-22-219
========================================
📌 System Information
========================================
🔹 Hostname       : ip-172-31-22-219
🔹 Private IP     : 172.31.22.219
🔹 Public IP      : 52.23.238.129
🔹 MAC Address    : 0a:ff:c3:30:a3:6d
🔹 Network        : 127.0.0.1/8,172.31.22.219/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 2.3G/23G
🔹 CPU Load       :  0.67, 0.26, 0.10
🔹 UUID           : ec2c9378ee283dbbc2763b258f38d3a8
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet set on hold.
kubeadm set on hold.
kubectl set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: waiting        |--------------------------------------| 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    waiting        |--------------------------------------| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: waiting        |--------------------------------------| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    waiting        |--------------------------------------| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: waiting        |--------------------------------------| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    downloading    |--------------------------------------|    0.0 B/3.5 MiB 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   downloading    |--------------------------------------|    0.0 B/581.0 B 
elapsed: 0.3 s                                                                    total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    waiting        |--------------------------------------| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: waiting        |--------------------------------------| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.4 s                                                                    total:  3.5 Mi (8.7 MiB/s)                                       
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.5 s                                                                    total:  3.5 Mi (6.9 MiB/s)                                       
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 169.600803ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
✅ No conflicting resources found. Proceeding...

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

 ✨ k8s-cleanup.sh script is completed!

✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🚀 Running kubeadm-init.sh script...

🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0319 18:17:55.791499    5995 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [ip-172-31-22-219 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.22.219]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [ip-172-31-22-219 localhost] and IPs [172.31.22.219 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [ip-172-31-22-219 localhost] and IPs [172.31.22.219 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 502.209882ms
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 6.001975053s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
1bb319dc64210cdd60e886ec3c226263889c268af74e3225ae7fc29ba32966e2
[mark-control-plane] Marking the node ip-172-31-22-219 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node ip-172-31-22-219 as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: 7mhnqi.ruv2hg0vrufzszmg
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.22.219:6443 --token 7mhnqi.ruv2hg0vrufzszmg \
	--discovery-token-ca-cert-hash sha256:be8b8b4596b9061297524a2848c5493cb9f42c463d3ad41e341d99694d910615 \
	--control-plane --certificate-key 1bb319dc64210cdd60e886ec3c226263889c268af74e3225ae7fc29ba32966e2

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.22.219:6443 --token 7mhnqi.ruv2hg0vrufzszmg \
	--discovery-token-ca-cert-hash sha256:be8b8b4596b9061297524a2848c5493cb9f42c463d3ad41e341d99694d910615 

🎉 kubeadm-init.sh script is completed!

📌 Please wait, the cluster is stabilizing... Good things take time! ⏳✨

🏗️ **Every strong system starts with a stable foundation. Kubernetes is no different!** 🏛️

🎯 **Mastery takes time, but every great engineer started here! Keep going!** 💙

📈 **Success is not a straight line, but a rolling update! Keep upgrading!** 🔄

💡 **Patience is not just waiting, but keeping a great attitude while waiting!** 😃

🚀 **Your cluster is like a rocket—fueling up for launch!** Hold tight! 🛸

🏗️ **Every strong system starts with a stable foundation. Kubernetes is no different!** 🏛️

📈 **Success is not a straight line, but a rolling update! Keep upgrading!** 🔄

🎯 **Mastery takes time, but every great engineer started here! Keep going!** 💙

✅ The cluster should now be stable! 🎯 Time to deploy greatness! 🚀💪
✅ Successfully executed kubeadm-init.sh.


🩺 Checking Kubernetes cluster status...
E0319 18:20:07.009417    6758 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 18:20:07.010801    6758 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 18:20:07.012180    6758 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 18:20:07.013604    6758 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 18:20:07.014956    6758 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
The connection to the server localhost:8080 was refused - did you specify the right host or port?

❌ Error at line 42. Exiting...
ubuntu@ip-172-31-22-219:~$ kubectl cluster-info
E0319 18:38:09.876784    6938 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 18:38:09.878173    6938 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 18:38:09.879531    6938 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 18:38:09.880809    6938 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"
E0319 18:38:09.882155    6938 memcache.go:265] "Unhandled Error" err="couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused"

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
The connection to the server localhost:8080 was refused - did you specify the right host or port?
ubuntu@ip-172-31-22-219:~$ mkdir -p $HOME/.kube
ubuntu@ip-172-31-22-219:~$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
ubuntu@ip-172-31-22-219:~$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
ubuntu@ip-172-31-22-219:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.22.219:6443
CoreDNS is running at https://172.31.22.219:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-22-219:~$ kubectl get po -A
NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE
kube-system   coredns-668d6bf9bc-kbg49                   0/1     Pending   0          22m
kube-system   coredns-668d6bf9bc-lqrj8                   0/1     Pending   0          22m
kube-system   etcd-ip-172-31-22-219                      1/1     Running   0          22m
kube-system   kube-apiserver-ip-172-31-22-219            1/1     Running   0          22m
kube-system   kube-controller-manager-ip-172-31-22-219   1/1     Running   0          22m
kube-system   kube-proxy-fclwq                           1/1     Running   0          22m
kube-system   kube-scheduler-ip-172-31-22-219            1/1     Running   0          22m
ubuntu@ip-172-31-22-219:~$ kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-22-219:~$ kubectl get po -A
NAMESPACE      NAME                                       READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-64lsn                      1/1     Running   0          14s
kube-system    coredns-668d6bf9bc-kbg49                   0/1     Pending   0          22m
kube-system    coredns-668d6bf9bc-lqrj8                   0/1     Pending   0          22m
kube-system    etcd-ip-172-31-22-219                      1/1     Running   0          22m
kube-system    kube-apiserver-ip-172-31-22-219            1/1     Running   0          22m
kube-system    kube-controller-manager-ip-172-31-22-219   1/1     Running   0          22m
kube-system    kube-proxy-fclwq                           1/1     Running   0          22m
kube-system    kube-scheduler-ip-172-31-22-219            1/1     Running   0          22m
ubuntu@ip-172-31-22-219:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-22-219:~$ kubectl get po -A
NAMESPACE      NAME                                       READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-64lsn                      1/1     Running   0          75s
kube-system    coredns-668d6bf9bc-kbg49                   0/1     Pending   0          23m
kube-system    coredns-668d6bf9bc-lqrj8                   0/1     Pending   0          23m
kube-system    etcd-ip-172-31-22-219                      1/1     Running   0          23m
kube-system    kube-apiserver-ip-172-31-22-219            1/1     Running   0          23m
kube-system    kube-controller-manager-ip-172-31-22-219   1/1     Running   0          23m
kube-system    kube-proxy-fclwq                           1/1     Running   0          23m
kube-system    kube-scheduler-ip-172-31-22-219            1/1     Running   0          23m
ubuntu@ip-172-31-22-219:~$ ifconfig
enX0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001
        inet 172.31.22.219  netmask 255.255.240.0  broadcast 172.31.31.255
        inet6 fe80::8ff:c3ff:fe30:a36d  prefixlen 64  scopeid 0x20<link>
        ether 0a:ff:c3:30:a3:6d  txqueuelen 1000  (Ethernet)
        RX packets 372541  bytes 551520871 (551.5 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 42094  bytes 3206768 (3.2 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

flannel.1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.0  netmask 255.255.255.255  broadcast 0.0.0.0
        inet6 fe80::c0c5:63ff:fe15:e2ba  prefixlen 64  scopeid 0x20<link>
        ether c2:c5:63:15:e2:ba  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 10 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 262615  bytes 54192797 (54.1 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 262615  bytes 54192797 (54.1 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ubuntu@ip-172-31-22-219:~$ kubectl get nodes
NAME               STATUS     ROLES           AGE   VERSION
ip-172-31-22-219   NotReady   control-plane   24m   v1.32.3
ubuntu@ip-172-31-22-219:~$ kubectl describe node ip-172-31-22-219
Name:               ip-172-31-22-219
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=ip-172-31-22-219
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        flannel.alpha.coreos.com/backend-data: {"VNI":1,"VtepMAC":"c2:c5:63:15:e2:ba"}
                    flannel.alpha.coreos.com/backend-type: vxlan
                    flannel.alpha.coreos.com/kube-subnet-manager: true
                    flannel.alpha.coreos.com/public-ip: 172.31.22.219
                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 18:18:03 +0000
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
                    node.kubernetes.io/not-ready:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  ip-172-31-22-219
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 18:43:12 +0000
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 18:40:52 +0000   Wed, 19 Mar 2025 18:40:52 +0000   FlannelIsUp                  Flannel is running on this node
  MemoryPressure       False   Wed, 19 Mar 2025 18:41:50 +0000   Wed, 19 Mar 2025 18:18:02 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 18:41:50 +0000   Wed, 19 Mar 2025 18:18:02 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 18:41:50 +0000   Wed, 19 Mar 2025 18:18:02 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                False   Wed, 19 Mar 2025 18:41:50 +0000   Wed, 19 Mar 2025 18:18:02 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.22.219
  Hostname:    ip-172-31-22-219
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006092Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903692Ki
  pods:               110
System Info:
  Machine ID:                 ec2c9378ee283dbbc2763b258f38d3a8
  System UUID:                ec2c9378-ee28-3dbb-c276-3b258f38d3a8
  Boot ID:                    accbc7a5-4ab9-4dc7-859f-66d1360643d0
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (6 in total)
  Namespace                   Name                                        CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                        ------------  ----------  ---------------  -------------  ---
  kube-flannel                kube-flannel-ds-64lsn                       100m (5%)     0 (0%)      50Mi (1%)        0 (0%)         2m33s
  kube-system                 etcd-ip-172-31-22-219                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         25m
  kube-system                 kube-apiserver-ip-172-31-22-219             250m (12%)    0 (0%)      0 (0%)           0 (0%)         25m
  kube-system                 kube-controller-manager-ip-172-31-22-219    200m (10%)    0 (0%)      0 (0%)           0 (0%)         25m
  kube-system                 kube-proxy-fclwq                            0 (0%)        0 (0%)      0 (0%)           0 (0%)         25m
  kube-system                 kube-scheduler-ip-172-31-22-219             100m (5%)     0 (0%)      0 (0%)           0 (0%)         25m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (37%)  0 (0%)
  memory             150Mi (3%)  0 (0%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type     Reason                   Age   From             Message
  ----     ------                   ----  ----             -------
  Normal   Starting                 25m   kube-proxy       
  Normal   NodeHasSufficientPID     25m   kubelet          Node ip-172-31-22-219 status is now: NodeHasSufficientPID
  Warning  InvalidDiskCapacity      25m   kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  25m   kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  25m   kubelet          Node ip-172-31-22-219 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    25m   kubelet          Node ip-172-31-22-219 status is now: NodeHasNoDiskPressure
  Normal   Starting                 25m   kubelet          Starting kubelet.
  Normal   RegisteredNode           25m   node-controller  Node ip-172-31-22-219 event: Registered Node ip-172-31-22-219 in Controller
  Normal   Starting                 90s   kubelet          Starting kubelet.
  Normal   NodeAllocatableEnforced  90s   kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  90s   kubelet          Node ip-172-31-22-219 status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    90s   kubelet          Node ip-172-31-22-219 status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     90s   kubelet          Node ip-172-31-22-219 status is now: NodeHasSufficientPID
ubuntu@ip-172-31-22-219:~$ journalctl -u kubelet
Mar 19 18:17:33 ip-172-31-22-219 systemd[1]: Started kubelet.service - kubelet: The Kubernetes Node Agent.
Mar 19 18:17:33 ip-172-31-22-219 (kubelet)[5900]: kubelet.service: Referenced but unset environment variable evaluates to an empty string: KUBELET_KUBEADM_ARGS
Mar 19 18:17:33 ip-172-31-22-219 kubelet[5900]: E0319 18:17:33.347113    5900 run.go:72] "command failed" err="failed to load kubelet config file, path: /var/lib/kubelet/config.yaml, error:>
Mar 19 18:17:33 ip-172-31-22-219 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Mar 19 18:17:33 ip-172-31-22-219 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Mar 19 18:17:43 ip-172-31-22-219 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 1.
Mar 19 18:17:43 ip-172-31-22-219 systemd[1]: Started kubelet.service - kubelet: The Kubernetes Node Agent.
Mar 19 18:17:43 ip-172-31-22-219 (kubelet)[5957]: kubelet.service: Referenced but unset environment variable evaluates to an empty string: KUBELET_KUBEADM_ARGS
Mar 19 18:17:43 ip-172-31-22-219 kubelet[5957]: E0319 18:17:43.756291    5957 run.go:72] "command failed" err="failed to load kubelet config file, path: /var/lib/kubelet/config.yaml, error:>
Mar 19 18:17:43 ip-172-31-22-219 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Mar 19 18:17:43 ip-172-31-22-219 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Mar 19 18:17:53 ip-172-31-22-219 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 2.
Mar 19 18:17:53 ip-172-31-22-219 systemd[1]: Started kubelet.service - kubelet: The Kubernetes Node Agent.
Mar 19 18:17:53 ip-172-31-22-219 (kubelet)[5986]: kubelet.service: Referenced but unset environment variable evaluates to an empty string: KUBELET_KUBEADM_ARGS
Mar 19 18:17:54 ip-172-31-22-219 kubelet[5986]: E0319 18:17:54.016017    5986 run.go:72] "command failed" err="failed to load kubelet config file, path: /var/lib/kubelet/config.yaml, error:>
Mar 19 18:17:54 ip-172-31-22-219 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Mar 19 18:17:54 ip-172-31-22-219 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Mar 19 18:17:58 ip-172-31-22-219 systemd[1]: Stopped kubelet.service - kubelet: The Kubernetes Node Agent.
Mar 19 18:17:58 ip-172-31-22-219 systemd[1]: Started kubelet.service - kubelet: The Kubernetes Node Agent.
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: Flag --container-runtime-endpoint has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config f>
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.35. Image garbage collector will get sandbox image information fro>
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.639202    6067 server.go:215] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and sh>
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.874361    6067 server.go:520] "Kubelet version" kubeletVersion="v1.32.3"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.874610    6067 server.go:522] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.874940    6067 server.go:954] "Client rotation is on, will bootstrap in background"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: E0319 18:17:58.880631    6067 certificate_manager.go:562] "Unhandled Error" err="kubernetes.io/kube-apiserver-client-kubelet: Failed while re>
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.881925    6067 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: E0319 18:17:58.885449    6067 log.go:32] "RuntimeConfig from runtime service failed" err="rpc error: code = Unimplemented desc = unknown meth>
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.885486    6067 server.go:1421] "CRI implementation should be updated to support RuntimeConfig when KubeletCgroupDriverFromCRI >
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.888248    6067 server.go:772] "--cgroups-per-qos enabled, but --cgroup-root was not specified.  defaulting to /"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.888410    6067 container_manager_linux.go:268] "Container manager verified user specified cgroup-root exists" cgroupRoot=[]
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.888437    6067 container_manager_linux.go:273] "Creating Container Manager object based on Node Config" nodeConfig={"NodeName">
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.888591    6067 topology_manager.go:138] "Creating topology manager with none policy"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.888599    6067 container_manager_linux.go:304] "Creating device plugin manager"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.888678    6067 state_mem.go:36] "Initialized new in-memory state store"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.888798    6067 kubelet.go:446] "Attempting to sync node with API server"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.888812    6067 kubelet.go:341] "Adding static pod path" path="/etc/kubernetes/manifests"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.888827    6067 kubelet.go:352] "Adding apiserver pod source"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.888836    6067 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.889466    6067 kuberuntime_manager.go:269] "Container runtime initialized" containerRuntime="containerd" version="1.7.25" apiV>
Mar 19 18:17:58 ip-172-31-22-219 kubelet[6067]: I0319 18:17:58.890162    6067 kubelet.go:890] "Not starting ClusterTrustBundle informer because we are in static kubelet mode"

ubuntu@ip-172-31-22-219:~$ ls -l /var/lib/kubelet/config.yaml
ls: cannot access '/var/lib/kubelet/config.yaml': Permission denied
ubuntu@ip-172-31-22-219:~$ sudo ls -l /var/lib/kubelet/config.yaml
-rw-r--r-- 1 root root 1123 Mar 19 18:17 /var/lib/kubelet/config.yaml
ubuntu@ip-172-31-22-219:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-22-219:~$ sudo systemctl daemon-reload
sudo systemctl restart kubelet
ubuntu@ip-172-31-22-219:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.22.219:6443
CoreDNS is running at https://172.31.22.219:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-22-219:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 0a:ff:c3:30:a3:6d brd ff:ff:ff:ff:ff:ff
    inet 172.31.22.219/20 metric 100 brd 172.31.31.255 scope global dynamic enX0
       valid_lft 3137sec preferred_lft 3137sec
    inet6 fe80::8ff:c3ff:fe30:a36d/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether c2:c5:63:15:e2:ba brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::c0c5:63ff:fe15:e2ba/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@ip-172-31-22-219:~$ kubectl delete -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace "kube-flannel" deleted
serviceaccount "flannel" deleted
clusterrole.rbac.authorization.k8s.io "flannel" deleted
clusterrolebinding.rbac.authorization.k8s.io "flannel" deleted
configmap "kube-flannel-cfg" deleted
daemonset.apps "kube-flannel-ds" deleted
ubuntu@ip-172-31-22-219:~$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
namespace/kube-flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
serviceaccount/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@ip-172-31-22-219:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-22-219:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.22.219:6443
CoreDNS is running at https://172.31.22.219:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@ip-172-31-22-219:~$ kubectl get nodes
NAME               STATUS     ROLES           AGE   VERSION
ip-172-31-22-219   NotReady   control-plane   51m   v1.32.3
ubuntu@ip-172-31-22-219:~$ sudo systemctl daemon-reload
sudo systemctl restart kubelet
ubuntu@ip-172-31-22-219:~$ sudo journalctl -u kubelet -f --no-pager
Mar 19 19:09:59 ip-172-31-22-219 kubelet[14768]: I0319 19:09:59.838994   14768 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"run\" (UniqueName: \"kubernetes.io/host-path/c6590420-6e50-4f3e-a8ef-4ef72906f21c-run\") pod \"kube-flannel-ds-clhbs\" (UID: \"c6590420-6e50-4f3e-a8ef-4ef72906f21c\") " pod="kube-flannel/kube-flannel-ds-clhbs"
Mar 19 19:09:59 ip-172-31-22-219 kubelet[14768]: I0319 19:09:59.839032   14768 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/7ccf763a-a29f-402b-a77b-bde38abc47c8-xtables-lock\") pod \"kube-proxy-fclwq\" (UID: \"7ccf763a-a29f-402b-a77b-bde38abc47c8\") " pod="kube-system/kube-proxy-fclwq"
Mar 19 19:09:59 ip-172-31-22-219 kubelet[14768]: I0319 19:09:59.839052   14768 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni\" (UniqueName: \"kubernetes.io/host-path/c6590420-6e50-4f3e-a8ef-4ef72906f21c-cni\") pod \"kube-flannel-ds-clhbs\" (UID: \"c6590420-6e50-4f3e-a8ef-4ef72906f21c\") " pod="kube-flannel/kube-flannel-ds-clhbs"
Mar 19 19:09:59 ip-172-31-22-219 kubelet[14768]: I0319 19:09:59.839067   14768 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/7ccf763a-a29f-402b-a77b-bde38abc47c8-lib-modules\") pod \"kube-proxy-fclwq\" (UID: \"7ccf763a-a29f-402b-a77b-bde38abc47c8\") " pod="kube-system/kube-proxy-fclwq"
Mar 19 19:09:59 ip-172-31-22-219 kubelet[14768]: I0319 19:09:59.839092   14768 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"cni-plugin\" (UniqueName: \"kubernetes.io/host-path/c6590420-6e50-4f3e-a8ef-4ef72906f21c-cni-plugin\") pod \"kube-flannel-ds-clhbs\" (UID: \"c6590420-6e50-4f3e-a8ef-4ef72906f21c\") " pod="kube-flannel/kube-flannel-ds-clhbs"
Mar 19 19:09:59 ip-172-31-22-219 kubelet[14768]: I0319 19:09:59.839113   14768 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/c6590420-6e50-4f3e-a8ef-4ef72906f21c-xtables-lock\") pod \"kube-flannel-ds-clhbs\" (UID: \"c6590420-6e50-4f3e-a8ef-4ef72906f21c\") " pod="kube-flannel/kube-flannel-ds-clhbs"
Mar 19 19:09:59 ip-172-31-22-219 kubelet[14768]: I0319 19:09:59.898263   14768 kubelet.go:3194] "Creating a mirror pod for static pod" pod="kube-system/kube-scheduler-ip-172-31-22-219"
Mar 19 19:09:59 ip-172-31-22-219 kubelet[14768]: I0319 19:09:59.898698   14768 kubelet.go:3194] "Creating a mirror pod for static pod" pod="kube-system/kube-apiserver-ip-172-31-22-219"
Mar 19 19:09:59 ip-172-31-22-219 kubelet[14768]: E0319 19:09:59.910292   14768 kubelet.go:3196] "Failed creating a mirror pod" err="pods \"kube-scheduler-ip-172-31-22-219\" already exists" pod="kube-system/kube-scheduler-ip-172-31-22-219"
Mar 19 19:09:59 ip-172-31-22-219 kubelet[14768]: E0319 19:09:59.911362   14768 kubelet.go:3196] "Failed creating a mirror pod" err="pods \"kube-apiserver-ip-172-31-22-219\" already exists" pod="kube-system/kube-apiserver-ip-172-31-22-219"
^C
ubuntu@ip-172-31-22-219:~$ kubectl delete pod kube-scheduler-ip-172-31-22-219 -n kube-system --force --grace-period=0
kubectl delete pod kube-apiserver-ip-172-31-22-219 -n kube-system --force --grace-period=0
Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.
pod "kube-scheduler-ip-172-31-22-219" force deleted
Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.
pod "kube-apiserver-ip-172-31-22-219" force deleted
ubuntu@ip-172-31-22-219:~$ sudo systemctl restart kubelet
ubuntu@ip-172-31-22-219:~$ ls -l /etc/kubernetes/manifests/
total 16
-rw------- 1 root root 2561 Mar 19 18:17 etcd.yaml
-rw------- 1 root root 3887 Mar 19 18:17 kube-apiserver.yaml
-rw------- 1 root root 3393 Mar 19 18:17 kube-controller-manager.yaml
-rw------- 1 root root 1656 Mar 19 18:17 kube-scheduler.yaml
ubuntu@ip-172-31-22-219:~$ cat /var/lib/kubelet/config.yaml
cat: /var/lib/kubelet/config.yaml: Permission denied
ubuntu@ip-172-31-22-219:~$ sudo cat /var/lib/kubelet/config.yaml
apiVersion: kubelet.config.k8s.io/v1beta1
authentication:
  anonymous:
    enabled: false
  webhook:
    cacheTTL: 0s
    enabled: true
  x509:
    clientCAFile: /etc/kubernetes/pki/ca.crt
authorization:
  mode: Webhook
  webhook:
    cacheAuthorizedTTL: 0s
    cacheUnauthorizedTTL: 0s
cgroupDriver: systemd
clusterDNS:
- 10.96.0.10
clusterDomain: cluster.local
containerRuntimeEndpoint: ""
cpuManagerReconcilePeriod: 0s
crashLoopBackOff: {}
evictionPressureTransitionPeriod: 0s
fileCheckFrequency: 0s
healthzBindAddress: 127.0.0.1
healthzPort: 10248
httpCheckFrequency: 0s
imageMaximumGCAge: 0s
imageMinimumGCAge: 0s
kind: KubeletConfiguration
logging:
  flushFrequency: 0
  options:
    json:
      infoBufferSize: "0"
    text:
      infoBufferSize: "0"
  verbosity: 0
memorySwap: {}
nodeStatusReportFrequency: 0s
nodeStatusUpdateFrequency: 0s
resolvConf: /run/systemd/resolve/resolv.conf
rotateCertificates: true
runtimeRequestTimeout: 0s
shutdownGracePeriod: 0s
shutdownGracePeriodCriticalPods: 0s
staticPodPath: /etc/kubernetes/manifests
streamingConnectionIdleTimeout: 0s
syncFrequency: 0s
volumeStatsAggPeriod: 0s
ubuntu@ip-172-31-22-219:~$ kubectl get nodes
kubectl get pods -A
NAME               STATUS     ROLES           AGE   VERSION
ip-172-31-22-219   NotReady   control-plane   54m   v1.32.3
NAMESPACE      NAME                                       READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-clhbs                      1/1     Running   0          4m4s
kube-system    coredns-668d6bf9bc-kbg49                   0/1     Pending   0          54m
kube-system    coredns-668d6bf9bc-lqrj8                   0/1     Pending   0          54m
kube-system    etcd-ip-172-31-22-219                      1/1     Running   0          54m
kube-system    kube-apiserver-ip-172-31-22-219            1/1     Running   0          58s
kube-system    kube-controller-manager-ip-172-31-22-219   1/1     Running   0          54m
kube-system    kube-proxy-fclwq                           1/1     Running   0          54m
kube-system    kube-scheduler-ip-172-31-22-219            1/1     Running   0          76s
ubuntu@ip-172-31-22-219:~$ 
Broadcast message from root@ip-172-31-22-219 (Wed 2025-03-19 19:16:31 UTC):

The system will power off now!

Connection to ec2-52-23-238-129.compute-1.amazonaws.com closed by remote host.
Connection to ec2-52-23-238-129.compute-1.amazonaws.com closed.
ibtisam@ibtisam-iq:~$ rm -rf silverinit.pem 
ibtisam@ibtisam-iq:~$ chmod 400 "silverinit.pem"
ibtisam@ibtisam-iq:~$ ssh -i "silverinit.pem" ubuntu@ec2-52-207-253-55.compute-1.amazonaws.com
The authenticity of host 'ec2-52-207-253-55.compute-1.amazonaws.com (52.207.253.55)' can't be established.
ED25519 key fingerprint is SHA256:pl3bf6lGo61eb5LVn4QLMmWfcJHdEb9whXJQzwEhQzI.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'ec2-52-207-253-55.compute-1.amazonaws.com' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04.1 LTS (GNU/Linux 6.8.0-1021-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Wed Mar 19 19:24:10 UTC 2025

  System load:  0.54              Processes:             106
  Usage of /:   9.1% of 18.33GB   Users logged in:       0
  Memory usage: 21%               IPv4 address for enX0: 172.31.91.107
  Swap usage:   0%

Expanded Security Maintenance for Applications is not enabled.

0 updates can be applied immediately.

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


The list of available updates is more than a week old.
To check for new updates run: sudo apt update


The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

ubuntu@ip-172-31-91-107:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
144 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: ip-172-31-91-107


🔄 Change hostname? Enter new name (or press Enter to keep current): control

🖥️ Updating hostname to 'control'...

✅ Hostname updated successfully.
========================================
📌 System Information
========================================
🔹 Hostname       : control
🔹 Private IP     : 172.31.91.107
🔹 Public IP      : 52.207.253.55
🔹 MAC Address    : 12:2e:e4:29:d7:f7
🔹 Network        : 127.0.0.1/8,172.31.91.107/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 957Mi
🔹 Disk Usage     : 2.4G/21G
🔹 CPU Load       :  0.43, 0.28, 0.11
🔹 UUID           : ec2869b270390aaff66db971e798bb7f
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet set on hold.
kubeadm set on hold.
kubectl set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: waiting        |--------------------------------------| 
elapsed: 0.2 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    waiting        |--------------------------------------| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: downloading    |--------------------------------------|    0.0 B/1022.0 B 
elapsed: 0.3 s                                                                    total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    waiting        |--------------------------------------| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    downloading    |--------------------------------------|    0.0 B/3.5 MiB 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.4 s                                                                    total:  1.6 Ki (3.9 KiB/s)                                       
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.5 s                                                                    total:  1.6 Ki (3.1 KiB/s)                                       
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 179.713421ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
✅ No conflicting resources found. Proceeding...

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

 ✨ k8s-cleanup.sh script is completed!

✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🚀 Running kubeadm-init.sh script...

🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
error execution phase preflight: [preflight] Some fatal errors occurred:
	[ERROR NumCPU]: the number of available CPUs 1 is less than the required 2
	[ERROR Mem]: the system RAM (957 MB) is less than the minimum 1700 MB
[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`
To see the stack trace of this error execute with --v=5 or higher

❌ kubeadm init failed. Exiting...

❌ Failed to execute kubeadm-init.sh. Exiting...

ubuntu@ip-172-31-91-107:~$ 
Broadcast message from root@ip-172-31-91-107 (Wed 2025-03-19 19:30:31 UTC):

The system will power off now!

Connection to ec2-52-207-253-55.compute-1.amazonaws.com closed by remote host.
Connection to ec2-52-207-253-55.compute-1.amazonaws.com closed.
ibtisam@ibtisam-iq:~$ ssh -i "silverinit.pem" ubuntu@ec2-52-55-89-130.compute-1.amazonaws.com
The authenticity of host 'ec2-52-55-89-130.compute-1.amazonaws.com (52.55.89.130)' can't be established.
ED25519 key fingerprint is SHA256:pl3bf6lGo61eb5LVn4QLMmWfcJHdEb9whXJQzwEhQzI.
This host key is known by the following other names/addresses:
    ~/.ssh/known_hosts:84: [hashed name]
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'ec2-52-55-89-130.compute-1.amazonaws.com' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04.1 LTS (GNU/Linux 6.8.0-1021-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Wed Mar 19 19:35:22 UTC 2025

  System load:  0.4                Processes:             118
  Usage of /:   19.0% of 18.33GB   Users logged in:       0
  Memory usage: 6%                 IPv4 address for enX0: 172.31.91.107
  Swap usage:   0%


Expanded Security Maintenance for Applications is not enabled.

141 updates can be applied immediately.
39 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


Last login: Wed Mar 19 19:24:11 2025 from 39.49.208.79
ubuntu@control:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: control


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: control
========================================
📌 System Information
========================================
🔹 Hostname       : control
🔹 Private IP     : 172.31.91.107
🔹 Public IP      : 52.55.89.130
🔹 MAC Address    : 12:2e:e4:29:d7:f7
🔹 Network        : 127.0.0.1/8,172.31.91.107/20
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 3.6G/23G
🔹 CPU Load       :  0.46, 0.20, 0.07
🔹 UUID           : ec2869b270390aaff66db971e798bb7f
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  host-device  host-local  ipvlan  loopback  macvlan  portmap  ptp	sbr  static  tap  tuning  vlan	vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest: resolving      |--------------------------------------| 
elapsed: 0.1 s                   total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 12.816989ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
✅ No conflicting resources found. Proceeding...

🧹 Removing existing Kubernetes configuration...
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

 ✨ k8s-cleanup.sh script is completed!

✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🚀 Running kubeadm-init.sh script...

🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0319 19:36:12.757962    3145 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [control kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.91.107]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [control localhost] and IPs [172.31.91.107 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [control localhost] and IPs [172.31.91.107 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 1.002116367s
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 6.501698415s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
dc608366066c4e549d3092f3b306c62302a57c62937e7f73a41f26e674c4b1bc
[mark-control-plane] Marking the node control as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node control as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: njr0js.h7boxq29m2q67679
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.91.107:6443 --token njr0js.h7boxq29m2q67679 \
	--discovery-token-ca-cert-hash sha256:5bb1307ad9f636e477fca4baeea9f2216b7dda94e7f867359126f0167ba17ded \
	--control-plane --certificate-key dc608366066c4e549d3092f3b306c62302a57c62937e7f73a41f26e674c4b1bc

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.91.107:6443 --token njr0js.h7boxq29m2q67679 \
	--discovery-token-ca-cert-hash sha256:5bb1307ad9f636e477fca4baeea9f2216b7dda94e7f867359126f0167ba17ded 

🎉 kubeadm-init.sh script is completed!

📌 Please wait, the cluster is stabilizing... Good things take time! ⏳✨

💪 **Resilience is built in silence. Your cluster is becoming unstoppable!** 🔥

😎 **Be like Kubernetes—always self-healing, always scaling!** 🔄

📈 **Success is not a straight line, but a rolling update! Keep upgrading!** 🔄

✨ **Your cluster is doing yoga—finding its inner peace before greatness!** 🧘

🚀 **Your cluster is like a rocket—fueling up for launch!** Hold tight! 🛸

🚀 **Your cluster is like a rocket—fueling up for launch!** Hold tight! 🛸

🕰️ **Good things come to those who wait…** and to those who run ‘kubectl get pods’! 😆

💪 **Resilience is built in silence. Your cluster is becoming unstoppable!** 🔥

✅ The cluster should now be stable! 🎯 Time to deploy greatness! 🚀💪
✅ Successfully executed kubeadm-init.sh.


🎉 Kubernetes control plane setup is complete!
✅ You can now join worker nodes using the kubeadm join command.

✨ Thank you for using SilverInit - Muhammad Ibtisam 🚀
💡 Automation is about freeing humans to innovate! 

ubuntu@control:~$ mkdir -p $HOME/.kube
ubuntu@control:~$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
ubuntu@control:~$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
ubuntu@control:~$ sudo systemctl restart kubelet
ubuntu@control:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.91.107:6443
CoreDNS is running at https://172.31.91.107:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@control:~$ kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@control:~$ sudo systemctl restart kubelet
ubuntu@control:~$ kubectl get nodes -o wide
NAME      STATUS     ROLES           AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
control   NotReady   control-plane   8m    v1.32.3   172.31.91.107   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@control:~$ kubectl get pods -A
NAMESPACE      NAME                              READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-5w28b             1/1     Running   0          2m45s
kube-system    coredns-668d6bf9bc-7v4qr          0/1     Pending   0          8m15s
kube-system    coredns-668d6bf9bc-ghql2          0/1     Pending   0          8m15s
kube-system    etcd-control                      1/1     Running   0          8m21s
kube-system    kube-apiserver-control            1/1     Running   0          8m22s
kube-system    kube-controller-manager-control   1/1     Running   0          8m21s
kube-system    kube-proxy-78gnx                  1/1     Running   0          8m16s
kube-system    kube-scheduler-control            1/1     Running   0          8m21s
ubuntu@control:~$ ifconfig
enX0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 9001
        inet 172.31.91.107  netmask 255.255.240.0  broadcast 172.31.95.255
        inet6 fe80::102e:e4ff:fe29:d7f7  prefixlen 64  scopeid 0x20<link>
        ether 12:2e:e4:29:d7:f7  txqueuelen 1000  (Ethernet)
        RX packets 75038  bytes 92561291 (92.5 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 23453  bytes 2082613 (2.0 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

flannel.1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 8951
        inet 10.244.0.0  netmask 255.255.255.255  broadcast 0.0.0.0
        inet6 fe80::d453:56ff:feee:d246  prefixlen 64  scopeid 0x20<link>
        ether d6:53:56:ee:d2:46  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 11 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 129236  bytes 28842123 (28.8 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 129236  bytes 28842123 (28.8 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ubuntu@control:~$ kubectl taint nodes control node-role.kubernetes.io/control-plane:NoSchedule-
node/control untainted
ubuntu@control:~$ kubectl get pods -A
NAMESPACE      NAME                              READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-5w28b             1/1     Running   0          4m58s
kube-system    coredns-668d6bf9bc-7v4qr          0/1     Pending   0          10m
kube-system    coredns-668d6bf9bc-ghql2          0/1     Pending   0          10m
kube-system    etcd-control                      1/1     Running   0          10m
kube-system    kube-apiserver-control            1/1     Running   0          10m
kube-system    kube-controller-manager-control   1/1     Running   0          10m
kube-system    kube-proxy-78gnx                  1/1     Running   0          10m
kube-system    kube-scheduler-control            1/1     Running   0          10m
ubuntu@control:~$ kubectl get pods -A
NAMESPACE      NAME                              READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-5w28b             1/1     Running   0          5m34s
kube-system    coredns-668d6bf9bc-7v4qr          0/1     Pending   0          11m
kube-system    coredns-668d6bf9bc-ghql2          0/1     Pending   0          11m
kube-system    etcd-control                      1/1     Running   0          11m
kube-system    kube-apiserver-control            1/1     Running   0          11m
kube-system    kube-controller-manager-control   1/1     Running   0          11m
kube-system    kube-proxy-78gnx                  1/1     Running   0          11m
kube-system    kube-scheduler-control            1/1     Running   0          11m
ubuntu@control:~$ kubectl describe coredns-668d6bf9bc-7v4qr -n kube-system
error: the server doesn't have a resource type "coredns-668d6bf9bc-7v4qr"
ubuntu@control:~$ kubectl describe po coredns-668d6bf9bc-7v4qr -n kube-system
Name:                 coredns-668d6bf9bc-7v4qr
Namespace:            kube-system
Priority:             2000000000
Priority Class Name:  system-cluster-critical
Service Account:      coredns
Node:                 <none>
Labels:               k8s-app=kube-dns
                      pod-template-hash=668d6bf9bc
Annotations:          <none>
Status:               Pending
IP:                   
IPs:                  <none>
Controlled By:        ReplicaSet/coredns-668d6bf9bc
Containers:
  coredns:
    Image:       registry.k8s.io/coredns/coredns:v1.11.3
    Ports:       53/UDP, 53/TCP, 9153/TCP
    Host Ports:  0/UDP, 0/TCP, 0/TCP
    Args:
      -conf
      /etc/coredns/Corefile
    Limits:
      memory:  170Mi
    Requests:
      cpu:        100m
      memory:     70Mi
    Liveness:     http-get http://:8080/health delay=60s timeout=5s period=10s #success=1 #failure=5
    Readiness:    http-get http://:8181/ready delay=0s timeout=1s period=10s #success=1 #failure=3
    Environment:  <none>
    Mounts:
      /etc/coredns from config-volume (ro)
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-bb4pc (ro)
Conditions:
  Type           Status
  PodScheduled   False 
Volumes:
  config-volume:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      coredns
    Optional:  false
  kube-api-access-bb4pc:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   Burstable
Node-Selectors:              kubernetes.io/os=linux
Tolerations:                 CriticalAddonsOnly op=Exists
                             node-role.kubernetes.io/control-plane:NoSchedule
                             node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason            Age                From               Message
  ----     ------            ----               ----               -------
  Warning  FailedScheduling  89s (x3 over 11m)  default-scheduler  0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.
ubuntu@control:~$ sudo systemctl restart kubelet
ubuntu@control:~$ kubectl get pods -A
NAMESPACE      NAME                              READY   STATUS    RESTARTS   AGE
kube-flannel   kube-flannel-ds-5w28b             1/1     Running   0          7m13s
kube-system    coredns-668d6bf9bc-7v4qr          0/1     Pending   0          12m
kube-system    coredns-668d6bf9bc-ghql2          0/1     Pending   0          12m
kube-system    etcd-control                      1/1     Running   0          12m
kube-system    kube-apiserver-control            1/1     Running   0          12m
kube-system    kube-controller-manager-control   1/1     Running   0          12m
kube-system    kube-proxy-78gnx                  1/1     Running   0          12m
kube-system    kube-scheduler-control            1/1     Running   0          12m
ubuntu@control:~$ sudo systemctl restart kubelet
ubuntu@control:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 12:2e:e4:29:d7:f7 brd ff:ff:ff:ff:ff:ff
    inet 172.31.91.107/20 metric 100 brd 172.31.95.255 scope global dynamic enX0
       valid_lft 2678sec preferred_lft 2678sec
    inet6 fe80::102e:e4ff:fe29:d7f7/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether d6:53:56:ee:d2:46 brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::d453:56ff:feee:d246/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@control:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@control:~$ kubectl rollout restart daemonset/kube-flannel-ds -n kube-flannel
daemonset.apps/kube-flannel-ds restarted
ubuntu@control:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@control:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
W0319 19:52:04.705269       1 main.go:557] no subnet found for key: FLANNEL_IPV6_NETWORK in file: /run/flannel/subnet.env
W0319 19:52:04.705293       1 main.go:557] no subnet found for key: FLANNEL_IPV6_SUBNET in file: /run/flannel/subnet.env
I0319 19:52:04.705303       1 iptables.go:125] Setting up masking rules
I0319 19:52:04.713304       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 19:52:04.717386       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 19:52:04.717403       1 main.go:416] Running backend.
I0319 19:52:04.730409       1 vxlan_network.go:65] watching for new subnet leases
I0319 19:52:04.731724       1 main.go:437] Waiting for all goroutines to exit
I0319 19:52:04.737947       1 iptables.go:372] bootstrap done
I0319 19:52:04.741926       1 iptables.go:372] bootstrap done
ubuntu@control:~$ kubectl describe node | grep "Network"
  NetworkUnavailable   False   Wed, 19 Mar 2025 19:52:04 +0000   Wed, 19 Mar 2025 19:52:04 +0000   FlannelIsUp                  Flannel is running on this node
  Ready                False   Wed, 19 Mar 2025 19:49:28 +0000   Wed, 19 Mar 2025 19:36:20 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
ubuntu@control:~$ ls -l /etc/cni/net.d/
ls -l /opt/cni/bin/
total 4
-rw-r--r-- 1 root root 292 Mar 19 19:52 10-flannel.conflist
total 92544
-rw-r--r-- 1 root root    11357 Jan  6 16:12 LICENSE
-rw-r--r-- 1 root root     2343 Jan  6 16:12 README.md
-rwxr-xr-x 1 root root  4655178 Jan  6 16:12 bandwidth
-rwxr-xr-x 1 root root  5287212 Jan  6 16:12 bridge
-rwxr-xr-x 1 root root 12762814 Jan  6 16:12 dhcp
-rwxr-xr-x 1 root root  4847854 Jan  6 16:12 dummy
-rwxr-xr-x 1 root root  5315134 Jan  6 16:12 firewall
-rwxr-xr-x 1 root root  2835118 Mar 19 19:52 flannel
-rwxr-xr-x 1 root root  4792010 Jan  6 16:12 host-device
-rwxr-xr-x 1 root root  4060355 Jan  6 16:12 host-local
-rwxr-xr-x 1 root root  4870719 Jan  6 16:12 ipvlan
-rwxr-xr-x 1 root root  4114939 Jan  6 16:12 loopback
-rwxr-xr-x 1 root root  4903324 Jan  6 16:12 macvlan
-rwxr-xr-x 1 root root  4713429 Jan  6 16:12 portmap
-rwxr-xr-x 1 root root  5076613 Jan  6 16:12 ptp
-rwxr-xr-x 1 root root  4333422 Jan  6 16:12 sbr
-rwxr-xr-x 1 root root  3651755 Jan  6 16:12 static
-rwxr-xr-x 1 root root  4928874 Jan  6 16:12 tap
-rwxr-xr-x 1 root root  4208424 Jan  6 16:12 tuning
-rwxr-xr-x 1 root root  4868252 Jan  6 16:12 vlan
-rwxr-xr-x 1 root root  4488658 Jan  6 16:12 vrf
ubuntu@control:~$ cat /etc/cni/net.d/10-flannel.conflist
{
  "name": "cbr0",
  "cniVersion": "0.3.1",
  "plugins": [
    {
      "type": "flannel",
      "delegate": {
        "hairpinMode": true,
        "isDefaultGateway": true
      }
    },
    {
      "type": "portmap",
      "capabilities": {
        "portMappings": true
      }
    }
  ]
}
ubuntu@control:~$ kubectl delete -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace "kube-flannel" deleted
serviceaccount "flannel" deleted
clusterrole.rbac.authorization.k8s.io "flannel" deleted
clusterrolebinding.rbac.authorization.k8s.io "flannel" deleted
configmap "kube-flannel-cfg" deleted
daemonset.apps "kube-flannel-ds" deleted
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@control:~$ sudo systemctl restart network
sudo systemctl restart kubelet
Failed to restart network.service: Unit network.service not found.
ubuntu@control:~$ sudo systemctl restart kubelet
ubuntu@control:~$ kubectl get nodes
kubectl describe node control | grep "Network"
NAME      STATUS     ROLES           AGE   VERSION
control   NotReady   control-plane   21m   v1.32.3
  NetworkUnavailable   False   Wed, 19 Mar 2025 19:57:30 +0000   Wed, 19 Mar 2025 19:57:30 +0000   FlannelIsUp                  Flannel is running on this node
  Ready                False   Wed, 19 Mar 2025 19:57:54 +0000   Wed, 19 Mar 2025 19:36:20 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
ubuntu@control:~$ sudo brctl addbr cni0
sudo ip link set cni0 up
sudo: brctl: command not found
Cannot find device "cni0"
ubuntu@control:~$ kubectl get nodes
NAME               STATUS     ROLES           AGE   VERSION
control            NotReady   control-plane   28m   v1.32.3
ip-172-31-23-210   Ready      <none>          30s   v1.32.3
ubuntu@control:~$ kubectl get nodes -o wide
NAME               STATUS     ROLES           AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
control            NotReady   control-plane   29m   v1.32.3   172.31.91.107   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ip-172-31-23-210   Ready      <none>          57s   v1.32.3   172.31.23.210   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@control:~$ kubectl taint nodes control node-role.kubernetes.io/control-plane:NoSchedule
node/control tainted
ubuntu@control:~$ kubectl run nginx --image nginx --port 80
pod/nginx created
ubuntu@control:~$ kubectl expose po nginx --NodePort
error: unknown flag: --NodePort
See 'kubectl expose --help' for usage.
ubuntu@control:~$ kubectl expose po nginx --type NodePort --port 80
service/nginx exposed
ubuntu@control:~$ kubectl get svc 
NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE
kubernetes   ClusterIP   10.96.0.1      <none>        443/TCP        33m
nginx        NodePort    10.98.88.224   <none>        80:31654/TCP   14s
ubuntu@control:~$ kubectl get nodes -o wide
NAME               STATUS     ROLES           AGE     VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
control            NotReady   control-plane   34m     v1.32.3   172.31.91.107   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ip-172-31-23-210   Ready      <none>          6m38s   v1.32.3   172.31.23.210   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@control:~$ curl ubuntu@control:~$ kubectl run nginx --image nginx --port 80
pod/nginx created
ubuntu@control:~$ kubectl expose po nginx --NodePort
error: unknown flag: --NodePort
See 'kubectl expose --help' for usage.
ubuntu@control:~$ kubectl expose po nginx --type NodePort --port 80
service/nginx exposed
ubuntu@control:~$ kubectl get svc 
NAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE
kubernetes   ClusterIP   10.96.0.1      <none>        443/TCP        33m
nginx        NodePort    10.98.88.224   <none>        80:31654/TCP   14s
ubuntu@control:~$ kubectl get nodes -o wide
NAME               STATUS     ROLES           AGE     VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
control            NotReady   control-plane   34m     v1.32.3   172.31.91.107   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ip-172-31-23-210   Ready      <none>          6m38s   v1.32.3   172.31.23.210   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@control:~$ 
curl: option --image: is unknown
curl: try 'curl --help' or 'curl --manual' for more information
-bash: pod/nginx: No such file or directory
ubuntu@control:~$: command not found
error:: command not found
Command 'See' not found, did you mean:
  command 'pee' from deb moreutils (0.67-1)
  command 'ree' from deb ree (1.4.1-2)
  command 'tee' from deb coreutils (9.4-2ubuntu2)
  command 'see' from deb mailcap (3.70+nmu1ubuntu1)
Try: sudo apt install <deb name>
ubuntu@control:~$: command not found
-bash: service/nginx: No such file or directory
ubuntu@control:~$: command not found
-bash: syntax error near unexpected token `('
-bash: none: No such file or directory
-bash: none: No such file or directory
ubuntu@control:~$: command not found
NAME: command not found
-bash: none: No such file or directory
-bash: none: No such file or directory
ubuntu@control:~$: command not found
ubuntu@control:~$ kubectl describe node control | grep -A 10 Conditions
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 19:57:30 +0000   Wed, 19 Mar 2025 19:57:30 +0000   FlannelIsUp                  Flannel is running on this node
  MemoryPressure       False   Wed, 19 Mar 2025 20:13:12 +0000   Wed, 19 Mar 2025 19:36:20 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 20:13:12 +0000   Wed, 19 Mar 2025 19:36:20 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 20:13:12 +0000   Wed, 19 Mar 2025 19:36:20 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                False   Wed, 19 Mar 2025 20:13:12 +0000   Wed, 19 Mar 2025 19:36:20 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.91.107
  Hostname:    control
ubuntu@control:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
I0319 19:57:30.272295       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 19:57:30.276057       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 19:57:30.276069       1 main.go:416] Running backend.
I0319 19:57:30.293227       1 vxlan_network.go:65] watching for new subnet leases
I0319 19:57:30.295224       1 main.go:437] Waiting for all goroutines to exit
I0319 19:57:30.298358       1 iptables.go:372] bootstrap done
I0319 19:57:30.298674       1 iptables.go:372] bootstrap done
I0319 20:04:47.705674       1 kube.go:490] Creating the node lease for IPv4. This is the n.Spec.PodCIDRs: [10.244.1.0/24]
I0319 20:04:47.705707       1 subnet.go:152] Batch elem [0] is { lease.Event{Type:0, Lease:lease.Lease{EnableIPv4:true, EnableIPv6:false, Subnet:ip.IP4Net{IP:0xaf40100, PrefixLen:0x18}, IPv6Subnet:ip.IP6Net{IP:(*ip.IP6)(nil), PrefixLen:0x0}, Attrs:lease.LeaseAttrs{PublicIP:0xac1f17d2, PublicIPv6:(*ip.IP6)(nil), BackendType:"vxlan", BackendData:json.RawMessage{0x7b, 0x22, 0x56, 0x4e, 0x49, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x56, 0x74, 0x65, 0x70, 0x4d, 0x41, 0x43, 0x22, 0x3a, 0x22, 0x37, 0x65, 0x3a, 0x64, 0x62, 0x3a, 0x62, 0x32, 0x3a, 0x36, 0x39, 0x3a, 0x62, 0x63, 0x3a, 0x36, 0x34, 0x22, 0x7d}, BackendV6Data:json.RawMessage(nil)}, Expiration:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Asof:0}} }
I0319 20:04:47.705787       1 vxlan_network.go:100] Received Subnet Event with VxLan: BackendType: vxlan, PublicIP: 172.31.23.210, PublicIPv6: (nil), BackendData: {"VNI":1,"VtepMAC":"7e:db:b2:69:bc:64"}, BackendV6Data: (nil)
I0319 20:04:47.724022       1 iptables.go:125] Setting up masking rules
I0319 20:04:47.727019       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 20:04:47.728902       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 20:04:47.728937       1 main.go:416] Running backend.
I0319 20:04:47.737285       1 vxlan_network.go:65] watching for new subnet leases
I0319 20:04:47.737337       1 subnet.go:152] Batch elem [0] is { lease.Event{Type:0, Lease:lease.Lease{EnableIPv4:true, EnableIPv6:false, Subnet:ip.IP4Net{IP:0xaf40000, PrefixLen:0x18}, IPv6Subnet:ip.IP6Net{IP:(*ip.IP6)(nil), PrefixLen:0x0}, Attrs:lease.LeaseAttrs{PublicIP:0xac1f5b6b, PublicIPv6:(*ip.IP6)(nil), BackendType:"vxlan", BackendData:json.RawMessage{0x7b, 0x22, 0x56, 0x4e, 0x49, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x56, 0x74, 0x65, 0x70, 0x4d, 0x41, 0x43, 0x22, 0x3a, 0x22, 0x64, 0x36, 0x3a, 0x35, 0x33, 0x3a, 0x35, 0x36, 0x3a, 0x65, 0x65, 0x3a, 0x64, 0x32, 0x3a, 0x34, 0x36, 0x22, 0x7d}, BackendV6Data:json.RawMessage(nil)}, Expiration:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Asof:0}} }
I0319 20:04:47.737670       1 vxlan_network.go:100] Received Subnet Event with VxLan: BackendType: vxlan, PublicIP: 172.31.91.107, PublicIPv6: (nil), BackendData: {"VNI":1,"VtepMAC":"d6:53:56:ee:d2:46"}, BackendV6Data: (nil)
I0319 20:04:47.741087       1 main.go:437] Waiting for all goroutines to exit
I0319 20:04:47.758214       1 iptables.go:372] bootstrap done
I0319 20:04:47.758364       1 iptables.go:372] bootstrap done
ubuntu@control:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@control:~$ sudo journalctl -u kubelet --no-pager | tail -n 20
Mar 19 20:13:49 control kubelet[8922]: E0319 20:13:49.830193    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:13:54 control kubelet[8922]: E0319 20:13:54.831149    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:13:59 control kubelet[8922]: E0319 20:13:59.832832    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:04 control kubelet[8922]: E0319 20:14:04.834049    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:09 control kubelet[8922]: E0319 20:14:09.834904    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:14 control kubelet[8922]: E0319 20:14:14.836212    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:19 control kubelet[8922]: E0319 20:14:19.837602    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:24 control kubelet[8922]: E0319 20:14:24.838687    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:29 control kubelet[8922]: E0319 20:14:29.839841    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:34 control kubelet[8922]: E0319 20:14:34.841717    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:39 control kubelet[8922]: E0319 20:14:39.842795    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:44 control kubelet[8922]: E0319 20:14:44.844650    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:49 control kubelet[8922]: E0319 20:14:49.845661    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:54 control kubelet[8922]: E0319 20:14:54.847884    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:14:59 control kubelet[8922]: E0319 20:14:59.849632    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:15:04 control kubelet[8922]: E0319 20:15:04.851617    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:15:09 control kubelet[8922]: E0319 20:15:09.853235    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:15:14 control kubelet[8922]: E0319 20:15:14.854361    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:15:19 control kubelet[8922]: E0319 20:15:19.855923    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Mar 19 20:15:24 control kubelet[8922]: E0319 20:15:24.857197    8922 kubelet.go:3002] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
ubuntu@control:~$ ls -l /opt/cni/bin/
total 92544
-rw-r--r-- 1 root root    11357 Jan  6 16:12 LICENSE
-rw-r--r-- 1 root root     2343 Jan  6 16:12 README.md
-rwxr-xr-x 1 root root  4655178 Jan  6 16:12 bandwidth
-rwxr-xr-x 1 root root  5287212 Jan  6 16:12 bridge
-rwxr-xr-x 1 root root 12762814 Jan  6 16:12 dhcp
-rwxr-xr-x 1 root root  4847854 Jan  6 16:12 dummy
-rwxr-xr-x 1 root root  5315134 Jan  6 16:12 firewall
-rwxr-xr-x 1 root root  2835118 Mar 19 19:57 flannel
-rwxr-xr-x 1 root root  4792010 Jan  6 16:12 host-device
-rwxr-xr-x 1 root root  4060355 Jan  6 16:12 host-local
-rwxr-xr-x 1 root root  4870719 Jan  6 16:12 ipvlan
-rwxr-xr-x 1 root root  4114939 Jan  6 16:12 loopback
-rwxr-xr-x 1 root root  4903324 Jan  6 16:12 macvlan
-rwxr-xr-x 1 root root  4713429 Jan  6 16:12 portmap
-rwxr-xr-x 1 root root  5076613 Jan  6 16:12 ptp
-rwxr-xr-x 1 root root  4333422 Jan  6 16:12 sbr
-rwxr-xr-x 1 root root  3651755 Jan  6 16:12 static
-rwxr-xr-x 1 root root  4928874 Jan  6 16:12 tap
-rwxr-xr-x 1 root root  4208424 Jan  6 16:12 tuning
-rwxr-xr-x 1 root root  4868252 Jan  6 16:12 vlan
-rwxr-xr-x 1 root root  4488658 Jan  6 16:12 vrf
ubuntu@control:~$ ls -l /etc/cni/net.d/
total 4
-rw-r--r-- 1 root root 292 Mar 19 19:57 10-flannel.conflist
ubuntu@control:~$ kubectl delete -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace "kube-flannel" deleted
serviceaccount "flannel" deleted
clusterrole.rbac.authorization.k8s.io "flannel" deleted
clusterrolebinding.rbac.authorization.k8s.io "flannel" deleted
configmap "kube-flannel-cfg" deleted
daemonset.apps "kube-flannel-ds" deleted
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@control:~$ sudo systemctl restart kubelet
sudo systemctl restart containerd  # or sudo systemctl restart docker (if using Docker)
ubuntu@control:~$ kubectl get nodes
kubectl get pods -n kube-flannel
ip link show cni0
NAME               STATUS   ROLES           AGE   VERSION
control            Ready    control-plane   41m   v1.32.3
ip-172-31-23-210   Ready    <none>          13m   v1.32.3
NAME                    READY   STATUS    RESTARTS   AGE
kube-flannel-ds-scr2d   1/1     Running   0          36s
kube-flannel-ds-wpghp   1/1     Running   0          36s
Device "cni0" does not exist.
ubuntu@control:~$ ip link show cni0
Device "cni0" does not exist.
ubuntu@control:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
I0319 20:17:41.017293       1 iptables.go:125] Setting up masking rules
I0319 20:17:41.028374       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 20:17:41.030671       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 20:17:41.030778       1 main.go:416] Running backend.
I0319 20:17:41.046871       1 vxlan_network.go:65] watching for new subnet leases
I0319 20:17:41.046901       1 subnet.go:152] Batch elem [0] is { lease.Event{Type:0, Lease:lease.Lease{EnableIPv4:true, EnableIPv6:false, Subnet:ip.IP4Net{IP:0xaf40000, PrefixLen:0x18}, IPv6Subnet:ip.IP6Net{IP:(*ip.IP6)(nil), PrefixLen:0x0}, Attrs:lease.LeaseAttrs{PublicIP:0xac1f5b6b, PublicIPv6:(*ip.IP6)(nil), BackendType:"vxlan", BackendData:json.RawMessage{0x7b, 0x22, 0x56, 0x4e, 0x49, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x56, 0x74, 0x65, 0x70, 0x4d, 0x41, 0x43, 0x22, 0x3a, 0x22, 0x64, 0x36, 0x3a, 0x35, 0x33, 0x3a, 0x35, 0x36, 0x3a, 0x65, 0x65, 0x3a, 0x64, 0x32, 0x3a, 0x34, 0x36, 0x22, 0x7d}, BackendV6Data:json.RawMessage(nil)}, Expiration:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Asof:0}} }
I0319 20:17:41.047163       1 vxlan_network.go:100] Received Subnet Event with VxLan: BackendType: vxlan, PublicIP: 172.31.91.107, PublicIPv6: (nil), BackendData: {"VNI":1,"VtepMAC":"d6:53:56:ee:d2:46"}, BackendV6Data: (nil)
I0319 20:17:41.047668       1 main.go:437] Waiting for all goroutines to exit
I0319 20:17:41.049083       1 iptables.go:372] bootstrap done
I0319 20:17:41.049805       1 iptables.go:372] bootstrap done
I0319 20:17:40.774324       1 iptables.go:125] Setting up masking rules
I0319 20:17:40.781327       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 20:17:40.785003       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 20:17:40.785114       1 main.go:416] Running backend.
I0319 20:17:40.797413       1 vxlan_network.go:65] watching for new subnet leases
I0319 20:17:40.797520       1 subnet.go:152] Batch elem [0] is { lease.Event{Type:0, Lease:lease.Lease{EnableIPv4:true, EnableIPv6:false, Subnet:ip.IP4Net{IP:0xaf40100, PrefixLen:0x18}, IPv6Subnet:ip.IP6Net{IP:(*ip.IP6)(nil), PrefixLen:0x0}, Attrs:lease.LeaseAttrs{PublicIP:0xac1f17d2, PublicIPv6:(*ip.IP6)(nil), BackendType:"vxlan", BackendData:json.RawMessage{0x7b, 0x22, 0x56, 0x4e, 0x49, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x56, 0x74, 0x65, 0x70, 0x4d, 0x41, 0x43, 0x22, 0x3a, 0x22, 0x37, 0x65, 0x3a, 0x64, 0x62, 0x3a, 0x62, 0x32, 0x3a, 0x36, 0x39, 0x3a, 0x62, 0x63, 0x3a, 0x36, 0x34, 0x22, 0x7d}, BackendV6Data:json.RawMessage(nil)}, Expiration:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Asof:0}} }
I0319 20:17:40.797572       1 vxlan_network.go:100] Received Subnet Event with VxLan: BackendType: vxlan, PublicIP: 172.31.23.210, PublicIPv6: (nil), BackendData: {"VNI":1,"VtepMAC":"7e:db:b2:69:bc:64"}, BackendV6Data: (nil)
I0319 20:17:40.799448       1 main.go:437] Waiting for all goroutines to exit
I0319 20:17:40.801659       1 iptables.go:372] bootstrap done
I0319 20:17:40.817359       1 iptables.go:372] bootstrap done
ubuntu@control:~$ cat /etc/cni/net.d/10-flannel.conflist
{
  "name": "cbr0",
  "cniVersion": "0.3.1",
  "plugins": [
    {
      "type": "flannel",
      "delegate": {
        "hairpinMode": true,
        "isDefaultGateway": true
      }
    },
    {
      "type": "portmap",
      "capabilities": {
        "portMappings": true
      }
    }
  ]
}
ubuntu@control:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 12:2e:e4:29:d7:f7 brd ff:ff:ff:ff:ff:ff
    inet 172.31.91.107/20 metric 100 brd 172.31.95.255 scope global dynamic enX0
       valid_lft 2637sec preferred_lft 2637sec
    inet6 fe80::102e:e4ff:fe29:d7f7/64 scope link 
       valid_lft forever preferred_lft forever
3: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether d6:53:56:ee:d2:46 brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::d453:56ff:feee:d246/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@control:~$ sudo ip link delete flannel.1
ubuntu@control:~$ kubectl delete -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace "kube-flannel" deleted
serviceaccount "flannel" deleted
clusterrole.rbac.authorization.k8s.io "flannel" deleted
clusterrolebinding.rbac.authorization.k8s.io "flannel" deleted
configmap "kube-flannel-cfg" deleted
daemonset.apps "kube-flannel-ds" deleted
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created
ubuntu@control:~$ sudo systemctl restart kubelet
sudo systemctl restart containerd
ubuntu@control:~$ sudo iptables -L -v -n | grep FLANNEL
    0     0 FLANNEL-FWD  0    --  *      *       0.0.0.0/0            0.0.0.0/0            /* flanneld forward */
Chain FLANNEL-FWD (1 references)
ubuntu@control:~$ kubectl get pods -n kube-system -o wide
NAME                              READY   STATUS    RESTARTS   AGE   IP              NODE               NOMINATED NODE   READINESS GATES
coredns-668d6bf9bc-7v4qr          1/1     Running   0          45m   10.244.1.2      ip-172-31-23-210   <none>           <none>
coredns-668d6bf9bc-ghql2          1/1     Running   0          45m   10.244.1.3      ip-172-31-23-210   <none>           <none>
etcd-control                      1/1     Running   0          45m   172.31.91.107   control            <none>           <none>
kube-apiserver-control            1/1     Running   0          45m   172.31.91.107   control            <none>           <none>
kube-controller-manager-control   1/1     Running   0          45m   172.31.91.107   control            <none>           <none>
kube-proxy-78gnx                  1/1     Running   0          45m   172.31.91.107   control            <none>           <none>
kube-proxy-gf2dn                  1/1     Running   0          17m   172.31.23.210   ip-172-31-23-210   <none>           <none>
kube-scheduler-control            1/1     Running   0          45m   172.31.91.107   control            <none>           <none>
ubuntu@control:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 12:2e:e4:29:d7:f7 brd ff:ff:ff:ff:ff:ff
    inet 172.31.91.107/20 metric 100 brd 172.31.95.255 scope global dynamic enX0
       valid_lft 2501sec preferred_lft 2501sec
    inet6 fe80::102e:e4ff:fe29:d7f7/64 scope link 
       valid_lft forever preferred_lft forever
4: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether d6:53:56:ee:d2:46 brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::d453:56ff:feee:d246/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@control:~$ kubectl get pods -n kube-flannel -o wide
NAME                    READY   STATUS    RESTARTS   AGE    IP              NODE               NOMINATED NODE   READINESS GATES
kube-flannel-ds-9xfsd   1/1     Running   0          3m4s   172.31.91.107   control            <none>           <none>
kube-flannel-ds-m88tx   1/1     Running   0          3m4s   172.31.23.210   ip-172-31-23-210   <none>           <none>
ubuntu@control:~$ kubectl get nodes -o wide
NAME               STATUS   ROLES           AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
control            Ready    control-plane   48m   v1.32.3   172.31.91.107   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ip-172-31-23-210   Ready    <none>          19m   v1.32.3   172.31.23.210   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@control:~$ kubectl run --rm -it --image=busybox busybox -- /bin/sh
If you don't see a command prompt, try pressing enter.
/ # ping nginx
PING nginx (10.98.88.224): 56 data bytes
^C
--- nginx ping statistics ---
11 packets transmitted, 0 packets received, 100% packet loss
/ # ^C

/ # exit
Session ended, resume using 'kubectl attach busybox -c busybox -i -t' command when the pod is running
pod "busybox" deleted
ubuntu@control:~$ kubectl get pods
NAME    READY   STATUS    RESTARTS   AGE
nginx   1/1     Running   0          18m
ubuntu@control:~$ kubectl get pods -o wide
NAME    READY   STATUS    RESTARTS   AGE   IP           NODE               NOMINATED NODE   READINESS GATES
nginx   1/1     Running   0          18m   10.244.1.4   ip-172-31-23-210   <none>           <none>
ubuntu@control:~$ kubectl run --rm -it --image=busybox busybox -- /bin/sh
If you don't see a command prompt, try pressing enter.
/ # ping 10.244.1.4
PING 10.244.1.4 (10.244.1.4): 56 data bytes
64 bytes from 10.244.1.4: seq=0 ttl=64 time=0.087 ms
64 bytes from 10.244.1.4: seq=1 ttl=64 time=0.076 ms
64 bytes from 10.244.1.4: seq=2 ttl=64 time=0.073 ms
64 bytes from 10.244.1.4: seq=3 ttl=64 time=0.073 ms
64 bytes from 10.244.1.4: seq=4 ttl=64 time=0.074 ms
64 bytes from 10.244.1.4: seq=5 ttl=64 time=0.075 ms
64 bytes from 10.244.1.4: seq=6 ttl=64 time=0.076 ms
^C
--- 10.244.1.4 ping statistics ---
7 packets transmitted, 7 packets received, 0% packet loss
round-trip min/avg/max = 0.073/0.076/0.087 ms
/ # exit
Session ended, resume using 'kubectl attach busybox -c busybox -i -t' command when the pod is running
pod "busybox" deleted
ubuntu@control:~$ sysctl net.ipv4.ip_forward
net.ipv4.ip_forward = 1
ubuntu@control:~$ ip route show
default via 172.31.80.1 dev enX0 proto dhcp src 172.31.91.107 metric 100 
10.244.1.0/24 via 10.244.1.0 dev flannel.1 onlink 
172.31.0.2 via 172.31.80.1 dev enX0 proto dhcp src 172.31.91.107 metric 100 
172.31.80.0/20 dev enX0 proto kernel scope link src 172.31.91.107 metric 100 
172.31.80.1 dev enX0 proto dhcp scope link src 172.31.91.107 metric 100 
ubuntu@control:~$ sudo systemctl restart kubelet
sudo systemctl restart containerd
ubuntu@control:~$ kubectl logs -n kube-flannel -l app=flannel
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
Defaulted container "kube-flannel" out of: kube-flannel, install-cni-plugin (init), install-cni (init)
I0319 20:21:04.587122       1 iptables.go:125] Setting up masking rules
I0319 20:21:04.609441       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 20:21:04.617861       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 20:21:04.617874       1 main.go:416] Running backend.
I0319 20:21:04.631570       1 main.go:437] Waiting for all goroutines to exit
I0319 20:21:04.635889       1 vxlan_network.go:65] watching for new subnet leases
I0319 20:21:04.635915       1 subnet.go:152] Batch elem [0] is { lease.Event{Type:0, Lease:lease.Lease{EnableIPv4:true, EnableIPv6:false, Subnet:ip.IP4Net{IP:0xaf40100, PrefixLen:0x18}, IPv6Subnet:ip.IP6Net{IP:(*ip.IP6)(nil), PrefixLen:0x0}, Attrs:lease.LeaseAttrs{PublicIP:0xac1f17d2, PublicIPv6:(*ip.IP6)(nil), BackendType:"vxlan", BackendData:json.RawMessage{0x7b, 0x22, 0x56, 0x4e, 0x49, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x56, 0x74, 0x65, 0x70, 0x4d, 0x41, 0x43, 0x22, 0x3a, 0x22, 0x37, 0x65, 0x3a, 0x64, 0x62, 0x3a, 0x62, 0x32, 0x3a, 0x36, 0x39, 0x3a, 0x62, 0x63, 0x3a, 0x36, 0x34, 0x22, 0x7d}, BackendV6Data:json.RawMessage(nil)}, Expiration:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Asof:0}} }
I0319 20:21:04.636436       1 vxlan_network.go:100] Received Subnet Event with VxLan: BackendType: vxlan, PublicIP: 172.31.23.210, PublicIPv6: (nil), BackendData: {"VNI":1,"VtepMAC":"7e:db:b2:69:bc:64"}, BackendV6Data: (nil)
I0319 20:21:04.644586       1 iptables.go:372] bootstrap done
I0319 20:21:04.652765       1 iptables.go:372] bootstrap done
I0319 20:21:04.388723       1 iptables.go:125] Setting up masking rules
I0319 20:21:04.396863       1 iptables.go:226] Changing default FORWARD chain policy to ACCEPT
I0319 20:21:04.399328       1 main.go:412] Wrote subnet file to /run/flannel/subnet.env
I0319 20:21:04.399345       1 main.go:416] Running backend.
I0319 20:21:04.412566       1 vxlan_network.go:65] watching for new subnet leases
I0319 20:21:04.412698       1 subnet.go:152] Batch elem [0] is { lease.Event{Type:0, Lease:lease.Lease{EnableIPv4:true, EnableIPv6:false, Subnet:ip.IP4Net{IP:0xaf40000, PrefixLen:0x18}, IPv6Subnet:ip.IP6Net{IP:(*ip.IP6)(nil), PrefixLen:0x0}, Attrs:lease.LeaseAttrs{PublicIP:0xac1f5b6b, PublicIPv6:(*ip.IP6)(nil), BackendType:"vxlan", BackendData:json.RawMessage{0x7b, 0x22, 0x56, 0x4e, 0x49, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x56, 0x74, 0x65, 0x70, 0x4d, 0x41, 0x43, 0x22, 0x3a, 0x22, 0x64, 0x36, 0x3a, 0x35, 0x33, 0x3a, 0x35, 0x36, 0x3a, 0x65, 0x65, 0x3a, 0x64, 0x32, 0x3a, 0x34, 0x36, 0x22, 0x7d}, BackendV6Data:json.RawMessage(nil)}, Expiration:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Asof:0}} }
I0319 20:21:04.412895       1 vxlan_network.go:100] Received Subnet Event with VxLan: BackendType: vxlan, PublicIP: 172.31.91.107, PublicIPv6: (nil), BackendData: {"VNI":1,"VtepMAC":"d6:53:56:ee:d2:46"}, BackendV6Data: (nil)
I0319 20:21:04.413505       1 main.go:437] Waiting for all goroutines to exit
I0319 20:21:04.415548       1 iptables.go:372] bootstrap done
I0319 20:21:04.419112       1 iptables.go:372] bootstrap done
ubuntu@control:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 12:2e:e4:29:d7:f7 brd ff:ff:ff:ff:ff:ff
    inet 172.31.91.107/20 metric 100 brd 172.31.95.255 scope global dynamic enX0
       valid_lft 2126sec preferred_lft 2126sec
    inet6 fe80::102e:e4ff:fe29:d7f7/64 scope link 
       valid_lft forever preferred_lft forever
4: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether d6:53:56:ee:d2:46 brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::d453:56ff:feee:d246/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@control:~$ cat /run/flannel/subnet.env
FLANNEL_NETWORK=10.244.0.0/16
FLANNEL_SUBNET=10.244.0.1/24
FLANNEL_MTU=8951
FLANNEL_IPMASQ=true
ubuntu@control:~$ ip link show flannel.1
4: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN mode DEFAULT group default 
    link/ether d6:53:56:ee:d2:46 brd ff:ff:ff:ff:ff:ff
ubuntu@control:~$ ip route show
default via 172.31.80.1 dev enX0 proto dhcp src 172.31.91.107 metric 100 
10.244.1.0/24 via 10.244.1.0 dev flannel.1 onlink 
172.31.0.2 via 172.31.80.1 dev enX0 proto dhcp src 172.31.91.107 metric 100 
172.31.80.0/20 dev enX0 proto kernel scope link src 172.31.91.107 metric 100 
172.31.80.1 dev enX0 proto dhcp scope link src 172.31.91.107 metric 100 
ubuntu@control:~$ kubectl get pods -o wide
NAME    READY   STATUS    RESTARTS   AGE   IP           NODE               NOMINATED NODE   READINESS GATES
nginx   1/1     Running   0          25m   10.244.1.4   ip-172-31-23-210   <none>           <none>
ubuntu@control:~$ kubectl run --rm -it --image=busybox testpod -- /bin/sh
If you don't see a command prompt, try pressing enter.
/ # ping 10.244.1.4
PING 10.244.1.4 (10.244.1.4): 56 data bytes
64 bytes from 10.244.1.4: seq=0 ttl=64 time=0.094 ms
64 bytes from 10.244.1.4: seq=1 ttl=64 time=0.075 ms
64 bytes from 10.244.1.4: seq=2 ttl=64 time=0.086 ms
64 bytes from 10.244.1.4: seq=3 ttl=64 time=0.078 ms
^C
--- 10.244.1.4 ping statistics ---
4 packets transmitted, 4 packets received, 0% packet loss
round-trip min/avg/max = 0.075/0.083/0.094 ms
/ # exit
Session ended, resume using 'kubectl attach testpod -c testpod -i -t' command when the pod is running
pod "testpod" deleted
ubuntu@control:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: control


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: control
========================================
📌 System Information
========================================
🔹 Hostname       : control
🔹 Private IP     : 172.31.91.107
🔹 Public IP      : 52.55.89.130
🔹 MAC Address    : 12:2e:e4:29:d7:f7,d6:53:56:ee:d2:46
🔹 Network        : 127.0.0.1/8,172.31.91.107/20 10.244.0.0/32
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 49G/251G
🔹 CPU Load       :  0.14, 0.08, 0.07
🔹 UUID           : ec2869b270390aaff66db971e798bb7f
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  flannel  host-device  host-local	ipvlan	loopback  macvlan  portmap  ptp  sbr  static  tap  tuning  vlan  vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: exists         |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 9.25991ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Found existing Kubernetes file: /etc/kubernetes/admin.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/super-admin.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/controller-manager.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/kubelet.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/scheduler.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-apiserver.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-controller-manager.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-scheduler.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/etcd.yaml
⚠️  Found existing Kubernetes directory: /etc/kubernetes/pki/
⚠️  Found existing Kubernetes directory: /var/lib/etcd
⚠️  Found existing Kubernetes directory: /etc/cni/net.d
⚠️  Found existing Kubernetes directory: /var/lib/kubelet
⚠️  Port 6443 is already in use
⚠️  Port 10259 is already in use
⚠️  Port 10257 is already in use
⚠️  Port 10250 is already in use
⚠️  Port 2379 is already in use
⚠️  Port 2380 is already in use
⚠️  Conflicting resources found! Do you want to delete them? (y/n): yes

❌ Cluster initialization aborted. You must remove existing resources first. You can run kubeadm reset -f to remove all kubernetes resources manually.

❌ Failed to execute k8s-cleanup.sh. Exiting...

ubuntu@control:~$ curl -sL https://raw.githubusercontent.com/ibtisam-iq/SilverInit/main/K8s-Control-Plane-Init.sh | sudo bash

🚀 Running K8s-Node-Init.sh script...

🚀 Running sys-info-and-update.sh...
========================================
🔍 Running system preflight checks...
========================================

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.

========================================
🚀 Updating system and installing dependencies...
========================================
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ System update completed successfully.
========================================
🔹 Current hostname: control


🔄 Change hostname? Enter new name (or press Enter to keep current): 

ℹ️ Keeping the existing hostname: control
========================================
📌 System Information
========================================
🔹 Hostname       : control
🔹 Private IP     : 172.31.91.107
🔹 Public IP      : 52.55.89.130
🔹 MAC Address    : 12:2e:e4:29:d7:f7,d6:53:56:ee:d2:46
🔹 Network        : 127.0.0.1/8,172.31.91.107/20 10.244.0.0/32
🔹 DNS            : 127.0.0.53
🔹 Kernel         : 6.8.0-1021-aws
🔹 OS             : Ubuntu 24.04.1 LTS
🔹 CPU            : Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz CPU @ 2.3GHz
🔹 Memory         : 3.8Gi
🔹 Disk Usage     : 49G/251G
🔹 CPU Load       :  0.72, 0.25, 0.13
🔹 UUID           : ec2869b270390aaff66db971e798bb7f
========================================
✅ The system is now updated and ready!
========================================

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


✅ System meets the requirements to set up a Kubernetes cluster.

🔧 Disabling swap...

📦 Adding Kubernetes APT repository...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

📥 Installing Kubernetes components...
kubelet was already set on hold.
kubeadm was already set on hold.
kubectl was already set on hold.

✅ Kubernetes components installed successfully!

🛠️ Loading required kernel modules...

⚙️ Applying sysctl settings...

✅ Kernel modules loaded, and sysctl settings applied!

🚀 Running containerd-setup.sh script...

🚀 Running preflight.sh script to ensure system meets requirements for Containerd...

========================================
🚀 SilverInit - System Preflight Checks
========================================

✅ Running as root.

✅ curl is already installed.

✅ bash is already installed.

✅ Internet connection verified.

✅ Detected OS: Ubuntu 24.04.1 LTS

✅ Architecture supported: x86_64

🚀 Preflight checks completed successfully! Your system is ready.


✅ System meets the requirements for Containerd installation.

🚀 Updating package list and installing dependencies...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.


✅ Adding Docker repository for containerd installation...
135 packages can be upgraded. Run 'apt list --upgradable' to see them.

✅ Installing container runtime (containerd)...

✅ Verifying containerd service file path...
FragmentPath=/usr/lib/systemd/system/containerd.service

✅ Configuring containerd...

✅ SystemdCgroup set to true.

🔄 Restarting containerd...

🔍 Checking SystemdCgroup setting in config...
            SystemdCgroup = true

✅ Ensuring CNI plugins directory exists...

✅ Fetching latest CNI plugin version...

✅ Downloading CNI plugins...

✅ Extracting CNI plugins...

✅ Validating CNI plugin installation...
LICENSE  README.md  bandwidth  bridge  dhcp  dummy  firewall  flannel  host-device  host-local	ipvlan	loopback  macvlan  portmap  ptp  sbr  static  tap  tuning  vlan  vrf

✅ Containerd is running successfully.

✅ Pulling Alpine image to test containerd...
docker.io/library/alpine:latest:                                               resolving      |--------------------------------------| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c: exists         |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.1 s                                                                 total:   0.0 B (0.0 B/s)                                         
docker.io/library/alpine:latest:                                                  resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c:    exists         |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:1c4eef651f65e2f7daee7ee785882ac164b02b78fb74503052a26dc061c90474: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:f18232174bc91741fdf3da96d85011092101a032a93a388b79e99e69c2d5c870:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:aded1e1a5b3705116fa0a92ba074a5e0b0031647d9c315983ccba2ee5428ec8b:   done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 0.2 s                                                                    total:   0.0 B (0.0 B/s)                                         
unpacking linux/amd64 sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c...
done: 8.904774ms	

✅ Containerd version: 1.7.25
✅ Runc version: 1.2.4

🎉 Containerd and CNI plugins setup completed successfully!


✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 


🔍 Status of the installed services...

✅ All scripts executed successfully.

✅ This node is ready to join the Kubernetes cluster.

🎉 Happy Kuberneting! 🚀

✨  Thank you for choosing SilverInit - Muhammad Ibtisam 🚀

💡 Automation is not about replacing humans; it's about freeing them to be more human—to create, innovate, and lead. 

✅ Successfully executed K8s-Node-Init.sh.


🚀 Running k8s-cleanup.sh script...

🔍 Checking for existing Kubernetes resources...
⚠️  Found existing Kubernetes file: /etc/kubernetes/admin.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/super-admin.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/controller-manager.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/kubelet.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/scheduler.conf
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-apiserver.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-controller-manager.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/kube-scheduler.yaml
⚠️  Found existing Kubernetes file: /etc/kubernetes/manifests/etcd.yaml
⚠️  Found existing Kubernetes directory: /etc/kubernetes/pki/
⚠️  Found existing Kubernetes directory: /var/lib/etcd
⚠️  Found existing Kubernetes directory: /etc/cni/net.d
⚠️  Found existing Kubernetes directory: /var/lib/kubelet
⚠️  Port 6443 is already in use
⚠️  Port 10259 is already in use
⚠️  Port 10257 is already in use
⚠️  Port 10250 is already in use
⚠️  Port 2379 is already in use
⚠️  Port 2380 is already in use
⚠️  Conflicting resources found! Do you want to delete them? (y/n): y

🧹 Removing existing Kubernetes configuration...
rm: cannot remove '/var/lib/kubelet/pods/ecf3381b-ff1a-4a37-a238-297afc8171f1/volumes/kubernetes.io~projected/kube-api-access-mgt45': Device or resource busy
rm: cannot remove '/var/lib/kubelet/pods/4c681c74-14c5-46be-8b87-92a9574412e3/volumes/kubernetes.io~projected/kube-api-access-7q66n': Device or resource busy
✅ Old Kubernetes configurations removed.

🔍 Releasing occupied ports...
6443/tcp:             3472
10250/tcp:           17647
✅ Ports freed successfully.

🔍 Killing any remaining Kubernetes-related processes...
✅ Processes terminated.

 ✨ k8s-cleanup.sh script is completed!

✅ Successfully executed k8s-cleanup.sh.


🚀 Running k8s-start-services.sh script...

🔍 Ensuring necessary services are running...
containerd: active
kubelet: active



 kubelet is activating, because it's waiting for the API server (which kubeadm init starts)..


✅ Successfully executed k8s-start-services.sh.


🚀 Running kubeadm-init.sh script...

🔧 Disabling swap...
✅ No swap entry found in /etc/fstab.

📥 Pulling required Kubernetes images...
[config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3
[config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3
[config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3
[config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3
[config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3
[config/images] Pulled registry.k8s.io/pause:3.10
[config/images] Pulled registry.k8s.io/etcd:3.5.16-0
✅ Kubernetes images pulled successfully..

🚀 Initializing Kubernetes control plane...
[init] Using Kubernetes version: v1.32.3
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action beforehand using 'kubeadm config images pull'
W0319 20:46:06.068605   26551 checks.go:846] detected that the sandbox image "registry.k8s.io/pause:3.8" of the container runtime is inconsistent with that used by kubeadm.It is recommended to use "registry.k8s.io/pause:3.10" as the CRI sandbox image.
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [control kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.91.107]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [control localhost] and IPs [172.31.91.107 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [control localhost] and IPs [172.31.91.107 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "super-admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 500.566499ms
[api-check] Waiting for a healthy API server. This can take up to 4m0s
[api-check] The API server is healthy after 5.50160501s
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Storing the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace
[upload-certs] Using certificate key:
3fe5022d6b40b0777a5b8e9e93a41adddf2d94341491ee58abdeb06c3ae11d58
[mark-control-plane] Marking the node control as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node control as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: fyqw7l.mitxy44k8s9sv9n6
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes running the following command on each as root:

  kubeadm join 172.31.91.107:6443 --token fyqw7l.mitxy44k8s9sv9n6 \
	--discovery-token-ca-cert-hash sha256:bf6fb6f282b57104daa929a4ed79a5c47265f38e409f43f3ebdbf2967cc5a856 \
	--control-plane --certificate-key 3fe5022d6b40b0777a5b8e9e93a41adddf2d94341491ee58abdeb06c3ae11d58

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.31.91.107:6443 --token fyqw7l.mitxy44k8s9sv9n6 \
	--discovery-token-ca-cert-hash sha256:bf6fb6f282b57104daa929a4ed79a5c47265f38e409f43f3ebdbf2967cc5a856 
/dev/fd/63: line 40: --apiserver-advertise-address=172.31.91.107: command not found

❌ kubeadm init failed. Exiting...

❌ Failed to execute kubeadm-init.sh. Exiting...

ubuntu@control:~$ mkdir -p $HOME/.kube
ubuntu@control:~$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
cp: overwrite '/home/ubuntu/.kube/config'? yes
ubuntu@control:~$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
ubuntu@control:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 12:2e:e4:29:d7:f7 brd ff:ff:ff:ff:ff:ff
    inet 172.31.91.107/20 metric 100 brd 172.31.95.255 scope global dynamic enX0
       valid_lft 2750sec preferred_lft 2750sec
    inet6 fe80::102e:e4ff:fe29:d7f7/64 scope link 
       valid_lft forever preferred_lft forever
4: flannel.1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 8951 qdisc noqueue state UNKNOWN group default 
    link/ether d6:53:56:ee:d2:46 brd ff:ff:ff:ff:ff:ff
    inet 10.244.0.0/32 scope global flannel.1
       valid_lft forever preferred_lft forever
    inet6 fe80::d453:56ff:feee:d246/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@control:~$ sudo ip link delete flannel.1
ubuntu@control:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 12:2e:e4:29:d7:f7 brd ff:ff:ff:ff:ff:ff
    inet 172.31.91.107/20 metric 100 brd 172.31.95.255 scope global dynamic enX0
       valid_lft 2693sec preferred_lft 2693sec
    inet6 fe80::102e:e4ff:fe29:d7f7/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@control:~$ kubectl cluster-info
Kubernetes control plane is running at https://172.31.91.107:6443
CoreDNS is running at https://172.31.91.107:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
ubuntu@control:~$ kubectl apply -f https://github.com/weaveworks/weave/releases/latest/download/weave-daemonset-k8s.yaml
serviceaccount/weave-net created
clusterrole.rbac.authorization.k8s.io/weave-net created
clusterrolebinding.rbac.authorization.k8s.io/weave-net created
role.rbac.authorization.k8s.io/weave-net created
rolebinding.rbac.authorization.k8s.io/weave-net created
daemonset.apps/weave-net created
ubuntu@control:~$ sudo systemctl restart kubelet
ubuntu@control:~$ kubectl get nods -o wide
error: the server doesn't have a resource type "nods"
ubuntu@control:~$ kubectl get nodes -o wide
NAME      STATUS     ROLES           AGE    VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
control   NotReady   control-plane   5m5s   v1.32.3   172.31.91.107   <none>        Ubuntu 24.04.1 LTS   6.8.0-1021-aws   containerd://1.7.25
ubuntu@control:~$ kubectl get pods -A
NAMESPACE     NAME                              READY   STATUS    RESTARTS        AGE
kube-system   coredns-668d6bf9bc-stlfm          0/1     Pending   0               5m12s
kube-system   coredns-668d6bf9bc-th6wj          0/1     Pending   0               5m12s
kube-system   etcd-control                      1/1     Running   1 (5m53s ago)   5m18s
kube-system   kube-apiserver-control            1/1     Running   1 (5m53s ago)   5m18s
kube-system   kube-controller-manager-control   1/1     Running   0               5m18s
kube-system   kube-proxy-vtvrf                  1/1     Running   0               5m12s
kube-system   kube-scheduler-control            1/1     Running   1 (5m53s ago)   5m18s
kube-system   weave-net-t4vvd                   2/2     Running   1 (65s ago)     69s
ubuntu@control:~$ kubectl get pods -A
NAMESPACE     NAME                              READY   STATUS    RESTARTS        AGE
kube-system   coredns-668d6bf9bc-stlfm          0/1     Pending   0               5m34s
kube-system   coredns-668d6bf9bc-th6wj          0/1     Pending   0               5m34s
kube-system   etcd-control                      1/1     Running   1 (6m15s ago)   5m40s
kube-system   kube-apiserver-control            1/1     Running   1 (6m15s ago)   5m40s
kube-system   kube-controller-manager-control   1/1     Running   0               5m40s
kube-system   kube-proxy-vtvrf                  1/1     Running   0               5m34s
kube-system   kube-scheduler-control            1/1     Running   1 (6m15s ago)   5m40s
kube-system   weave-net-t4vvd                   2/2     Running   1 (87s ago)     91s
ubuntu@control:~$ kubectl describe nodes control 
Name:               control
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=control
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 19 Mar 2025 20:46:15 +0000
Taints:             node-role.kubernetes.io/control-plane:NoSchedule
                    node.kubernetes.io/not-ready:NoSchedule
Unschedulable:      false
Lease:
  HolderIdentity:  control
  AcquireTime:     <unset>
  RenewTime:       Wed, 19 Mar 2025 20:52:32 +0000
Conditions:
  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----                 ------  -----------------                 ------------------                ------                       -------
  NetworkUnavailable   False   Wed, 19 Mar 2025 20:50:34 +0000   Wed, 19 Mar 2025 20:50:34 +0000   WeaveIsUp                    Weave pod has set this
  MemoryPressure       False   Wed, 19 Mar 2025 20:50:50 +0000   Wed, 19 Mar 2025 20:46:12 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure         False   Wed, 19 Mar 2025 20:50:50 +0000   Wed, 19 Mar 2025 20:46:12 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure          False   Wed, 19 Mar 2025 20:50:50 +0000   Wed, 19 Mar 2025 20:46:12 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready                False   Wed, 19 Mar 2025 20:50:50 +0000   Wed, 19 Mar 2025 20:46:12 +0000   KubeletNotReady              container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized
Addresses:
  InternalIP:  172.31.91.107
  Hostname:    control
Capacity:
  cpu:                2
  ephemeral-storage:  19221248Ki
  hugepages-2Mi:      0
  memory:             4006080Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17714302128
  hugepages-2Mi:      0
  memory:             3903680Ki
  pods:               110
System Info:
  Machine ID:                 ec2869b270390aaff66db971e798bb7f
  System UUID:                ec2869b2-7039-0aaf-f66d-b971e798bb7f
  Boot ID:                    26711c23-9613-4617-8c4b-42977feb2f09
  Kernel Version:             6.8.0-1021-aws
  OS Image:                   Ubuntu 24.04.1 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  containerd://1.7.25
  Kubelet Version:            v1.32.3
  Kube-Proxy Version:         v1.32.3
Non-terminated Pods:          (6 in total)
  Namespace                   Name                               CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                               ------------  ----------  ---------------  -------------  ---
  kube-system                 etcd-control                       100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         6m23s
  kube-system                 kube-apiserver-control             250m (12%)    0 (0%)      0 (0%)           0 (0%)         6m23s
  kube-system                 kube-controller-manager-control    200m (10%)    0 (0%)      0 (0%)           0 (0%)         6m23s
  kube-system                 kube-proxy-vtvrf                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         6m17s
  kube-system                 kube-scheduler-control             100m (5%)     0 (0%)      0 (0%)           0 (0%)         6m23s
  kube-system                 weave-net-t4vvd                    100m (5%)     0 (0%)      0 (0%)           0 (0%)         2m14s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (37%)  0 (0%)
  memory             100Mi (2%)  0 (0%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type     Reason                   Age                    From             Message
  ----     ------                   ----                   ----             -------
  Normal   Starting                 6m16s                  kube-proxy       
  Normal   Starting                 6m30s                  kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      6m30s                  kubelet          invalid capacity 0 on image filesystem
  Normal   NodeHasSufficientMemory  6m29s (x8 over 6m29s)  kubelet          Node control status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    6m29s (x8 over 6m29s)  kubelet          Node control status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     6m29s (x7 over 6m29s)  kubelet          Node control status is now: NodeHasSufficientPID
  Normal   NodeAllocatableEnforced  6m29s                  kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  6m23s                  kubelet          Node control status is now: NodeHasSufficientMemory
  Warning  InvalidDiskCapacity      6m23s                  kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  6m23s                  kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasNoDiskPressure    6m23s                  kubelet          Node control status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     6m23s                  kubelet          Node control status is now: NodeHasSufficientPID
  Normal   Starting                 6m23s                  kubelet          Starting kubelet.
  Normal   RegisteredNode           6m18s                  node-controller  Node control event: Registered Node control in Controller
  Normal   Starting                 111s                   kubelet          Starting kubelet.
  Warning  InvalidDiskCapacity      111s                   kubelet          invalid capacity 0 on image filesystem
  Normal   NodeAllocatableEnforced  111s                   kubelet          Updated Node Allocatable limit across pods
  Normal   NodeHasSufficientMemory  111s                   kubelet          Node control status is now: NodeHasSufficientMemory
  Normal   NodeHasNoDiskPressure    111s                   kubelet          Node control status is now: NodeHasNoDiskPressure
  Normal   NodeHasSufficientPID     111s                   kubelet          Node control status is now: NodeHasSufficientPID
ubuntu@control:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 12:2e:e4:29:d7:f7 brd ff:ff:ff:ff:ff:ff
    inet 172.31.91.107/20 metric 100 brd 172.31.95.255 scope global dynamic enX0
       valid_lft 2417sec preferred_lft 2417sec
    inet6 fe80::102e:e4ff:fe29:d7f7/64 scope link 
       valid_lft forever preferred_lft forever
5: datapath: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue state UNKNOWN group default qlen 1000
    link/ether 42:c4:8a:f3:65:65 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::40c4:8aff:fef3:6565/64 scope link 
       valid_lft forever preferred_lft forever
7: weave: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue state UP group default qlen 1000
    link/ether 06:81:a3:01:5b:3e brd ff:ff:ff:ff:ff:ff
    inet 10.32.0.1/12 brd 10.47.255.255 scope global weave
       valid_lft forever preferred_lft forever
    inet6 fe80::481:a3ff:fe01:5b3e/64 scope link 
       valid_lft forever preferred_lft forever
9: vethwe-datapath@vethwe-bridge: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue master datapath state UP group default 
    link/ether ce:65:9d:2c:e0:15 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::cce6:80ff:fe19:b2d4/64 scope link 
       valid_lft forever preferred_lft forever
10: vethwe-bridge@vethwe-datapath: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue master weave state UP group default 
    link/ether 66:be:5c:41:01:7b brd ff:ff:ff:ff:ff:ff
    inet6 fe80::6c2e:9aff:fee2:8ba9/64 scope link 
       valid_lft forever preferred_lft forever
11: vxlan-6784: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 65535 qdisc noqueue master datapath state UNKNOWN group default qlen 1000
    link/ether a6:fa:5c:a1:8c:5d brd ff:ff:ff:ff:ff:ff
    inet6 fe80::dc33:2ff:fe90:aa06/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@control:~$ kubectl get pods -n kube-system
NAME                              READY   STATUS    RESTARTS        AGE
coredns-668d6bf9bc-stlfm          0/1     Pending   0               7m59s
coredns-668d6bf9bc-th6wj          0/1     Pending   0               7m59s
etcd-control                      1/1     Running   1 (8m40s ago)   8m5s
kube-apiserver-control            1/1     Running   1 (8m40s ago)   8m5s
kube-controller-manager-control   1/1     Running   0               8m5s
kube-proxy-vtvrf                  1/1     Running   0               7m59s
kube-scheduler-control            1/1     Running   1 (8m40s ago)   8m5s
weave-net-t4vvd                   2/2     Running   1 (3m52s ago)   3m56s
ubuntu@control:~$ kubectl logs -n kube-system -l name=weave-net
Defaulted container "weave" out of: weave, weave-npc, weave-init (init)
INFO: 2025/03/19 20:50:33.891547 Listening for HTTP control messages on 127.0.0.1:6784
INFO: 2025/03/19 20:50:33.891566 Listening for metrics requests on 0.0.0.0:6782
INFO: 2025/03/19 20:50:33.960768 Error checking version: Get "https://checkpoint-api.weave.works/v1/check/weave-net?arch=amd64&flag_docker-version=none&flag_kernel-version=6.8.0-1021-aws&os=linux&signature=wI5CWLYX2GD8Ii4p8w%2BHBfT787yHDxdjMQ4DJys%2BaKM%3D&version=git-34de0b10a69c": dial tcp: lookup checkpoint-api.weave.works on 10.96.0.10:53: write udp 172.31.91.107:48315->10.96.0.10:53: write: operation not permitted
INFO: 2025/03/19 20:50:34.677015 [kube-peers] Added myself to peer list &{[{06:81:a3:01:5b:3e control}]}
DEBU: 2025/03/19 20:50:34.684286 [kube-peers] Nodes that have disappeared: map[]
INFO: 2025/03/19 20:50:34.697196 Assuming quorum size of 1
INFO: 2025/03/19 20:50:34.697423 adding entry 10.32.0.0/12 to weaver-no-masq-local of 0
INFO: 2025/03/19 20:50:34.697440 added entry 10.32.0.0/12 to weaver-no-masq-local of 0
10.32.0.1
DEBU: 2025/03/19 20:50:34.762550 registering for updates for node delete events
ubuntu@control:~$ ls -l /opt/cni/bin
total 103716
-rw-r--r-- 1 root root    11357 Jan  6 16:12 LICENSE
-rw-r--r-- 1 root root     2343 Jan  6 16:12 README.md
-rwxr-xr-x 1 root root  4655178 Jan  6 16:12 bandwidth
-rwxr-xr-x 1 root root  5287212 Jan  6 16:12 bridge
-rwxr-xr-x 1 root root 12762814 Jan  6 16:12 dhcp
-rwxr-xr-x 1 root root  4847854 Jan  6 16:12 dummy
-rwxr-xr-x 1 root root  5315134 Jan  6 16:12 firewall
-rwxr-xr-x 1 root root  2835118 Mar 19 20:21 flannel
-rwxr-xr-x 1 root root  4792010 Jan  6 16:12 host-device
-rwxr-xr-x 1 root root  4060355 Jan  6 16:12 host-local
-rwxr-xr-x 1 root root  4870719 Jan  6 16:12 ipvlan
-rwxr-xr-x 1 root root  4114939 Jan  6 16:12 loopback
-rwxr-xr-x 1 root root  4903324 Jan  6 16:12 macvlan
-rwxr-xr-x 1 root root  4713429 Jan  6 16:12 portmap
-rwxr-xr-x 1 root root  5076613 Jan  6 16:12 ptp
-rwxr-xr-x 1 root root  4333422 Jan  6 16:12 sbr
-rwxr-xr-x 1 root root  3651755 Jan  6 16:12 static
-rwxr-xr-x 1 root root  4928874 Jan  6 16:12 tap
-rwxr-xr-x 1 root root  4208424 Jan  6 16:12 tuning
-rwxr-xr-x 1 root root  4868252 Jan  6 16:12 vlan
-rwxr-xr-x 1 root root  4488658 Jan  6 16:12 vrf
lrwxrwxrwx 1 root root       19 Mar 19 20:50 weave-ipam -> weave-plugin-latest
lrwxrwxrwx 1 root root       19 Mar 19 20:50 weave-net -> weave-plugin-latest
-rwxr-xr-x 1 root root 11437320 Mar 19 20:50 weave-plugin-latest
ubuntu@control:~$ ls -l /etc/cni/net.d/
total 4
-rw-r--r-- 1 root root 318 Mar 19 20:50 10-weave.conflist
ubuntu@control:~$ ip a | grep -E 'cni0|weave'
7: weave: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue state UP group default qlen 1000
    inet 10.32.0.1/12 brd 10.47.255.255 scope global weave
10: vethwe-bridge@vethwe-datapath: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue master weave state UP group default 
ubuntu@control:~$ kubectl delete pod -n kube-system -l name=weave-net
pod "weave-net-t4vvd" deleted
ubuntu@control:~$ systemctl restart kubelet
systemctl restart containerd  # or systemctl restart docker
==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ====
Authentication is required to restart 'kubelet.service'.
Authenticating as: Ubuntu (ubuntu)
Password: 
polkit-agent-helper-1: pam_authenticate failed: Authentication failure
==== AUTHENTICATION FAILED ====
Failed to restart kubelet.service: Access denied
See system logs and 'systemctl status kubelet.service' for details.
==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ====
Authentication is required to restart 'containerd.service'.
Authenticating as: Ubuntu (ubuntu)
Password: 
polkit-agent-helper-1: pam_authenticate failed: Authentication failure
==== AUTHENTICATION FAILED ====
Failed to restart containerd.service: Access denied
See system logs and 'systemctl status containerd.service' for details.
ubuntu@control:~$ sudo systemctl restart kubelet
ubuntu@control:~$ sudo systemctl restart containerd  # or systemctl restart docker
ubuntu@control:~$ ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host noprefixroute 
       valid_lft forever preferred_lft forever
2: enX0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 9001 qdisc mq state UP group default qlen 1000
    link/ether 12:2e:e4:29:d7:f7 brd ff:ff:ff:ff:ff:ff
    inet 172.31.91.107/20 metric 100 brd 172.31.95.255 scope global dynamic enX0
       valid_lft 2210sec preferred_lft 2210sec
    inet6 fe80::102e:e4ff:fe29:d7f7/64 scope link 
       valid_lft forever preferred_lft forever
5: datapath: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue state UNKNOWN group default qlen 1000
    link/ether 42:c4:8a:f3:65:65 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::40c4:8aff:fef3:6565/64 scope link 
       valid_lft forever preferred_lft forever
7: weave: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue state UP group default qlen 1000
    link/ether 06:81:a3:01:5b:3e brd ff:ff:ff:ff:ff:ff
    inet 10.32.0.1/12 brd 10.47.255.255 scope global weave
       valid_lft forever preferred_lft forever
    inet6 fe80::481:a3ff:fe01:5b3e/64 scope link 
       valid_lft forever preferred_lft forever
9: vethwe-datapath@vethwe-bridge: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue master datapath state UP group default 
    link/ether ce:65:9d:2c:e0:15 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::cce6:80ff:fe19:b2d4/64 scope link 
       valid_lft forever preferred_lft forever
10: vethwe-bridge@vethwe-datapath: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue master weave state UP group default 
    link/ether 66:be:5c:41:01:7b brd ff:ff:ff:ff:ff:ff
    inet6 fe80::6c2e:9aff:fee2:8ba9/64 scope link 
       valid_lft forever preferred_lft forever
14: vxlan-6784: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 65535 qdisc noqueue master datapath state UNKNOWN group default qlen 1000
    link/ether a6:fa:5c:a1:8c:5d brd ff:ff:ff:ff:ff:ff
    inet6 fe80::7045:45ff:fe75:2a2a/64 scope link 
       valid_lft forever preferred_lft forever
16: vethweplc666282@if15: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue master weave state UP group default 
    link/ether 02:fd:4c:00:43:f2 brd ff:ff:ff:ff:ff:ff link-netns cni-72500ca3-ddc2-7755-86ec-00f4bb8b6290
    inet6 fe80::fd:4cff:fe00:43f2/64 scope link 
       valid_lft forever preferred_lft forever
18: vethwepleb48a0e@if17: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue master weave state UP group default 
    link/ether 16:e9:a7:25:78:8d brd ff:ff:ff:ff:ff:ff link-netns cni-2ccaf2ec-891f-1f10-eca8-973e159586be
    inet6 fe80::24a5:e4ff:fee4:fe1e/64 scope link 
       valid_lft forever preferred_lft forever
ubuntu@control:~$ ip a | grep -E 'cni0|weave'
7: weave: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue state UP group default qlen 1000
    inet 10.32.0.1/12 brd 10.47.255.255 scope global weave
10: vethwe-bridge@vethwe-datapath: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue master weave state UP group default 
16: vethweplc666282@if15: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue master weave state UP group default 
18: vethwepleb48a0e@if17: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1376 qdisc noqueue master weave state UP group default 
ubuntu@control:~$ kubectl get nodes
NAME      STATUS   ROLES           AGE   VERSION
control   Ready    control-plane   11m   v1.32.3
ubuntu@control:~$ kubectl get pods -A
NAMESPACE     NAME                              READY   STATUS    RESTARTS      AGE
kube-system   coredns-668d6bf9bc-stlfm          1/1     Running   0             12m
kube-system   coredns-668d6bf9bc-th6wj          1/1     Running   0             12m
kube-system   etcd-control                      1/1     Running   1 (12m ago)   12m
kube-system   kube-apiserver-control            1/1     Running   1 (12m ago)   12m
kube-system   kube-controller-manager-control   1/1     Running   0             12m
kube-system   kube-proxy-vtvrf                  1/1     Running   0             12m
kube-system   kube-scheduler-control            1/1     Running   1 (12m ago)   12m
kube-system   weave-net-4ghq2                   2/2     Running   0             2m12s
ubuntu@control:~$ sudo ls /etc/cni/net.d/
10-weave.conflist
ubuntu@control:~$ client_loop: send disconnect: Broken pipe
ibtisam@ibtisam-iq:~$ 







